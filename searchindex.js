Search.setIndex({"alltitles": {"1. Import": [[100, "import"]], "1. Install the virtualenv package if you haven\u2019t already": [[102, "install-the-virtualenv-package-if-you-haven-t-already"]], "2. Create Workflow": [[100, "create-workflow"]], "2. Create a new virtual environment in your selected directory": [[102, "create-a-new-virtual-environment-in-your-selected-directory"]], "3. Activate the virtual environment": [[102, "activate-the-virtual-environment"]], "3. Add and connect algorithm": [[100, "add-and-connect-algorithm"]], "4. Algorithm parameters tuning": [[100, "algorithm-parameters-tuning"]], "5. Apply your workflow on your image": [[100, "apply-your-workflow-on-your-image"]], "5. Managing outputs": [[100, "managing-outputs"]], "6. Display your results": [[100, "display-your-results"]], "API Reference": [[110, "api-reference"]], "About The Project": [[105, "about-the-project"]], "ActionFlag": [[24, "actionflag"]], "Add by auto-completion": [[100, "add-by-auto-completion"]], "Add by name": [[100, "add-by-name"]], "Add parameters": [[107, "add-parameters"]], "Adding widgets to the algorithm": [[108, "adding-widgets-to-the-algorithm"]], "Advanced usage : export results to JSON": [[104, "advanced-usage-export-results-to-json"]], "Advanced usage : export workflow to JSON": [[104, "advanced-usage-export-workflow-to-json"]], "Advanced usage : workflow with 1 algorithm + custom settings": [[104, "advanced-usage-workflow-with-1-algorithm-custom-settings"]], "Advanced usage : workflow with 2 algorithms + custom settings": [[104, "advanced-usage-workflow-with-2-algorithms-custom-settings"]], "AlgoType": [[25, "algotype"]], "Algorithm creation with ikomia-cli": [[109, "algorithm-creation-with-ikomia-cli"]], "Algorithm integration": [[109, "algorithm-integration"]], "Algorithm search": [[99, "algorithm-search"]], "Algorithm settings": [[99, "algorithm-settings"]], "ApiLanguage": [[17, "apilanguage"]], "Base implementation": [[108, "base-implementation"]], "Basic Process with Ikomia Workflow": [[113, "basic-process-with-ikomia-workflow"]], "Basic usage : workflow with 1 algorithm": [[104, "basic-usage-workflow-with-1-algorithm"]], "Basic usage : workflow with 1 algorithm from Ikomia HUB": [[104, "basic-usage-workflow-with-1-algorithm-from-ikomia-hub"]], "Blurring Face Detection": [[113, "blurring-face-detection"]], "By a Dict approach": [[100, "by-a-dict-approach"]], "By auto-completion": [[100, "by-auto-completion"]], "C2dImageInteractiveTask": [[1, "c2dimageinteractivetask"]], "C2dImageTask": [[2, "c2dimagetask"]], "CArrayIO": [[54, "carrayio"]], "CBlobMeasureIO": [[55, "cblobmeasureio"]], "CClassificationTask": [[3, "cclassificationtask"]], "CDataStringIO": [[56, "cdatastringio"]], "CDatasetIO": [[57, "cdatasetio"]], "CDnnTrainTask": [[4, "cdnntraintask"]], "CException": [[18, "cexception"]], "CGraphicsComplexPolygon": [[26, "cgraphicscomplexpolygon"]], "CGraphicsConversion": [[27, "cgraphicsconversion"]], "CGraphicsEllipse": [[28, "cgraphicsellipse"]], "CGraphicsInput": [[58, "cgraphicsinput"]], "CGraphicsItem": [[29, "cgraphicsitem"]], "CGraphicsOutput": [[59, "cgraphicsoutput"]], "CGraphicsPoint": [[30, "cgraphicspoint"]], "CGraphicsPolygon": [[31, "cgraphicspolygon"]], "CGraphicsPolyline": [[32, "cgraphicspolyline"]], "CGraphicsRectangle": [[33, "cgraphicsrectangle"]], "CGraphicsText": [[34, "cgraphicstext"]], "CIkomiaRegistry": [[5, "cikomiaregistry"]], "CImageIO": [[60, "cimageio"]], "CInstanceSegmentation": [[61, "cinstancesegmentation"]], "CInstanceSegmentationIO": [[62, "cinstancesegmentationio"]], "CInstanceSegmentationTask": [[6, "cinstancesegmentationtask"]], "CKeypointDetectionTask": [[7, "ckeypointdetectiontask"]], "CKeypointLink": [[63, "ckeypointlink"]], "CKeypointsIO": [[64, "ckeypointsio"]], "CMeasure": [[35, "cmeasure"]], "CMemoryInfo": [[19, "cmemoryinfo"]], "CNumericIO": [[65, "cnumericio"]], "CObjectDetection": [[66, "cobjectdetection"]], "CObjectDetectionIO": [[67, "cobjectdetectionio"]], "CObjectDetectionTask": [[8, "cobjectdetectiontask"]], "CObjectKeypoints": [[68, "cobjectkeypoints"]], "CObjectMeasure": [[69, "cobjectmeasure"]], "CPathIO": [[70, "cpathio"]], "CPluginProcessInterface": [[71, "cpluginprocessinterface"]], "CPointF": [[36, "cpointf"]], "CSemanticSegmentationIO": [[72, "csemanticsegmentationio"]], "CSemanticSegmentationTask": [[9, "csemanticsegmentationtask"]], "CTaskFactory": [[73, "ctaskfactory"]], "CTaskInfo": [[10, "ctaskinfo"]], "CTextField": [[74, "ctextfield"]], "CTextIO": [[75, "ctextio"]], "CTimer": [[20, "ctimer"]], "CVideoIO": [[76, "cvideoio"]], "CVideoOFTask": [[11, "cvideooftask"]], "CVideoTask": [[12, "cvideotask"]], "CVideoTrackingTask": [[13, "cvideotrackingtask"]], "CWidgetFactory": [[77, "cwidgetfactory"]], "CWidgetOutput": [[78, "cwidgetoutput"]], "CWorkflow": [[14, "cworkflow"]], "CWorkflowTask": [[37, "cworkflowtask"]], "CWorkflowTaskIO": [[38, "cworkflowtaskio"]], "CWorkflowTaskIOFactory": [[39, "cworkflowtaskiofactory"]], "CWorkflowTaskParam": [[40, "cworkflowtaskparam"]], "CWorkflowTaskWidget": [[41, "cworkflowtaskwidget"]], "Code": [[104, "code"], [104, "id2"], [104, "id5"], [104, "id8"], [104, "id10"], [104, "id12"]], "Common I/O": [[98, "common-i-o"], [106, "common-i-o"]], "Conclusion": [[104, "conclusion"], [111, "conclusion"]], "Connect manually": [[100, "connect-manually"]], "Connecting widget to process": [[108, "connecting-widget-to-process"]], "CpuArch": [[21, "cpuarch"]], "Create and integrate your algorithm in workflows": [[109, "create-and-integrate-your-algorithm-in-workflows"]], "Creating a Virtual Environment": [[102, "creating-a-virtual-environment"]], "DataDictIO": [[0, "datadictio"]], "DatadictIO": [[85, "module-ikomia.dataprocess.datadictIO"]], "Dataset": [[89, "module-ikomia.dnn.dataset"]], "DatasetIO": [[90, "module-ikomia.dnn.datasetio"]], "DisplayIO": [[94, "module-ikomia.utils.displayIO"]], "DnnTrain": [[91, "module-ikomia.dnn.dnntrain"]], "Face detection": [[113, "face-detection"]], "First Steps in Object Detection with Ikomia API": [[111, "first-steps-in-object-detection-with-ikomia-api"]], "First Steps with Camera Stream Processing with Ikomia": [[113, "first-steps-with-camera-stream-processing-with-ikomia"]], "First steps in Image Classification with Ikomia API": [[103, "first-steps-in-image-classification-with-ikomia-api"]], "From folder (batch processing)": [[100, "from-folder-batch-processing"]], "From image URL": [[100, "from-image-url"]], "From image buffer": [[100, "from-image-buffer"]], "From image path": [[100, "from-image-path"]], "Getting Started": [[104, "getting-started"]], "Going deeper with workflows": [[100, "going-deeper-with-workflows"]], "GraphicsEllipseProperty": [[42, "graphicsellipseproperty"]], "GraphicsItem": [[43, "graphicsitem"]], "GraphicsPointProperty": [[44, "graphicspointproperty"]], "GraphicsPolygonProperty": [[45, "graphicspolygonproperty"]], "GraphicsPolylineProperty": [[46, "graphicspolylineproperty"]], "GraphicsRectProperty": [[47, "graphicsrectproperty"]], "GraphicsShape": [[48, "graphicsshape"]], "GraphicsTextProperty": [[49, "graphicstextproperty"]], "How to add parameters to your algorithm": [[107, "how-to-add-parameters-to-your-algorithm"]], "How to create a virtual environment": [[102, "how-to-create-a-virtual-environment"]], "How to make a nice widget for your algorithm": [[108, "how-to-make-a-nice-widget-for-your-algorithm"]], "IODataType": [[50, "iodatatype"]], "IkDatasetIO": [[81, "ikdatasetio"]], "Ikomia API Documentation": [[105, "ikomia-api-documentation"]], "IkomiaRegistry": [[15, "ikomiaregistry"]], "Image": [[98, "image"]], "Inference": [[103, "inference"]], "Input/Output management": [[98, "input-output-management"]], "Inputs": [[98, "inputs"]], "Installation": [[104, "installation"]], "Installing Ikomia API": [[104, "installing-ikomia-api"]], "Instance Segmentation I/O": [[98, "instance-segmentation-i-o"]], "Key Features": [[105, "key-features"]], "Load and run your workflow": [[101, "load-and-run-your-workflow"]], "MeasureId": [[51, "measureid"]], "Modify the workflow": [[101, "modify-the-workflow"]], "NumericOutputType": [[79, "numericoutputtype"]], "OSType": [[22, "ostype"]], "Object Detection I/O": [[98, "object-detection-i-o"]], "Object Segmentation I/O": [[98, "object-segmentation-i-o"]], "Outputs": [[98, "outputs"]], "PlotType": [[80, "plottype"]], "PluginState": [[23, "pluginstate"]], "Pose Estimation I/O": [[98, "pose-estimation-i-o"]], "Pre-requisites": [[104, "pre-requisites"]], "Print() is your best friend": [[98, "print-is-your-best-friend"]], "Process Stream from your Webcam": [[113, "process-stream-from-your-webcam"]], "PyCore": [[83, "module-ikomia.core.pycore"]], "PyDataProcess": [[86, "module-ikomia.dataprocess.pydataprocess"]], "PyQtUtils": [[95, "module-ikomia.utils.pyqtutils"]], "PyUtils": [[96, "module-ikomia.utils.pyutils"]], "QtConversion": [[97, "module-ikomia.utils.qtconversion"]], "Registry": [[87, "module-ikomia.dataprocess.registry"]], "Release Notes": [[112, "release-notes"]], "Resources": [[113, "resources"]], "Results": [[104, "results"], [104, "id3"], [104, "id6"], [104, "id9"], [104, "id11"], [104, "id13"]], "Results as JSON": [[100, "results-as-json"]], "Results as objects": [[100, "results-as-objects"]], "Save and load your workflow": [[101, "save-and-load-your-workflow"]], "Save your workflow": [[101, "save-your-workflow"]], "Semantic Segmentation I/O": [[98, "semantic-segmentation-i-o"]], "Single image": [[100, "single-image"]], "Single image with graphics (bounding boxes)": [[100, "single-image-with-graphics-bounding-boxes"]], "Specific I/O": [[106, "specific-i-o"]], "Specific I/O for your algorithm": [[106, "specific-i-o-for-your-algorithm"]], "Step-by-step explanations": [[100, "step-by-step-explanations"]], "Task": [[84, "module-ikomia.core.task"]], "TaskParam": [[53, "taskparam"]], "TaskType": [[52, "tasktype"]], "Test Object Detection Algorithms": [[111, "test-object-detection-algorithms"]], "Test your Webcam without Ikomia Workflow": [[113, "test-your-webcam-without-ikomia-workflow"]], "The Problem": [[111, "the-problem"]], "The ik auto-completion system": [[99, "the-ik-auto-completion-system"]], "The ik structure": [[99, "the-ik-structure"]], "TorchDatasetMapper": [[92, "module-ikomia.dnn.torch.datasetmapper"]], "Torchvision models": [[93, "module-ikomia.dnn.torch.models"]], "Train Your Custom Model": [[111, "train-your-custom-model"]], "TrainProcess": [[82, "trainprocess"]], "Training": [[103, "training"]], "Troubleshooting Tips": [[113, "troubleshooting-tips"]], "Use parameters in your code": [[107, "use-parameters-in-your-code"]], "Use parameters in your workflows": [[107, "use-parameters-in-your-workflows"]], "Workflow": [[16, "workflow"], [88, "module-ikomia.dataprocess.workflow"]], "Workflow Structure": [[104, "workflow-structure"], [104, "id1"], [104, "id4"], [104, "id7"]]}, "docnames": ["_autosummary/_autosummary/ikomia.dataprocess.datadictIO.DataDictIO", "_autosummary/_autosummary/ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask", "_autosummary/_autosummary/ikomia.dataprocess.pydataprocess.C2dImageTask", "_autosummary/_autosummary/ikomia.dataprocess.pydataprocess.CClassificationTask", "_autosummary/_autosummary/ikomia.dataprocess.pydataprocess.CDnnTrainTask", "_autosummary/_autosummary/ikomia.dataprocess.pydataprocess.CIkomiaRegistry", "_autosummary/_autosummary/ikomia.dataprocess.pydataprocess.CInstanceSegmentationTask", "_autosummary/_autosummary/ikomia.dataprocess.pydataprocess.CKeypointDetectionTask", "_autosummary/_autosummary/ikomia.dataprocess.pydataprocess.CObjectDetectionTask", "_autosummary/_autosummary/ikomia.dataprocess.pydataprocess.CSemanticSegmentationTask", "_autosummary/_autosummary/ikomia.dataprocess.pydataprocess.CTaskInfo", "_autosummary/_autosummary/ikomia.dataprocess.pydataprocess.CVideoOFTask", "_autosummary/_autosummary/ikomia.dataprocess.pydataprocess.CVideoTask", "_autosummary/_autosummary/ikomia.dataprocess.pydataprocess.CVideoTrackingTask", "_autosummary/_autosummary/ikomia.dataprocess.pydataprocess.CWorkflow", "_autosummary/_autosummary/ikomia.dataprocess.registry.IkomiaRegistry", "_autosummary/_autosummary/ikomia.dataprocess.workflow.Workflow", "_autosummary/_autosummary/ikomia.utils.pyutils.ApiLanguage", "_autosummary/_autosummary/ikomia.utils.pyutils.CException", "_autosummary/_autosummary/ikomia.utils.pyutils.CMemoryInfo", "_autosummary/_autosummary/ikomia.utils.pyutils.CTimer", "_autosummary/_autosummary/ikomia.utils.pyutils.CpuArch", "_autosummary/_autosummary/ikomia.utils.pyutils.OSType", "_autosummary/_autosummary/ikomia.utils.pyutils.PluginState", "_autosummary/_autosummaryv/ikomia.core.pycore.ActionFlag", "_autosummary/_autosummaryv/ikomia.core.pycore.AlgoType", "_autosummary/_autosummaryv/ikomia.core.pycore.CGraphicsComplexPolygon", "_autosummary/_autosummaryv/ikomia.core.pycore.CGraphicsConversion", "_autosummary/_autosummaryv/ikomia.core.pycore.CGraphicsEllipse", "_autosummary/_autosummaryv/ikomia.core.pycore.CGraphicsItem", "_autosummary/_autosummaryv/ikomia.core.pycore.CGraphicsPoint", "_autosummary/_autosummaryv/ikomia.core.pycore.CGraphicsPolygon", "_autosummary/_autosummaryv/ikomia.core.pycore.CGraphicsPolyline", "_autosummary/_autosummaryv/ikomia.core.pycore.CGraphicsRectangle", "_autosummary/_autosummaryv/ikomia.core.pycore.CGraphicsText", "_autosummary/_autosummaryv/ikomia.core.pycore.CMeasure", "_autosummary/_autosummaryv/ikomia.core.pycore.CPointF", "_autosummary/_autosummaryv/ikomia.core.pycore.CWorkflowTask", "_autosummary/_autosummaryv/ikomia.core.pycore.CWorkflowTaskIO", "_autosummary/_autosummaryv/ikomia.core.pycore.CWorkflowTaskIOFactory", "_autosummary/_autosummaryv/ikomia.core.pycore.CWorkflowTaskParam", "_autosummary/_autosummaryv/ikomia.core.pycore.CWorkflowTaskWidget", "_autosummary/_autosummaryv/ikomia.core.pycore.GraphicsEllipseProperty", "_autosummary/_autosummaryv/ikomia.core.pycore.GraphicsItem", "_autosummary/_autosummaryv/ikomia.core.pycore.GraphicsPointProperty", "_autosummary/_autosummaryv/ikomia.core.pycore.GraphicsPolygonProperty", "_autosummary/_autosummaryv/ikomia.core.pycore.GraphicsPolylineProperty", "_autosummary/_autosummaryv/ikomia.core.pycore.GraphicsRectProperty", "_autosummary/_autosummaryv/ikomia.core.pycore.GraphicsShape", "_autosummary/_autosummaryv/ikomia.core.pycore.GraphicsTextProperty", "_autosummary/_autosummaryv/ikomia.core.pycore.IODataType", "_autosummary/_autosummaryv/ikomia.core.pycore.MeasureId", "_autosummary/_autosummaryv/ikomia.core.pycore.TaskType", "_autosummary/_autosummaryv/ikomia.core.task.TaskParam", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CArrayIO", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CBlobMeasureIO", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CDataStringIO", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CDatasetIO", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CGraphicsInput", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CGraphicsOutput", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CImageIO", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CInstanceSegmentation", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CInstanceSegmentationIO", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CKeypointLink", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CKeypointsIO", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CNumericIO", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CObjectDetection", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CObjectDetectionIO", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CObjectKeypoints", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CObjectMeasure", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CPathIO", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CPluginProcessInterface", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CSemanticSegmentationIO", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CTaskFactory", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CTextField", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CTextIO", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CVideoIO", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CWidgetFactory", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CWidgetOutput", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.NumericOutputType", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.PlotType", "_autosummary/_autosummaryv/ikomia.dnn.datasetio.IkDatasetIO", "_autosummary/_autosummaryv/ikomia.dnn.dnntrain.TrainProcess", "_autosummary/ikomia.core.pycore", "_autosummary/ikomia.core.task", "_autosummary/ikomia.dataprocess.datadictIO", "_autosummary/ikomia.dataprocess.pydataprocess", "_autosummary/ikomia.dataprocess.registry", "_autosummary/ikomia.dataprocess.workflow", "_autosummary/ikomia.dnn.dataset", "_autosummary/ikomia.dnn.datasetio", "_autosummary/ikomia.dnn.dnntrain", "_autosummary/ikomia.dnn.torch.datasetmapper", "_autosummary/ikomia.dnn.torch.models", "_autosummary/ikomia.utils.displayIO", "_autosummary/ikomia.utils.pyqtutils", "_autosummary/ikomia.utils.pyutils", "_autosummary/ikomia.utils.qtconversion", "advanced_guide/IO_management", "advanced_guide/ik_namespace", "advanced_guide/index", "advanced_guide/save_and_load_workflow", "bonus/virtual_env", "classification/index", "getting_started", "index", "integration/algo_IO", "integration/algo_parameters", "integration/algo_widget", "integration/index", "modules", "object_detection/index", "release_notes/index", "tutorials/how_to_on_stream"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["_autosummary/_autosummary/ikomia.dataprocess.datadictIO.DataDictIO.rst", "_autosummary/_autosummary/ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.rst", "_autosummary/_autosummary/ikomia.dataprocess.pydataprocess.C2dImageTask.rst", "_autosummary/_autosummary/ikomia.dataprocess.pydataprocess.CClassificationTask.rst", "_autosummary/_autosummary/ikomia.dataprocess.pydataprocess.CDnnTrainTask.rst", "_autosummary/_autosummary/ikomia.dataprocess.pydataprocess.CIkomiaRegistry.rst", "_autosummary/_autosummary/ikomia.dataprocess.pydataprocess.CInstanceSegmentationTask.rst", "_autosummary/_autosummary/ikomia.dataprocess.pydataprocess.CKeypointDetectionTask.rst", "_autosummary/_autosummary/ikomia.dataprocess.pydataprocess.CObjectDetectionTask.rst", "_autosummary/_autosummary/ikomia.dataprocess.pydataprocess.CSemanticSegmentationTask.rst", "_autosummary/_autosummary/ikomia.dataprocess.pydataprocess.CTaskInfo.rst", "_autosummary/_autosummary/ikomia.dataprocess.pydataprocess.CVideoOFTask.rst", "_autosummary/_autosummary/ikomia.dataprocess.pydataprocess.CVideoTask.rst", "_autosummary/_autosummary/ikomia.dataprocess.pydataprocess.CVideoTrackingTask.rst", "_autosummary/_autosummary/ikomia.dataprocess.pydataprocess.CWorkflow.rst", "_autosummary/_autosummary/ikomia.dataprocess.registry.IkomiaRegistry.rst", "_autosummary/_autosummary/ikomia.dataprocess.workflow.Workflow.rst", "_autosummary/_autosummary/ikomia.utils.pyutils.ApiLanguage.rst", "_autosummary/_autosummary/ikomia.utils.pyutils.CException.rst", "_autosummary/_autosummary/ikomia.utils.pyutils.CMemoryInfo.rst", "_autosummary/_autosummary/ikomia.utils.pyutils.CTimer.rst", "_autosummary/_autosummary/ikomia.utils.pyutils.CpuArch.rst", "_autosummary/_autosummary/ikomia.utils.pyutils.OSType.rst", "_autosummary/_autosummary/ikomia.utils.pyutils.PluginState.rst", "_autosummary/_autosummaryv/ikomia.core.pycore.ActionFlag.rst", "_autosummary/_autosummaryv/ikomia.core.pycore.AlgoType.rst", "_autosummary/_autosummaryv/ikomia.core.pycore.CGraphicsComplexPolygon.rst", "_autosummary/_autosummaryv/ikomia.core.pycore.CGraphicsConversion.rst", "_autosummary/_autosummaryv/ikomia.core.pycore.CGraphicsEllipse.rst", "_autosummary/_autosummaryv/ikomia.core.pycore.CGraphicsItem.rst", "_autosummary/_autosummaryv/ikomia.core.pycore.CGraphicsPoint.rst", "_autosummary/_autosummaryv/ikomia.core.pycore.CGraphicsPolygon.rst", "_autosummary/_autosummaryv/ikomia.core.pycore.CGraphicsPolyline.rst", "_autosummary/_autosummaryv/ikomia.core.pycore.CGraphicsRectangle.rst", "_autosummary/_autosummaryv/ikomia.core.pycore.CGraphicsText.rst", "_autosummary/_autosummaryv/ikomia.core.pycore.CMeasure.rst", "_autosummary/_autosummaryv/ikomia.core.pycore.CPointF.rst", "_autosummary/_autosummaryv/ikomia.core.pycore.CWorkflowTask.rst", "_autosummary/_autosummaryv/ikomia.core.pycore.CWorkflowTaskIO.rst", "_autosummary/_autosummaryv/ikomia.core.pycore.CWorkflowTaskIOFactory.rst", "_autosummary/_autosummaryv/ikomia.core.pycore.CWorkflowTaskParam.rst", "_autosummary/_autosummaryv/ikomia.core.pycore.CWorkflowTaskWidget.rst", "_autosummary/_autosummaryv/ikomia.core.pycore.GraphicsEllipseProperty.rst", "_autosummary/_autosummaryv/ikomia.core.pycore.GraphicsItem.rst", "_autosummary/_autosummaryv/ikomia.core.pycore.GraphicsPointProperty.rst", "_autosummary/_autosummaryv/ikomia.core.pycore.GraphicsPolygonProperty.rst", "_autosummary/_autosummaryv/ikomia.core.pycore.GraphicsPolylineProperty.rst", "_autosummary/_autosummaryv/ikomia.core.pycore.GraphicsRectProperty.rst", "_autosummary/_autosummaryv/ikomia.core.pycore.GraphicsShape.rst", "_autosummary/_autosummaryv/ikomia.core.pycore.GraphicsTextProperty.rst", "_autosummary/_autosummaryv/ikomia.core.pycore.IODataType.rst", "_autosummary/_autosummaryv/ikomia.core.pycore.MeasureId.rst", "_autosummary/_autosummaryv/ikomia.core.pycore.TaskType.rst", "_autosummary/_autosummaryv/ikomia.core.task.TaskParam.rst", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CArrayIO.rst", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CBlobMeasureIO.rst", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CDataStringIO.rst", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CDatasetIO.rst", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CGraphicsInput.rst", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CGraphicsOutput.rst", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CImageIO.rst", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CInstanceSegmentation.rst", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CInstanceSegmentationIO.rst", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CKeypointLink.rst", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CKeypointsIO.rst", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CNumericIO.rst", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CObjectDetection.rst", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CObjectDetectionIO.rst", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CObjectKeypoints.rst", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CObjectMeasure.rst", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CPathIO.rst", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CPluginProcessInterface.rst", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CSemanticSegmentationIO.rst", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CTaskFactory.rst", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CTextField.rst", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CTextIO.rst", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CVideoIO.rst", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CWidgetFactory.rst", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.CWidgetOutput.rst", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.NumericOutputType.rst", "_autosummary/_autosummaryv/ikomia.dataprocess.pydataprocess.PlotType.rst", "_autosummary/_autosummaryv/ikomia.dnn.datasetio.IkDatasetIO.rst", "_autosummary/_autosummaryv/ikomia.dnn.dnntrain.TrainProcess.rst", "_autosummary/ikomia.core.pycore.rst", "_autosummary/ikomia.core.task.rst", "_autosummary/ikomia.dataprocess.datadictIO.rst", "_autosummary/ikomia.dataprocess.pydataprocess.rst", "_autosummary/ikomia.dataprocess.registry.rst", "_autosummary/ikomia.dataprocess.workflow.rst", "_autosummary/ikomia.dnn.dataset.rst", "_autosummary/ikomia.dnn.datasetio.rst", "_autosummary/ikomia.dnn.dnntrain.rst", "_autosummary/ikomia.dnn.torch.datasetmapper.rst", "_autosummary/ikomia.dnn.torch.models.rst", "_autosummary/ikomia.utils.displayIO.rst", "_autosummary/ikomia.utils.pyqtutils.rst", "_autosummary/ikomia.utils.pyutils.rst", "_autosummary/ikomia.utils.qtconversion.rst", "advanced_guide/IO_management.md", "advanced_guide/ik_namespace.md", "advanced_guide/index.md", "advanced_guide/save_and_load_workflow.md", "bonus/virtual_env.md", "classification/index.md", "getting_started.md", "index.md", "integration/algo_IO.md", "integration/algo_parameters.md", "integration/algo_widget.md", "integration/index.md", "modules.md", "object_detection/index.md", "release_notes/index.md", "tutorials/how_to_on_stream.md"], "indexentries": {"__init__() (ikomia.core.pycore.cgraphicscomplexpolygon method)": [[26, "ikomia.core.pycore.CGraphicsComplexPolygon.__init__", false]], "__init__() (ikomia.core.pycore.cgraphicsconversion method)": [[27, "ikomia.core.pycore.CGraphicsConversion.__init__", false]], "__init__() (ikomia.core.pycore.cgraphicsellipse method)": [[28, "ikomia.core.pycore.CGraphicsEllipse.__init__", false]], "__init__() (ikomia.core.pycore.cgraphicsitem method)": [[29, "ikomia.core.pycore.CGraphicsItem.__init__", false]], "__init__() (ikomia.core.pycore.cgraphicspoint method)": [[30, "ikomia.core.pycore.CGraphicsPoint.__init__", false]], "__init__() (ikomia.core.pycore.cgraphicspolygon method)": [[31, "ikomia.core.pycore.CGraphicsPolygon.__init__", false]], "__init__() (ikomia.core.pycore.cgraphicspolyline method)": [[32, "ikomia.core.pycore.CGraphicsPolyline.__init__", false]], "__init__() (ikomia.core.pycore.cgraphicsrectangle method)": [[33, "ikomia.core.pycore.CGraphicsRectangle.__init__", false]], "__init__() (ikomia.core.pycore.cgraphicstext method)": [[34, "ikomia.core.pycore.CGraphicsText.__init__", false]], "__init__() (ikomia.core.pycore.cmeasure method)": [[35, "ikomia.core.pycore.CMeasure.__init__", false]], "__init__() (ikomia.core.pycore.cpointf method)": [[36, "ikomia.core.pycore.CPointF.__init__", false]], "__init__() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.__init__", false]], "__init__() (ikomia.core.pycore.cworkflowtaskio method)": [[38, "ikomia.core.pycore.CWorkflowTaskIO.__init__", false]], "__init__() (ikomia.core.pycore.cworkflowtaskiofactory method)": [[39, "ikomia.core.pycore.CWorkflowTaskIOFactory.__init__", false]], "__init__() (ikomia.core.pycore.cworkflowtaskparam method)": [[40, "ikomia.core.pycore.CWorkflowTaskParam.__init__", false]], "__init__() (ikomia.core.pycore.cworkflowtaskwidget method)": [[41, "ikomia.core.pycore.CWorkflowTaskWidget.__init__", false]], "__init__() (ikomia.core.task.taskparam method)": [[53, "ikomia.core.task.TaskParam.__init__", false]], "__init__() (ikomia.dataprocess.datadictio.datadictio method)": [[0, "ikomia.dataprocess.datadictIO.DataDictIO.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.carrayio method)": [[54, "ikomia.dataprocess.pydataprocess.CArrayIO.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.cblobmeasureio method)": [[55, "ikomia.dataprocess.pydataprocess.CBlobMeasureIO.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.cclassificationtask method)": [[3, "ikomia.dataprocess.pydataprocess.CClassificationTask.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.cdatasetio method)": [[57, "ikomia.dataprocess.pydataprocess.CDatasetIO.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.cdatastringio method)": [[56, "ikomia.dataprocess.pydataprocess.CDataStringIO.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.cgraphicsinput method)": [[58, "ikomia.dataprocess.pydataprocess.CGraphicsInput.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.cgraphicsoutput method)": [[59, "ikomia.dataprocess.pydataprocess.CGraphicsOutput.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.cikomiaregistry method)": [[5, "ikomia.dataprocess.pydataprocess.CIkomiaRegistry.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.cimageio method)": [[60, "ikomia.dataprocess.pydataprocess.CImageIO.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.cinstancesegmentationio method)": [[62, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationIO.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.cinstancesegmentationtask method)": [[6, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationTask.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.ckeypointdetectiontask method)": [[7, "ikomia.dataprocess.pydataprocess.CKeypointDetectionTask.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.ckeypointsio method)": [[64, "ikomia.dataprocess.pydataprocess.CKeypointsIO.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.cnumericio method)": [[65, "ikomia.dataprocess.pydataprocess.CNumericIO.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.cobjectdetectionio method)": [[67, "ikomia.dataprocess.pydataprocess.CObjectDetectionIO.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.cobjectdetectiontask method)": [[8, "ikomia.dataprocess.pydataprocess.CObjectDetectionTask.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.cobjectmeasure method)": [[69, "ikomia.dataprocess.pydataprocess.CObjectMeasure.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.cpathio method)": [[70, "ikomia.dataprocess.pydataprocess.CPathIO.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.csemanticsegmentationio method)": [[72, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationIO.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.csemanticsegmentationtask method)": [[9, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationTask.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.ctaskfactory method)": [[73, "ikomia.dataprocess.pydataprocess.CTaskFactory.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.ctextio method)": [[75, "ikomia.dataprocess.pydataprocess.CTextIO.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.cvideoio method)": [[76, "ikomia.dataprocess.pydataprocess.CVideoIO.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.cwidgetfactory method)": [[77, "ikomia.dataprocess.pydataprocess.CWidgetFactory.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.cwidgetoutput method)": [[78, "ikomia.dataprocess.pydataprocess.CWidgetOutput.__init__", false]], "__init__() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.__init__", false]], "__init__() (ikomia.dataprocess.registry.ikomiaregistry method)": [[15, "ikomia.dataprocess.registry.IkomiaRegistry.__init__", false]], "__init__() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.__init__", false]], "__init__() (ikomia.dnn.datasetio.ikdatasetio method)": [[81, "ikomia.dnn.datasetio.IkDatasetIO.__init__", false]], "__init__() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.__init__", false]], "__init__() (ikomia.utils.pyutils.cexception method)": [[18, "ikomia.utils.pyutils.CException.__init__", false]], "__init__() (ikomia.utils.pyutils.cmemoryinfo method)": [[19, "ikomia.utils.pyutils.CMemoryInfo.__init__", false]], "__init__() (ikomia.utils.pyutils.ctimer method)": [[20, "ikomia.utils.pyutils.CTimer.__init__", false]], "actionflag (class in ikomia.core.pycore)": [[24, "ikomia.core.pycore.ActionFlag", false]], "add_complex_polygon() (ikomia.dataprocess.pydataprocess.cgraphicsoutput method)": [[59, "ikomia.dataprocess.pydataprocess.CGraphicsOutput.add_complex_polygon", false]], "add_ellipse() (ikomia.dataprocess.pydataprocess.cgraphicsoutput method)": [[59, "ikomia.dataprocess.pydataprocess.CGraphicsOutput.add_ellipse", false]], "add_exposed_parameter() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.add_exposed_parameter", false]], "add_input() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.add_input", false]], "add_input() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.add_input", false]], "add_input() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.add_input", false]], "add_input() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.add_input", false]], "add_input() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.add_input", false]], "add_input() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.add_input", false]], "add_input() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.add_input", false]], "add_input() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.add_input", false]], "add_input() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.add_input", false]], "add_input() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.add_input", false]], "add_item() (ikomia.dataprocess.pydataprocess.cgraphicsoutput method)": [[59, "ikomia.dataprocess.pydataprocess.CGraphicsOutput.add_item", false]], "add_object() (ikomia.dataprocess.pydataprocess.cclassificationtask method)": [[3, "ikomia.dataprocess.pydataprocess.CClassificationTask.add_object", false]], "add_object() (ikomia.dataprocess.pydataprocess.cinstancesegmentationio method)": [[62, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationIO.add_object", false]], "add_object() (ikomia.dataprocess.pydataprocess.cinstancesegmentationtask method)": [[6, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationTask.add_object", false]], "add_object() (ikomia.dataprocess.pydataprocess.ckeypointdetectiontask method)": [[7, "ikomia.dataprocess.pydataprocess.CKeypointDetectionTask.add_object", false]], "add_object() (ikomia.dataprocess.pydataprocess.ckeypointsio method)": [[64, "ikomia.dataprocess.pydataprocess.CKeypointsIO.add_object", false]], "add_object() (ikomia.dataprocess.pydataprocess.cobjectdetectionio method)": [[67, "ikomia.dataprocess.pydataprocess.CObjectDetectionIO.add_object", false]], "add_object() (ikomia.dataprocess.pydataprocess.cobjectdetectiontask method)": [[8, "ikomia.dataprocess.pydataprocess.CObjectDetectionTask.add_object", false]], "add_object_measure() (ikomia.dataprocess.pydataprocess.cblobmeasureio method)": [[55, "ikomia.dataprocess.pydataprocess.CBlobMeasureIO.add_object_measure", false]], "add_object_measures() (ikomia.dataprocess.pydataprocess.cblobmeasureio method)": [[55, "ikomia.dataprocess.pydataprocess.CBlobMeasureIO.add_object_measures", false]], "add_output() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.add_output", false]], "add_output() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.add_output", false]], "add_output() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.add_output", false]], "add_output() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.add_output", false]], "add_output() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.add_output", false]], "add_output() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.add_output", false]], "add_output() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.add_output", false]], "add_output() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.add_output", false]], "add_output() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.add_output", false]], "add_point() (ikomia.dataprocess.pydataprocess.cgraphicsoutput method)": [[59, "ikomia.dataprocess.pydataprocess.CGraphicsOutput.add_point", false]], "add_polygon() (ikomia.dataprocess.pydataprocess.cgraphicsoutput method)": [[59, "ikomia.dataprocess.pydataprocess.CGraphicsOutput.add_polygon", false]], "add_polyline() (ikomia.dataprocess.pydataprocess.cgraphicsoutput method)": [[59, "ikomia.dataprocess.pydataprocess.CGraphicsOutput.add_polyline", false]], "add_rectangle() (ikomia.dataprocess.pydataprocess.cgraphicsoutput method)": [[59, "ikomia.dataprocess.pydataprocess.CGraphicsOutput.add_rectangle", false]], "add_task() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.add_task", false]], "add_task() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.add_task", false]], "add_text() (ikomia.dataprocess.pydataprocess.cgraphicsoutput method)": [[59, "ikomia.dataprocess.pydataprocess.CGraphicsOutput.add_text", false]], "add_text_field() (ikomia.dataprocess.pydataprocess.ctextio method)": [[75, "ikomia.dataprocess.pydataprocess.CTextIO.add_text_field", false]], "add_value_list() (ikomia.dataprocess.pydataprocess.cdatastringio method)": [[56, "ikomia.dataprocess.pydataprocess.CDataStringIO.add_value_list", false]], "add_value_list() (ikomia.dataprocess.pydataprocess.cnumericio method)": [[65, "ikomia.dataprocess.pydataprocess.CNumericIO.add_value_list", false]], "add_video_image() (ikomia.dataprocess.pydataprocess.cvideoio method)": [[76, "ikomia.dataprocess.pydataprocess.CVideoIO.add_video_image", false]], "algotype (class in ikomia.core.pycore)": [[25, "ikomia.core.pycore.AlgoType", false]], "apilanguage (class in ikomia.utils.pyutils)": [[17, "ikomia.utils.pyutils.ApiLanguage", false]], "apply_graphics_mask() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.apply_graphics_mask", false]], "apply_graphics_mask() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.apply_graphics_mask", false]], "apply_graphics_mask() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.apply_graphics_mask", false]], "apply_graphics_mask() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.apply_graphics_mask", false]], "apply_graphics_mask() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.apply_graphics_mask", false]], "apply_graphics_mask_to_binary() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.apply_graphics_mask_to_binary", false]], "apply_graphics_mask_to_binary() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.apply_graphics_mask_to_binary", false]], "apply_graphics_mask_to_binary() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.apply_graphics_mask_to_binary", false]], "apply_graphics_mask_to_binary() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.apply_graphics_mask_to_binary", false]], "apply_graphics_mask_to_binary() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.apply_graphics_mask_to_binary", false]], "begin_task_run() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.begin_task_run", false]], "begin_task_run() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.begin_task_run", false]], "begin_task_run() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.begin_task_run", false]], "begin_task_run() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.begin_task_run", false]], "begin_task_run() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.begin_task_run", false]], "begin_task_run() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.begin_task_run", false]], "begin_task_run() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.begin_task_run", false]], "begin_task_run() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.begin_task_run", false]], "c2dimageinteractivetask (class in ikomia.dataprocess.pydataprocess)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask", false]], "c2dimagetask (class in ikomia.dataprocess.pydataprocess)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask", false]], "carrayio (class in ikomia.dataprocess.pydataprocess)": [[54, "ikomia.dataprocess.pydataprocess.CArrayIO", false]], "cblobmeasureio (class in ikomia.dataprocess.pydataprocess)": [[55, "ikomia.dataprocess.pydataprocess.CBlobMeasureIO", false]], "cclassificationtask (class in ikomia.dataprocess.pydataprocess)": [[3, "ikomia.dataprocess.pydataprocess.CClassificationTask", false]], "cdatasetio (class in ikomia.dataprocess.pydataprocess)": [[57, "ikomia.dataprocess.pydataprocess.CDatasetIO", false]], "cdatastringio (class in ikomia.dataprocess.pydataprocess)": [[56, "ikomia.dataprocess.pydataprocess.CDataStringIO", false]], "cdnntraintask (class in ikomia.dataprocess.pydataprocess)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask", false]], "cexception (class in ikomia.utils.pyutils)": [[18, "ikomia.utils.pyutils.CException", false]], "cgraphicscomplexpolygon (class in ikomia.core.pycore)": [[26, "ikomia.core.pycore.CGraphicsComplexPolygon", false]], "cgraphicsconversion (class in ikomia.core.pycore)": [[27, "ikomia.core.pycore.CGraphicsConversion", false]], "cgraphicsellipse (class in ikomia.core.pycore)": [[28, "ikomia.core.pycore.CGraphicsEllipse", false]], "cgraphicsinput (class in ikomia.dataprocess.pydataprocess)": [[58, "ikomia.dataprocess.pydataprocess.CGraphicsInput", false]], "cgraphicsitem (class in ikomia.core.pycore)": [[29, "ikomia.core.pycore.CGraphicsItem", false]], "cgraphicsoutput (class in ikomia.dataprocess.pydataprocess)": [[59, "ikomia.dataprocess.pydataprocess.CGraphicsOutput", false]], "cgraphicspoint (class in ikomia.core.pycore)": [[30, "ikomia.core.pycore.CGraphicsPoint", false]], "cgraphicspolygon (class in ikomia.core.pycore)": [[31, "ikomia.core.pycore.CGraphicsPolygon", false]], "cgraphicspolyline (class in ikomia.core.pycore)": [[32, "ikomia.core.pycore.CGraphicsPolyline", false]], "cgraphicsrectangle (class in ikomia.core.pycore)": [[33, "ikomia.core.pycore.CGraphicsRectangle", false]], "cgraphicstext (class in ikomia.core.pycore)": [[34, "ikomia.core.pycore.CGraphicsText", false]], "cikomiaregistry (class in ikomia.dataprocess.pydataprocess)": [[5, "ikomia.dataprocess.pydataprocess.CIkomiaRegistry", false]], "cimageio (class in ikomia.dataprocess.pydataprocess)": [[60, "ikomia.dataprocess.pydataprocess.CImageIO", false]], "cinstancesegmentation (class in ikomia.dataprocess.pydataprocess)": [[61, "ikomia.dataprocess.pydataprocess.CInstanceSegmentation", false]], "cinstancesegmentationio (class in ikomia.dataprocess.pydataprocess)": [[62, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationIO", false]], "cinstancesegmentationtask (class in ikomia.dataprocess.pydataprocess)": [[6, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationTask", false]], "ckeypointdetectiontask (class in ikomia.dataprocess.pydataprocess)": [[7, "ikomia.dataprocess.pydataprocess.CKeypointDetectionTask", false]], "ckeypointlink (class in ikomia.dataprocess.pydataprocess)": [[63, "ikomia.dataprocess.pydataprocess.CKeypointLink", false]], "ckeypointsio (class in ikomia.dataprocess.pydataprocess)": [[64, "ikomia.dataprocess.pydataprocess.CKeypointsIO", false]], "clear() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.clear", false]], "clear() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.clear", false]], "clear_data() (ikomia.core.pycore.cworkflowtaskio method)": [[38, "ikomia.core.pycore.CWorkflowTaskIO.clear_data", false]], "clear_data() (ikomia.dataprocess.datadictio.datadictio method)": [[0, "ikomia.dataprocess.datadictIO.DataDictIO.clear_data", false]], "clear_data() (ikomia.dataprocess.pydataprocess.carrayio method)": [[54, "ikomia.dataprocess.pydataprocess.CArrayIO.clear_data", false]], "clear_data() (ikomia.dataprocess.pydataprocess.cblobmeasureio method)": [[55, "ikomia.dataprocess.pydataprocess.CBlobMeasureIO.clear_data", false]], "clear_data() (ikomia.dataprocess.pydataprocess.cdatasetio method)": [[57, "ikomia.dataprocess.pydataprocess.CDatasetIO.clear_data", false]], "clear_data() (ikomia.dataprocess.pydataprocess.cdatastringio method)": [[56, "ikomia.dataprocess.pydataprocess.CDataStringIO.clear_data", false]], "clear_data() (ikomia.dataprocess.pydataprocess.cgraphicsinput method)": [[58, "ikomia.dataprocess.pydataprocess.CGraphicsInput.clear_data", false]], "clear_data() (ikomia.dataprocess.pydataprocess.cgraphicsoutput method)": [[59, "ikomia.dataprocess.pydataprocess.CGraphicsOutput.clear_data", false]], "clear_data() (ikomia.dataprocess.pydataprocess.cimageio method)": [[60, "ikomia.dataprocess.pydataprocess.CImageIO.clear_data", false]], "clear_data() (ikomia.dataprocess.pydataprocess.cinstancesegmentationio method)": [[62, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationIO.clear_data", false]], "clear_data() (ikomia.dataprocess.pydataprocess.ckeypointsio method)": [[64, "ikomia.dataprocess.pydataprocess.CKeypointsIO.clear_data", false]], "clear_data() (ikomia.dataprocess.pydataprocess.cnumericio method)": [[65, "ikomia.dataprocess.pydataprocess.CNumericIO.clear_data", false]], "clear_data() (ikomia.dataprocess.pydataprocess.cobjectdetectionio method)": [[67, "ikomia.dataprocess.pydataprocess.CObjectDetectionIO.clear_data", false]], "clear_data() (ikomia.dataprocess.pydataprocess.cpathio method)": [[70, "ikomia.dataprocess.pydataprocess.CPathIO.clear_data", false]], "clear_data() (ikomia.dataprocess.pydataprocess.ctextio method)": [[75, "ikomia.dataprocess.pydataprocess.CTextIO.clear_data", false]], "clear_data() (ikomia.dataprocess.pydataprocess.cvideoio method)": [[76, "ikomia.dataprocess.pydataprocess.CVideoIO.clear_data", false]], "clear_data() (ikomia.dataprocess.pydataprocess.cwidgetoutput method)": [[78, "ikomia.dataprocess.pydataprocess.CWidgetOutput.clear_data", false]], "clear_data() (ikomia.dnn.datasetio.ikdatasetio method)": [[81, "ikomia.dnn.datasetio.IkDatasetIO.clear_data", false]], "clear_exposed_parameters() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.clear_exposed_parameters", false]], "clear_inputs() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.clear_inputs", false]], "clear_inputs() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.clear_inputs", false]], "clear_inputs() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.clear_inputs", false]], "clear_interaction_layer() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.clear_interaction_layer", false]], "clear_output_data() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.clear_output_data", false]], "clear_output_data() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.clear_output_data", false]], "clear_outputs() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.clear_outputs", false]], "clear_outputs() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.clear_outputs", false]], "cmeasure (class in ikomia.core.pycore)": [[35, "ikomia.core.pycore.CMeasure", false]], "cmemoryinfo (class in ikomia.utils.pyutils)": [[19, "ikomia.utils.pyutils.CMemoryInfo", false]], "cnumericio (class in ikomia.dataprocess.pydataprocess)": [[65, "ikomia.dataprocess.pydataprocess.CNumericIO", false]], "cobjectdetection (class in ikomia.dataprocess.pydataprocess)": [[66, "ikomia.dataprocess.pydataprocess.CObjectDetection", false]], "cobjectdetectionio (class in ikomia.dataprocess.pydataprocess)": [[67, "ikomia.dataprocess.pydataprocess.CObjectDetectionIO", false]], "cobjectdetectiontask (class in ikomia.dataprocess.pydataprocess)": [[8, "ikomia.dataprocess.pydataprocess.CObjectDetectionTask", false]], "cobjectkeypoints (class in ikomia.dataprocess.pydataprocess)": [[68, "ikomia.dataprocess.pydataprocess.CObjectKeypoints", false]], "cobjectmeasure (class in ikomia.dataprocess.pydataprocess)": [[69, "ikomia.dataprocess.pydataprocess.CObjectMeasure", false]], "compute_blobs() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.compute_blobs", false]], "connect() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.connect", false]], "connect_tasks() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.connect_tasks", false]], "copy_static_data() (ikomia.core.pycore.cworkflowtaskio method)": [[38, "ikomia.core.pycore.CWorkflowTaskIO.copy_static_data", false]], "copy_static_data() (ikomia.dataprocess.pydataprocess.carrayio method)": [[54, "ikomia.dataprocess.pydataprocess.CArrayIO.copy_static_data", false]], "copy_static_data() (ikomia.dataprocess.pydataprocess.cdatasetio method)": [[57, "ikomia.dataprocess.pydataprocess.CDatasetIO.copy_static_data", false]], "copy_static_data() (ikomia.dataprocess.pydataprocess.cdatastringio method)": [[56, "ikomia.dataprocess.pydataprocess.CDataStringIO.copy_static_data", false]], "copy_static_data() (ikomia.dataprocess.pydataprocess.cgraphicsinput method)": [[58, "ikomia.dataprocess.pydataprocess.CGraphicsInput.copy_static_data", false]], "copy_static_data() (ikomia.dataprocess.pydataprocess.cgraphicsoutput method)": [[59, "ikomia.dataprocess.pydataprocess.CGraphicsOutput.copy_static_data", false]], "copy_static_data() (ikomia.dataprocess.pydataprocess.cimageio method)": [[60, "ikomia.dataprocess.pydataprocess.CImageIO.copy_static_data", false]], "copy_static_data() (ikomia.dataprocess.pydataprocess.cnumericio method)": [[65, "ikomia.dataprocess.pydataprocess.CNumericIO.copy_static_data", false]], "copy_static_data() (ikomia.dataprocess.pydataprocess.cpathio method)": [[70, "ikomia.dataprocess.pydataprocess.CPathIO.copy_static_data", false]], "copy_static_data() (ikomia.dataprocess.pydataprocess.cvideoio method)": [[76, "ikomia.dataprocess.pydataprocess.CVideoIO.copy_static_data", false]], "copy_static_data() (ikomia.dataprocess.pydataprocess.cwidgetoutput method)": [[78, "ikomia.dataprocess.pydataprocess.CWidgetOutput.copy_static_data", false]], "cpathio (class in ikomia.dataprocess.pydataprocess)": [[70, "ikomia.dataprocess.pydataprocess.CPathIO", false]], "cpluginprocessinterface (class in ikomia.dataprocess.pydataprocess)": [[71, "ikomia.dataprocess.pydataprocess.CPluginProcessInterface", false]], "cpointf (class in ikomia.core.pycore)": [[36, "ikomia.core.pycore.CPointF", false]], "cpuarch (class in ikomia.utils.pyutils)": [[21, "ikomia.utils.pyutils.CpuArch", false]], "create() (ikomia.core.pycore.cworkflowtaskiofactory method)": [[39, "ikomia.core.pycore.CWorkflowTaskIOFactory.create", false]], "create() (ikomia.dataprocess.pydataprocess.ctaskfactory method)": [[73, "ikomia.dataprocess.pydataprocess.CTaskFactory.create", false]], "create() (ikomia.dataprocess.pydataprocess.cwidgetfactory method)": [[77, "ikomia.dataprocess.pydataprocess.CWidgetFactory.create", false]], "create() (in module ikomia.core.task)": [[84, "ikomia.core.task.create", false]], "create() (in module ikomia.dataprocess.workflow)": [[88, "ikomia.dataprocess.workflow.create", false]], "create_algorithm() (ikomia.dataprocess.registry.ikomiaregistry method)": [[15, "ikomia.dataprocess.registry.IkomiaRegistry.create_algorithm", false]], "create_graphics_mask() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.create_graphics_mask", false]], "create_graphics_mask() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.create_graphics_mask", false]], "create_graphics_mask() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.create_graphics_mask", false]], "create_graphics_mask() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.create_graphics_mask", false]], "create_graphics_mask() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.create_graphics_mask", false]], "create_input_graphics_mask() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.create_input_graphics_mask", false]], "create_instance() (ikomia.dataprocess.pydataprocess.cikomiaregistry method)": [[5, "ikomia.dataprocess.pydataprocess.CIkomiaRegistry.create_instance", false]], "create_interaction_mask() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.create_interaction_mask", false]], "csemanticsegmentationio (class in ikomia.dataprocess.pydataprocess)": [[72, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationIO", false]], "csemanticsegmentationtask (class in ikomia.dataprocess.pydataprocess)": [[9, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationTask", false]], "ctaskfactory (class in ikomia.dataprocess.pydataprocess)": [[73, "ikomia.dataprocess.pydataprocess.CTaskFactory", false]], "ctaskinfo (class in ikomia.dataprocess.pydataprocess)": [[10, "ikomia.dataprocess.pydataprocess.CTaskInfo", false]], "ctextfield (class in ikomia.dataprocess.pydataprocess)": [[74, "ikomia.dataprocess.pydataprocess.CTextField", false]], "ctextio (class in ikomia.dataprocess.pydataprocess)": [[75, "ikomia.dataprocess.pydataprocess.CTextIO", false]], "ctimer (class in ikomia.utils.pyutils)": [[20, "ikomia.utils.pyutils.CTimer", false]], "cvideoio (class in ikomia.dataprocess.pydataprocess)": [[76, "ikomia.dataprocess.pydataprocess.CVideoIO", false]], "cvideooftask (class in ikomia.dataprocess.pydataprocess)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask", false]], "cvideotask (class in ikomia.dataprocess.pydataprocess)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask", false]], "cvideotrackingtask (class in ikomia.dataprocess.pydataprocess)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask", false]], "cwidgetfactory (class in ikomia.dataprocess.pydataprocess)": [[77, "ikomia.dataprocess.pydataprocess.CWidgetFactory", false]], "cwidgetoutput (class in ikomia.dataprocess.pydataprocess)": [[78, "ikomia.dataprocess.pydataprocess.CWidgetOutput", false]], "cworkflow (class in ikomia.dataprocess.pydataprocess)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow", false]], "cworkflowtask (class in ikomia.core.pycore)": [[37, "ikomia.core.pycore.CWorkflowTask", false]], "cworkflowtaskio (class in ikomia.core.pycore)": [[38, "ikomia.core.pycore.CWorkflowTaskIO", false]], "cworkflowtaskiofactory (class in ikomia.core.pycore)": [[39, "ikomia.core.pycore.CWorkflowTaskIOFactory", false]], "cworkflowtaskparam (class in ikomia.core.pycore)": [[40, "ikomia.core.pycore.CWorkflowTaskParam", false]], "cworkflowtaskwidget (class in ikomia.core.pycore)": [[41, "ikomia.core.pycore.CWorkflowTaskWidget", false]], "datadictio (class in ikomia.dataprocess.datadictio)": [[0, "ikomia.dataprocess.datadictIO.DataDictIO", false]], "delete_edge() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.delete_edge", false]], "delete_edge() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.delete_edge", false]], "delete_task() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.delete_task", false]], "delete_task() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.delete_task", false]], "display() (in module ikomia.utils.displayio)": [[94, "ikomia.utils.displayIO.display", false]], "download() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.download", false]], "draw_graphics() (ikomia.dataprocess.pydataprocess.cimageio method)": [[60, "ikomia.dataprocess.pydataprocess.CImageIO.draw_graphics", false]], "draw_opt_flow_map() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.draw_opt_flow_map", false]], "emit_add_sub_progress_steps() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.emit_add_sub_progress_steps", false]], "emit_add_sub_progress_steps() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.emit_add_sub_progress_steps", false]], "emit_add_sub_progress_steps() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.emit_add_sub_progress_steps", false]], "emit_add_sub_progress_steps() (ikomia.dataprocess.pydataprocess.cclassificationtask method)": [[3, "ikomia.dataprocess.pydataprocess.CClassificationTask.emit_add_sub_progress_steps", false]], "emit_add_sub_progress_steps() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.emit_add_sub_progress_steps", false]], "emit_add_sub_progress_steps() (ikomia.dataprocess.pydataprocess.cinstancesegmentationtask method)": [[6, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationTask.emit_add_sub_progress_steps", false]], "emit_add_sub_progress_steps() (ikomia.dataprocess.pydataprocess.ckeypointdetectiontask method)": [[7, "ikomia.dataprocess.pydataprocess.CKeypointDetectionTask.emit_add_sub_progress_steps", false]], "emit_add_sub_progress_steps() (ikomia.dataprocess.pydataprocess.cobjectdetectiontask method)": [[8, "ikomia.dataprocess.pydataprocess.CObjectDetectionTask.emit_add_sub_progress_steps", false]], "emit_add_sub_progress_steps() (ikomia.dataprocess.pydataprocess.csemanticsegmentationtask method)": [[9, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationTask.emit_add_sub_progress_steps", false]], "emit_add_sub_progress_steps() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.emit_add_sub_progress_steps", false]], "emit_add_sub_progress_steps() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.emit_add_sub_progress_steps", false]], "emit_add_sub_progress_steps() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.emit_add_sub_progress_steps", false]], "emit_add_sub_progress_steps() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.emit_add_sub_progress_steps", false]], "emit_apply() (ikomia.core.pycore.cworkflowtaskwidget method)": [[41, "ikomia.core.pycore.CWorkflowTaskWidget.emit_apply", false]], "emit_graphics_context_changed() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.emit_graphics_context_changed", false]], "emit_graphics_context_changed() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.emit_graphics_context_changed", false]], "emit_graphics_context_changed() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.emit_graphics_context_changed", false]], "emit_graphics_context_changed() (ikomia.dataprocess.pydataprocess.cclassificationtask method)": [[3, "ikomia.dataprocess.pydataprocess.CClassificationTask.emit_graphics_context_changed", false]], "emit_graphics_context_changed() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.emit_graphics_context_changed", false]], "emit_graphics_context_changed() (ikomia.dataprocess.pydataprocess.cinstancesegmentationtask method)": [[6, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationTask.emit_graphics_context_changed", false]], "emit_graphics_context_changed() (ikomia.dataprocess.pydataprocess.ckeypointdetectiontask method)": [[7, "ikomia.dataprocess.pydataprocess.CKeypointDetectionTask.emit_graphics_context_changed", false]], "emit_graphics_context_changed() (ikomia.dataprocess.pydataprocess.cobjectdetectiontask method)": [[8, "ikomia.dataprocess.pydataprocess.CObjectDetectionTask.emit_graphics_context_changed", false]], "emit_graphics_context_changed() (ikomia.dataprocess.pydataprocess.csemanticsegmentationtask method)": [[9, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationTask.emit_graphics_context_changed", false]], "emit_graphics_context_changed() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.emit_graphics_context_changed", false]], "emit_graphics_context_changed() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.emit_graphics_context_changed", false]], "emit_graphics_context_changed() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.emit_graphics_context_changed", false]], "emit_graphics_context_changed() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.emit_graphics_context_changed", false]], "emit_output_changed() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.emit_output_changed", false]], "emit_output_changed() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.emit_output_changed", false]], "emit_output_changed() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.emit_output_changed", false]], "emit_output_changed() (ikomia.dataprocess.pydataprocess.cclassificationtask method)": [[3, "ikomia.dataprocess.pydataprocess.CClassificationTask.emit_output_changed", false]], "emit_output_changed() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.emit_output_changed", false]], "emit_output_changed() (ikomia.dataprocess.pydataprocess.cinstancesegmentationtask method)": [[6, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationTask.emit_output_changed", false]], "emit_output_changed() (ikomia.dataprocess.pydataprocess.ckeypointdetectiontask method)": [[7, "ikomia.dataprocess.pydataprocess.CKeypointDetectionTask.emit_output_changed", false]], "emit_output_changed() (ikomia.dataprocess.pydataprocess.cobjectdetectiontask method)": [[8, "ikomia.dataprocess.pydataprocess.CObjectDetectionTask.emit_output_changed", false]], "emit_output_changed() (ikomia.dataprocess.pydataprocess.csemanticsegmentationtask method)": [[9, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationTask.emit_output_changed", false]], "emit_output_changed() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.emit_output_changed", false]], "emit_output_changed() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.emit_output_changed", false]], "emit_output_changed() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.emit_output_changed", false]], "emit_output_changed() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.emit_output_changed", false]], "emit_send_process_action() (ikomia.core.pycore.cworkflowtaskwidget method)": [[41, "ikomia.core.pycore.CWorkflowTaskWidget.emit_send_process_action", false]], "emit_set_graphics_category() (ikomia.core.pycore.cworkflowtaskwidget method)": [[41, "ikomia.core.pycore.CWorkflowTaskWidget.emit_set_graphics_category", false]], "emit_set_graphics_tool() (ikomia.core.pycore.cworkflowtaskwidget method)": [[41, "ikomia.core.pycore.CWorkflowTaskWidget.emit_set_graphics_tool", false]], "emit_step_progress() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.emit_step_progress", false]], "emit_step_progress() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.emit_step_progress", false]], "emit_step_progress() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.emit_step_progress", false]], "emit_step_progress() (ikomia.dataprocess.pydataprocess.cclassificationtask method)": [[3, "ikomia.dataprocess.pydataprocess.CClassificationTask.emit_step_progress", false]], "emit_step_progress() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.emit_step_progress", false]], "emit_step_progress() (ikomia.dataprocess.pydataprocess.cinstancesegmentationtask method)": [[6, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationTask.emit_step_progress", false]], "emit_step_progress() (ikomia.dataprocess.pydataprocess.ckeypointdetectiontask method)": [[7, "ikomia.dataprocess.pydataprocess.CKeypointDetectionTask.emit_step_progress", false]], "emit_step_progress() (ikomia.dataprocess.pydataprocess.cobjectdetectiontask method)": [[8, "ikomia.dataprocess.pydataprocess.CObjectDetectionTask.emit_step_progress", false]], "emit_step_progress() (ikomia.dataprocess.pydataprocess.csemanticsegmentationtask method)": [[9, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationTask.emit_step_progress", false]], "emit_step_progress() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.emit_step_progress", false]], "emit_step_progress() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.emit_step_progress", false]], "emit_step_progress() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.emit_step_progress", false]], "emit_step_progress() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.emit_step_progress", false]], "enable_mlflow() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.enable_mlflow", false]], "enable_mlflow() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.enable_mlflow", false]], "enable_tensorboard() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.enable_tensorboard", false]], "enable_tensorboard() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.enable_tensorboard", false]], "end_task_run() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.end_task_run", false]], "end_task_run() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.end_task_run", false]], "end_task_run() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.end_task_run", false]], "end_task_run() (ikomia.dataprocess.pydataprocess.cclassificationtask method)": [[3, "ikomia.dataprocess.pydataprocess.CClassificationTask.end_task_run", false]], "end_task_run() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.end_task_run", false]], "end_task_run() (ikomia.dataprocess.pydataprocess.cinstancesegmentationtask method)": [[6, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationTask.end_task_run", false]], "end_task_run() (ikomia.dataprocess.pydataprocess.ckeypointdetectiontask method)": [[7, "ikomia.dataprocess.pydataprocess.CKeypointDetectionTask.end_task_run", false]], "end_task_run() (ikomia.dataprocess.pydataprocess.cobjectdetectiontask method)": [[8, "ikomia.dataprocess.pydataprocess.CObjectDetectionTask.end_task_run", false]], "end_task_run() (ikomia.dataprocess.pydataprocess.csemanticsegmentationtask method)": [[9, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationTask.end_task_run", false]], "end_task_run() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.end_task_run", false]], "end_task_run() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.end_task_run", false]], "end_task_run() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.end_task_run", false]], "end_task_run() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.end_task_run", false]], "execute_actions() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.execute_actions", false]], "execute_actions() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.execute_actions", false]], "execute_actions() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.execute_actions", false]], "execute_actions() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.execute_actions", false]], "execute_actions() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.execute_actions", false]], "execute_actions() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.execute_actions", false]], "execute_actions() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.execute_actions", false]], "execute_actions() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.execute_actions", false]], "export_graphviz() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.export_graphviz", false]], "export_graphviz() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.export_graphviz", false]], "faster_rcnn() (in module ikomia.dnn.torch.models)": [[93, "ikomia.dnn.torch.models.faster_rcnn", false]], "finalize() (ikomia.dataprocess.pydataprocess.ctextio method)": [[75, "ikomia.dataprocess.pydataprocess.CTextIO.finalize", false]], "find_task() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.find_task", false]], "flow_to_display() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.flow_to_display", false]], "forward_input_image() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.forward_input_image", false]], "forward_input_image() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.forward_input_image", false]], "forward_input_image() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.forward_input_image", false]], "forward_input_image() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.forward_input_image", false]], "forward_input_image() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.forward_input_image", false]], "from_json() (ikomia.core.pycore.cworkflowtaskio method)": [[38, "ikomia.core.pycore.CWorkflowTaskIO.from_json", false]], "from_json() (ikomia.dataprocess.datadictio.datadictio method)": [[0, "ikomia.dataprocess.datadictIO.DataDictIO.from_json", false]], "from_json() (ikomia.dataprocess.pydataprocess.cblobmeasureio method)": [[55, "ikomia.dataprocess.pydataprocess.CBlobMeasureIO.from_json", false]], "from_json() (ikomia.dataprocess.pydataprocess.cdatasetio method)": [[57, "ikomia.dataprocess.pydataprocess.CDatasetIO.from_json", false]], "from_json() (ikomia.dataprocess.pydataprocess.cdatastringio method)": [[56, "ikomia.dataprocess.pydataprocess.CDataStringIO.from_json", false]], "from_json() (ikomia.dataprocess.pydataprocess.cgraphicsinput method)": [[58, "ikomia.dataprocess.pydataprocess.CGraphicsInput.from_json", false]], "from_json() (ikomia.dataprocess.pydataprocess.cgraphicsoutput method)": [[59, "ikomia.dataprocess.pydataprocess.CGraphicsOutput.from_json", false]], "from_json() (ikomia.dataprocess.pydataprocess.cimageio method)": [[60, "ikomia.dataprocess.pydataprocess.CImageIO.from_json", false]], "from_json() (ikomia.dataprocess.pydataprocess.cinstancesegmentationio method)": [[62, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationIO.from_json", false]], "from_json() (ikomia.dataprocess.pydataprocess.ckeypointsio method)": [[64, "ikomia.dataprocess.pydataprocess.CKeypointsIO.from_json", false]], "from_json() (ikomia.dataprocess.pydataprocess.cnumericio method)": [[65, "ikomia.dataprocess.pydataprocess.CNumericIO.from_json", false]], "from_json() (ikomia.dataprocess.pydataprocess.cobjectdetectionio method)": [[67, "ikomia.dataprocess.pydataprocess.CObjectDetectionIO.from_json", false]], "from_json() (ikomia.dataprocess.pydataprocess.csemanticsegmentationio method)": [[72, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationIO.from_json", false]], "from_json() (ikomia.dataprocess.pydataprocess.ctextio method)": [[75, "ikomia.dataprocess.pydataprocess.CTextIO.from_json", false]], "get_algorithm_info() (ikomia.dataprocess.pydataprocess.cikomiaregistry method)": [[5, "ikomia.dataprocess.pydataprocess.CIkomiaRegistry.get_algorithm_info", false]], "get_algorithm_info() (ikomia.dataprocess.registry.ikomiaregistry method)": [[15, "ikomia.dataprocess.registry.IkomiaRegistry.get_algorithm_info", false]], "get_algorithms() (ikomia.dataprocess.pydataprocess.cikomiaregistry method)": [[5, "ikomia.dataprocess.pydataprocess.CIkomiaRegistry.get_algorithms", false]], "get_algorithms() (ikomia.dataprocess.registry.ikomiaregistry method)": [[15, "ikomia.dataprocess.registry.IkomiaRegistry.get_algorithms", false]], "get_all_header_labels() (ikomia.dataprocess.pydataprocess.cdatastringio method)": [[56, "ikomia.dataprocess.pydataprocess.CDataStringIO.get_all_header_labels", false]], "get_all_header_labels() (ikomia.dataprocess.pydataprocess.cnumericio method)": [[65, "ikomia.dataprocess.pydataprocess.CNumericIO.get_all_header_labels", false]], "get_all_label_list() (ikomia.dataprocess.pydataprocess.cdatastringio method)": [[56, "ikomia.dataprocess.pydataprocess.CDataStringIO.get_all_label_list", false]], "get_all_label_list() (ikomia.dataprocess.pydataprocess.cnumericio method)": [[65, "ikomia.dataprocess.pydataprocess.CNumericIO.get_all_label_list", false]], "get_all_value_list() (ikomia.dataprocess.pydataprocess.cdatastringio method)": [[56, "ikomia.dataprocess.pydataprocess.CDataStringIO.get_all_value_list", false]], "get_all_value_list() (ikomia.dataprocess.pydataprocess.cnumericio method)": [[65, "ikomia.dataprocess.pydataprocess.CNumericIO.get_all_value_list", false]], "get_array() (ikomia.dataprocess.pydataprocess.carrayio method)": [[54, "ikomia.dataprocess.pydataprocess.CArrayIO.get_array", false]], "get_available_measures() (ikomia.core.pycore.cmeasure static method)": [[35, "ikomia.core.pycore.CMeasure.get_available_measures", false]], "get_available_memory() (ikomia.utils.pyutils.cmemoryinfo method)": [[19, "ikomia.utils.pyutils.CMemoryInfo.get_available_memory", false]], "get_blobs() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.get_blobs", false]], "get_bounding_rect() (ikomia.core.pycore.cgraphicscomplexpolygon method)": [[26, "ikomia.core.pycore.CGraphicsComplexPolygon.get_bounding_rect", false]], "get_bounding_rect() (ikomia.core.pycore.cgraphicsellipse method)": [[28, "ikomia.core.pycore.CGraphicsEllipse.get_bounding_rect", false]], "get_bounding_rect() (ikomia.core.pycore.cgraphicsitem method)": [[29, "ikomia.core.pycore.CGraphicsItem.get_bounding_rect", false]], "get_bounding_rect() (ikomia.core.pycore.cgraphicspoint method)": [[30, "ikomia.core.pycore.CGraphicsPoint.get_bounding_rect", false]], "get_bounding_rect() (ikomia.core.pycore.cgraphicspolygon method)": [[31, "ikomia.core.pycore.CGraphicsPolygon.get_bounding_rect", false]], "get_bounding_rect() (ikomia.core.pycore.cgraphicspolyline method)": [[32, "ikomia.core.pycore.CGraphicsPolyline.get_bounding_rect", false]], "get_bounding_rect() (ikomia.core.pycore.cgraphicsrectangle method)": [[33, "ikomia.core.pycore.CGraphicsRectangle.get_bounding_rect", false]], "get_bounding_rect() (ikomia.core.pycore.cgraphicstext method)": [[34, "ikomia.core.pycore.CGraphicsText.get_bounding_rect", false]], "get_categories() (ikomia.dataprocess.pydataprocess.cdatasetio method)": [[57, "ikomia.dataprocess.pydataprocess.CDatasetIO.get_categories", false]], "get_categories() (ikomia.dnn.datasetio.ikdatasetio method)": [[81, "ikomia.dnn.datasetio.IkDatasetIO.get_categories", false]], "get_category() (ikomia.core.pycore.cgraphicscomplexpolygon method)": [[26, "ikomia.core.pycore.CGraphicsComplexPolygon.get_category", false]], "get_category() (ikomia.core.pycore.cgraphicsellipse method)": [[28, "ikomia.core.pycore.CGraphicsEllipse.get_category", false]], "get_category() (ikomia.core.pycore.cgraphicsitem method)": [[29, "ikomia.core.pycore.CGraphicsItem.get_category", false]], "get_category() (ikomia.core.pycore.cgraphicspoint method)": [[30, "ikomia.core.pycore.CGraphicsPoint.get_category", false]], "get_category() (ikomia.core.pycore.cgraphicspolygon method)": [[31, "ikomia.core.pycore.CGraphicsPolygon.get_category", false]], "get_category() (ikomia.core.pycore.cgraphicspolyline method)": [[32, "ikomia.core.pycore.CGraphicsPolyline.get_category", false]], "get_category() (ikomia.core.pycore.cgraphicsrectangle method)": [[33, "ikomia.core.pycore.CGraphicsRectangle.get_category", false]], "get_category() (ikomia.core.pycore.cgraphicstext method)": [[34, "ikomia.core.pycore.CGraphicsText.get_category", false]], "get_category_count() (ikomia.dataprocess.pydataprocess.cdatasetio method)": [[57, "ikomia.dataprocess.pydataprocess.CDatasetIO.get_category_count", false]], "get_category_count() (ikomia.dnn.datasetio.ikdatasetio method)": [[81, "ikomia.dnn.datasetio.IkDatasetIO.get_category_count", false]], "get_channel_count() (ikomia.dataprocess.pydataprocess.cimageio method)": [[60, "ikomia.dataprocess.pydataprocess.CImageIO.get_channel_count", false]], "get_channel_count() (ikomia.dataprocess.pydataprocess.cvideoio method)": [[76, "ikomia.dataprocess.pydataprocess.CVideoIO.get_channel_count", false]], "get_children() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.get_children", false]], "get_children() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.get_children", false]], "get_class_names() (ikomia.dataprocess.pydataprocess.csemanticsegmentationio method)": [[72, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationIO.get_class_names", false]], "get_colors() (ikomia.dataprocess.pydataprocess.csemanticsegmentationio method)": [[72, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationIO.get_colors", false]], "get_current_pos() (ikomia.dataprocess.pydataprocess.cvideoio method)": [[76, "ikomia.dataprocess.pydataprocess.CVideoIO.get_current_pos", false]], "get_data() (ikomia.dataprocess.pydataprocess.cimageio method)": [[60, "ikomia.dataprocess.pydataprocess.CImageIO.get_data", false]], "get_data() (ikomia.dataprocess.pydataprocess.cvideoio method)": [[76, "ikomia.dataprocess.pydataprocess.CVideoIO.get_data", false]], "get_edge_info() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.get_edge_info", false]], "get_edge_info() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.get_edge_info", false]], "get_edge_source() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.get_edge_source", false]], "get_edge_source() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.get_edge_source", false]], "get_edge_target() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.get_edge_target", false]], "get_edge_target() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.get_edge_target", false]], "get_elapsed_ms() (ikomia.utils.pyutils.ctimer method)": [[20, "ikomia.utils.pyutils.CTimer.get_elapsed_ms", false]], "get_elapsed_ns() (ikomia.utils.pyutils.ctimer method)": [[20, "ikomia.utils.pyutils.CTimer.get_elapsed_ns", false]], "get_elapsed_time() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.get_elapsed_time", false]], "get_elapsed_time() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.get_elapsed_time", false]], "get_elapsed_time() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.get_elapsed_time", false]], "get_elapsed_time() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.get_elapsed_time", false]], "get_elapsed_time() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.get_elapsed_time", false]], "get_elapsed_time() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.get_elapsed_time", false]], "get_elapsed_time() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.get_elapsed_time", false]], "get_elapsed_time() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.get_elapsed_time", false]], "get_elapsed_time_to() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.get_elapsed_time_to", false]], "get_elapsed_time_to() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.get_elapsed_time_to", false]], "get_elapsed_us() (ikomia.utils.pyutils.ctimer method)": [[20, "ikomia.utils.pyutils.CTimer.get_elapsed_us", false]], "get_exposed_parameters() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.get_exposed_parameters", false]], "get_final_tasks() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.get_final_tasks", false]], "get_final_tasks() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.get_final_tasks", false]], "get_graphics_annotations() (ikomia.dataprocess.pydataprocess.cdatasetio method)": [[57, "ikomia.dataprocess.pydataprocess.CDatasetIO.get_graphics_annotations", false]], "get_graphics_annotations() (ikomia.dnn.datasetio.ikdatasetio method)": [[81, "ikomia.dnn.datasetio.IkDatasetIO.get_graphics_annotations", false]], "get_graphics_io() (ikomia.dataprocess.pydataprocess.ctextio method)": [[75, "ikomia.dataprocess.pydataprocess.CTextIO.get_graphics_io", false]], "get_graphics_mask() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.get_graphics_mask", false]], "get_graphics_mask() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.get_graphics_mask", false]], "get_graphics_mask() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.get_graphics_mask", false]], "get_graphics_mask() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.get_graphics_mask", false]], "get_graphics_mask() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.get_graphics_mask", false]], "get_hash_value() (ikomia.core.pycore.cworkflowtaskparam method)": [[40, "ikomia.core.pycore.CWorkflowTaskParam.get_hash_value", false]], "get_id() (ikomia.core.pycore.cgraphicscomplexpolygon method)": [[26, "ikomia.core.pycore.CGraphicsComplexPolygon.get_id", false]], "get_id() (ikomia.core.pycore.cgraphicsellipse method)": [[28, "ikomia.core.pycore.CGraphicsEllipse.get_id", false]], "get_id() (ikomia.core.pycore.cgraphicsitem method)": [[29, "ikomia.core.pycore.CGraphicsItem.get_id", false]], "get_id() (ikomia.core.pycore.cgraphicspoint method)": [[30, "ikomia.core.pycore.CGraphicsPoint.get_id", false]], "get_id() (ikomia.core.pycore.cgraphicspolygon method)": [[31, "ikomia.core.pycore.CGraphicsPolygon.get_id", false]], "get_id() (ikomia.core.pycore.cgraphicspolyline method)": [[32, "ikomia.core.pycore.CGraphicsPolyline.get_id", false]], "get_id() (ikomia.core.pycore.cgraphicsrectangle method)": [[33, "ikomia.core.pycore.CGraphicsRectangle.get_id", false]], "get_id() (ikomia.core.pycore.cgraphicstext method)": [[34, "ikomia.core.pycore.CGraphicsText.get_id", false]], "get_image() (ikomia.dataprocess.pydataprocess.cimageio method)": [[60, "ikomia.dataprocess.pydataprocess.CImageIO.get_image", false]], "get_image() (ikomia.dataprocess.pydataprocess.cvideoio method)": [[76, "ikomia.dataprocess.pydataprocess.CVideoIO.get_image", false]], "get_image_index() (ikomia.dataprocess.pydataprocess.cgraphicsoutput method)": [[59, "ikomia.dataprocess.pydataprocess.CGraphicsOutput.get_image_index", false]], "get_image_paths() (ikomia.dataprocess.pydataprocess.cdatasetio method)": [[57, "ikomia.dataprocess.pydataprocess.CDatasetIO.get_image_paths", false]], "get_image_paths() (ikomia.dnn.datasetio.ikdatasetio method)": [[81, "ikomia.dnn.datasetio.IkDatasetIO.get_image_paths", false]], "get_image_with_graphics() (ikomia.dataprocess.pydataprocess.cclassificationtask method)": [[3, "ikomia.dataprocess.pydataprocess.CClassificationTask.get_image_with_graphics", false]], "get_image_with_graphics() (ikomia.dataprocess.pydataprocess.cimageio method)": [[60, "ikomia.dataprocess.pydataprocess.CImageIO.get_image_with_graphics", false]], "get_image_with_graphics() (ikomia.dataprocess.pydataprocess.cinstancesegmentationtask method)": [[6, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationTask.get_image_with_graphics", false]], "get_image_with_graphics() (ikomia.dataprocess.pydataprocess.ckeypointdetectiontask method)": [[7, "ikomia.dataprocess.pydataprocess.CKeypointDetectionTask.get_image_with_graphics", false]], "get_image_with_graphics() (ikomia.dataprocess.pydataprocess.cobjectdetectiontask method)": [[8, "ikomia.dataprocess.pydataprocess.CObjectDetectionTask.get_image_with_graphics", false]], "get_image_with_graphics() (ikomia.dataprocess.pydataprocess.csemanticsegmentationtask method)": [[9, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationTask.get_image_with_graphics", false]], "get_image_with_mask() (ikomia.dataprocess.pydataprocess.cimageio method)": [[60, "ikomia.dataprocess.pydataprocess.CImageIO.get_image_with_mask", false]], "get_image_with_mask() (ikomia.dataprocess.pydataprocess.cinstancesegmentationtask method)": [[6, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationTask.get_image_with_mask", false]], "get_image_with_mask() (ikomia.dataprocess.pydataprocess.csemanticsegmentationtask method)": [[9, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationTask.get_image_with_mask", false]], "get_image_with_mask_and_graphics() (ikomia.dataprocess.pydataprocess.cimageio method)": [[60, "ikomia.dataprocess.pydataprocess.CImageIO.get_image_with_mask_and_graphics", false]], "get_image_with_mask_and_graphics() (ikomia.dataprocess.pydataprocess.cinstancesegmentationtask method)": [[6, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationTask.get_image_with_mask_and_graphics", false]], "get_image_with_mask_and_graphics() (ikomia.dataprocess.pydataprocess.csemanticsegmentationtask method)": [[9, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationTask.get_image_with_mask_and_graphics", false]], "get_in_edges() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.get_in_edges", false]], "get_in_edges() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.get_in_edges", false]], "get_input() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.get_input", false]], "get_input() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.get_input", false]], "get_input() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.get_input", false]], "get_input() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.get_input", false]], "get_input() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.get_input", false]], "get_input() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.get_input", false]], "get_input() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.get_input", false]], "get_input() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.get_input", false]], "get_input_count() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.get_input_count", false]], "get_input_count() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.get_input_count", false]], "get_input_count() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.get_input_count", false]], "get_input_count() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.get_input_count", false]], "get_input_count() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.get_input_count", false]], "get_input_count() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.get_input_count", false]], "get_input_count() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.get_input_count", false]], "get_input_count() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.get_input_count", false]], "get_input_data_type() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.get_input_data_type", false]], "get_input_data_type() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.get_input_data_type", false]], "get_input_data_type() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.get_input_data_type", false]], "get_input_data_type() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.get_input_data_type", false]], "get_input_data_type() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.get_input_data_type", false]], "get_input_data_type() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.get_input_data_type", false]], "get_input_data_type() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.get_input_data_type", false]], "get_input_data_type() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.get_input_data_type", false]], "get_input_objects() (ikomia.dataprocess.pydataprocess.cclassificationtask method)": [[3, "ikomia.dataprocess.pydataprocess.CClassificationTask.get_input_objects", false]], "get_inputs() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.get_inputs", false]], "get_inputs() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.get_inputs", false]], "get_inputs() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.get_inputs", false]], "get_inputs() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.get_inputs", false]], "get_inputs() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.get_inputs", false]], "get_inputs() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.get_inputs", false]], "get_inputs() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.get_inputs", false]], "get_inputs() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.get_inputs", false]], "get_interaction_mask() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.get_interaction_mask", false]], "get_items() (ikomia.dataprocess.pydataprocess.cgraphicsinput method)": [[58, "ikomia.dataprocess.pydataprocess.CGraphicsInput.get_items", false]], "get_items() (ikomia.dataprocess.pydataprocess.cgraphicsoutput method)": [[59, "ikomia.dataprocess.pydataprocess.CGraphicsOutput.get_items", false]], "get_keypoint_links() (ikomia.dataprocess.pydataprocess.ckeypointdetectiontask method)": [[7, "ikomia.dataprocess.pydataprocess.CKeypointDetectionTask.get_keypoint_links", false]], "get_keypoint_links() (ikomia.dataprocess.pydataprocess.ckeypointsio method)": [[64, "ikomia.dataprocess.pydataprocess.CKeypointsIO.get_keypoint_links", false]], "get_keypoint_names() (ikomia.dataprocess.pydataprocess.ckeypointdetectiontask method)": [[7, "ikomia.dataprocess.pydataprocess.CKeypointDetectionTask.get_keypoint_names", false]], "get_keypoint_names() (ikomia.dataprocess.pydataprocess.ckeypointsio method)": [[64, "ikomia.dataprocess.pydataprocess.CKeypointsIO.get_keypoint_names", false]], "get_last_run_folder() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.get_last_run_folder", false]], "get_mask() (ikomia.dataprocess.pydataprocess.csemanticsegmentationio method)": [[72, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationIO.get_mask", false]], "get_mask_path() (ikomia.dataprocess.pydataprocess.cdatasetio method)": [[57, "ikomia.dataprocess.pydataprocess.CDatasetIO.get_mask_path", false]], "get_mask_path() (ikomia.dnn.datasetio.ikdatasetio method)": [[81, "ikomia.dnn.datasetio.IkDatasetIO.get_mask_path", false]], "get_measure_info() (ikomia.dataprocess.pydataprocess.cobjectmeasure method)": [[69, "ikomia.dataprocess.pydataprocess.CObjectMeasure.get_measure_info", false]], "get_measures() (ikomia.dataprocess.pydataprocess.cblobmeasureio method)": [[55, "ikomia.dataprocess.pydataprocess.CBlobMeasureIO.get_measures", false]], "get_memory_load() (ikomia.utils.pyutils.cmemoryinfo method)": [[19, "ikomia.utils.pyutils.CMemoryInfo.get_memory_load", false]], "get_merge_mask() (ikomia.dataprocess.pydataprocess.cinstancesegmentationio method)": [[62, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationIO.get_merge_mask", false]], "get_name() (ikomia.core.pycore.cmeasure static method)": [[35, "ikomia.core.pycore.CMeasure.get_name", false]], "get_names() (ikomia.dataprocess.pydataprocess.cclassificationtask method)": [[3, "ikomia.dataprocess.pydataprocess.CClassificationTask.get_names", false]], "get_names() (ikomia.dataprocess.pydataprocess.cinstancesegmentationtask method)": [[6, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationTask.get_names", false]], "get_names() (ikomia.dataprocess.pydataprocess.cobjectdetectiontask method)": [[8, "ikomia.dataprocess.pydataprocess.CObjectDetectionTask.get_names", false]], "get_names() (ikomia.dataprocess.pydataprocess.csemanticsegmentationtask method)": [[9, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationTask.get_names", false]], "get_object() (ikomia.dataprocess.pydataprocess.cinstancesegmentationio method)": [[62, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationIO.get_object", false]], "get_object() (ikomia.dataprocess.pydataprocess.ckeypointsio method)": [[64, "ikomia.dataprocess.pydataprocess.CKeypointsIO.get_object", false]], "get_object() (ikomia.dataprocess.pydataprocess.cobjectdetectionio method)": [[67, "ikomia.dataprocess.pydataprocess.CObjectDetectionIO.get_object", false]], "get_object_count() (ikomia.dataprocess.pydataprocess.cinstancesegmentationio method)": [[62, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationIO.get_object_count", false]], "get_object_count() (ikomia.dataprocess.pydataprocess.ckeypointsio method)": [[64, "ikomia.dataprocess.pydataprocess.CKeypointsIO.get_object_count", false]], "get_object_count() (ikomia.dataprocess.pydataprocess.cobjectdetectionio method)": [[67, "ikomia.dataprocess.pydataprocess.CObjectDetectionIO.get_object_count", false]], "get_object_names() (ikomia.dataprocess.pydataprocess.ckeypointdetectiontask method)": [[7, "ikomia.dataprocess.pydataprocess.CKeypointDetectionTask.get_object_names", false]], "get_object_sub_image() (ikomia.dataprocess.pydataprocess.cclassificationtask method)": [[3, "ikomia.dataprocess.pydataprocess.CClassificationTask.get_object_sub_image", false]], "get_objects() (ikomia.dataprocess.pydataprocess.cinstancesegmentationio method)": [[62, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationIO.get_objects", false]], "get_objects() (ikomia.dataprocess.pydataprocess.ckeypointsio method)": [[64, "ikomia.dataprocess.pydataprocess.CKeypointsIO.get_objects", false]], "get_objects() (ikomia.dataprocess.pydataprocess.cobjectdetectionio method)": [[67, "ikomia.dataprocess.pydataprocess.CObjectDetectionIO.get_objects", false]], "get_objects_results() (ikomia.dataprocess.pydataprocess.cclassificationtask method)": [[3, "ikomia.dataprocess.pydataprocess.CClassificationTask.get_objects_results", false]], "get_out_edges() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.get_out_edges", false]], "get_out_edges() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.get_out_edges", false]], "get_output() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.get_output", false]], "get_output() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.get_output", false]], "get_output() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.get_output", false]], "get_output() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.get_output", false]], "get_output() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.get_output", false]], "get_output() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.get_output", false]], "get_output() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.get_output", false]], "get_output() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.get_output", false]], "get_output() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.get_output", false]], "get_output() (in module ikomia.core.task)": [[84, "ikomia.core.task.get_output", false]], "get_output_count() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.get_output_count", false]], "get_output_count() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.get_output_count", false]], "get_output_count() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.get_output_count", false]], "get_output_count() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.get_output_count", false]], "get_output_count() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.get_output_count", false]], "get_output_count() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.get_output_count", false]], "get_output_count() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.get_output_count", false]], "get_output_count() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.get_output_count", false]], "get_output_count() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.get_output_count", false]], "get_output_data_type() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.get_output_data_type", false]], "get_output_data_type() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.get_output_data_type", false]], "get_output_data_type() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.get_output_data_type", false]], "get_output_data_type() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.get_output_data_type", false]], "get_output_data_type() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.get_output_data_type", false]], "get_output_data_type() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.get_output_data_type", false]], "get_output_data_type() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.get_output_data_type", false]], "get_output_data_type() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.get_output_data_type", false]], "get_output_data_type() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.get_output_data_type", false]], "get_output_type() (ikomia.dataprocess.pydataprocess.cdatastringio method)": [[56, "ikomia.dataprocess.pydataprocess.CDataStringIO.get_output_type", false]], "get_output_type() (ikomia.dataprocess.pydataprocess.cnumericio method)": [[65, "ikomia.dataprocess.pydataprocess.CNumericIO.get_output_type", false]], "get_outputs() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.get_outputs", false]], "get_outputs() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.get_outputs", false]], "get_outputs() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.get_outputs", false]], "get_outputs() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.get_outputs", false]], "get_outputs() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.get_outputs", false]], "get_outputs() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.get_outputs", false]], "get_outputs() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.get_outputs", false]], "get_outputs() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.get_outputs", false]], "get_outputs() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.get_outputs", false]], "get_overlay_mask() (ikomia.dataprocess.pydataprocess.cimageio method)": [[60, "ikomia.dataprocess.pydataprocess.CImageIO.get_overlay_mask", false]], "get_overlay_mask() (ikomia.dataprocess.pydataprocess.cvideoio method)": [[76, "ikomia.dataprocess.pydataprocess.CVideoIO.get_overlay_mask", false]], "get_param_object() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.get_param_object", false]], "get_param_object() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.get_param_object", false]], "get_parameters() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.get_parameters", false]], "get_parameters() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.get_parameters", false]], "get_parameters() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.get_parameters", false]], "get_parameters() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.get_parameters", false]], "get_parameters() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.get_parameters", false]], "get_parameters() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.get_parameters", false]], "get_parameters() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.get_parameters", false]], "get_parameters() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.get_parameters", false]], "get_parents() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.get_parents", false]], "get_parents() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.get_parents", false]], "get_path() (ikomia.dataprocess.pydataprocess.cpathio method)": [[70, "ikomia.dataprocess.pydataprocess.CPathIO.get_path", false]], "get_plot_type() (ikomia.dataprocess.pydataprocess.cdatastringio method)": [[56, "ikomia.dataprocess.pydataprocess.CDataStringIO.get_plot_type", false]], "get_plot_type() (ikomia.dataprocess.pydataprocess.cnumericio method)": [[65, "ikomia.dataprocess.pydataprocess.CNumericIO.get_plot_type", false]], "get_plugins_directory() (ikomia.dataprocess.pydataprocess.cikomiaregistry method)": [[5, "ikomia.dataprocess.pydataprocess.CIkomiaRegistry.get_plugins_directory", false]], "get_plugins_directory() (ikomia.dataprocess.registry.ikomiaregistry method)": [[15, "ikomia.dataprocess.registry.IkomiaRegistry.get_plugins_directory", false]], "get_polygons() (ikomia.dataprocess.pydataprocess.csemanticsegmentationio method)": [[72, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationIO.get_polygons", false]], "get_private_hub_algorithms() (ikomia.dataprocess.registry.ikomiaregistry method)": [[15, "ikomia.dataprocess.registry.IkomiaRegistry.get_private_hub_algorithms", false]], "get_progress_steps() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.get_progress_steps", false]], "get_progress_steps() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.get_progress_steps", false]], "get_progress_steps() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.get_progress_steps", false]], "get_progress_steps() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.get_progress_steps", false]], "get_progress_steps() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.get_progress_steps", false]], "get_progress_steps() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.get_progress_steps", false]], "get_progress_steps() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.get_progress_steps", false]], "get_progress_steps() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.get_progress_steps", false]], "get_public_hub_algorithms() (ikomia.dataprocess.registry.ikomiaregistry method)": [[15, "ikomia.dataprocess.registry.IkomiaRegistry.get_public_hub_algorithms", false]], "get_required_tasks() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.get_required_tasks", false]], "get_results() (ikomia.dataprocess.pydataprocess.cinstancesegmentationtask method)": [[6, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationTask.get_results", false]], "get_results() (ikomia.dataprocess.pydataprocess.ckeypointdetectiontask method)": [[7, "ikomia.dataprocess.pydataprocess.CKeypointDetectionTask.get_results", false]], "get_results() (ikomia.dataprocess.pydataprocess.cobjectdetectiontask method)": [[8, "ikomia.dataprocess.pydataprocess.CObjectDetectionTask.get_results", false]], "get_results() (ikomia.dataprocess.pydataprocess.csemanticsegmentationtask method)": [[9, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationTask.get_results", false]], "get_root_id() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.get_root_id", false]], "get_root_id() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.get_root_id", false]], "get_root_target_types() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.get_root_target_types", false]], "get_root_target_types() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.get_root_target_types", false]], "get_snapshot() (ikomia.dataprocess.pydataprocess.cvideoio method)": [[76, "ikomia.dataprocess.pydataprocess.CVideoIO.get_snapshot", false]], "get_source_format() (ikomia.dnn.datasetio.ikdatasetio method)": [[81, "ikomia.dnn.datasetio.IkDatasetIO.get_source_format", false]], "get_sub_io_list() (ikomia.core.pycore.cworkflowtaskio method)": [[38, "ikomia.core.pycore.CWorkflowTaskIO.get_sub_io_list", false]], "get_task() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.get_task", false]], "get_task() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.get_task", false]], "get_task_count() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.get_task_count", false]], "get_task_count() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.get_task_count", false]], "get_task_id() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.get_task_id", false]], "get_task_ids() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.get_task_ids", false]], "get_task_ids() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.get_task_ids", false]], "get_task_output() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.get_task_output", false]], "get_tasks() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.get_tasks", false]], "get_text_field() (ikomia.dataprocess.pydataprocess.ctextio method)": [[75, "ikomia.dataprocess.pydataprocess.CTextIO.get_text_field", false]], "get_text_field_count() (ikomia.dataprocess.pydataprocess.ctextio method)": [[75, "ikomia.dataprocess.pydataprocess.CTextIO.get_text_field_count", false]], "get_text_fields() (ikomia.dataprocess.pydataprocess.ctextio method)": [[75, "ikomia.dataprocess.pydataprocess.CTextIO.get_text_fields", false]], "get_time_metrics() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.get_time_metrics", false]], "get_total_elapsed_ms() (ikomia.utils.pyutils.ctimer method)": [[20, "ikomia.utils.pyutils.CTimer.get_total_elapsed_ms", false]], "get_total_elapsed_ns() (ikomia.utils.pyutils.ctimer method)": [[20, "ikomia.utils.pyutils.CTimer.get_total_elapsed_ns", false]], "get_total_elapsed_time() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.get_total_elapsed_time", false]], "get_total_elapsed_time() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.get_total_elapsed_time", false]], "get_total_elapsed_us() (ikomia.utils.pyutils.ctimer method)": [[20, "ikomia.utils.pyutils.CTimer.get_total_elapsed_us", false]], "get_total_memory() (ikomia.utils.pyutils.cmemoryinfo method)": [[19, "ikomia.utils.pyutils.CMemoryInfo.get_total_memory", false]], "get_type() (ikomia.core.pycore.cgraphicscomplexpolygon method)": [[26, "ikomia.core.pycore.CGraphicsComplexPolygon.get_type", false]], "get_type() (ikomia.core.pycore.cgraphicsellipse method)": [[28, "ikomia.core.pycore.CGraphicsEllipse.get_type", false]], "get_type() (ikomia.core.pycore.cgraphicsitem method)": [[29, "ikomia.core.pycore.CGraphicsItem.get_type", false]], "get_type() (ikomia.core.pycore.cgraphicspoint method)": [[30, "ikomia.core.pycore.CGraphicsPoint.get_type", false]], "get_type() (ikomia.core.pycore.cgraphicspolygon method)": [[31, "ikomia.core.pycore.CGraphicsPolygon.get_type", false]], "get_type() (ikomia.core.pycore.cgraphicspolyline method)": [[32, "ikomia.core.pycore.CGraphicsPolyline.get_type", false]], "get_type() (ikomia.core.pycore.cgraphicsrectangle method)": [[33, "ikomia.core.pycore.CGraphicsRectangle.get_type", false]], "get_type() (ikomia.core.pycore.cgraphicstext method)": [[34, "ikomia.core.pycore.CGraphicsText.get_type", false]], "get_unit_element_count() (ikomia.core.pycore.cworkflowtaskio method)": [[38, "ikomia.core.pycore.CWorkflowTaskIO.get_unit_element_count", false]], "get_unit_element_count() (ikomia.dataprocess.pydataprocess.carrayio method)": [[54, "ikomia.dataprocess.pydataprocess.CArrayIO.get_unit_element_count", false]], "get_unit_element_count() (ikomia.dataprocess.pydataprocess.cdatasetio method)": [[57, "ikomia.dataprocess.pydataprocess.CDatasetIO.get_unit_element_count", false]], "get_unit_element_count() (ikomia.dataprocess.pydataprocess.cdatastringio method)": [[56, "ikomia.dataprocess.pydataprocess.CDataStringIO.get_unit_element_count", false]], "get_unit_element_count() (ikomia.dataprocess.pydataprocess.cgraphicsinput method)": [[58, "ikomia.dataprocess.pydataprocess.CGraphicsInput.get_unit_element_count", false]], "get_unit_element_count() (ikomia.dataprocess.pydataprocess.cgraphicsoutput method)": [[59, "ikomia.dataprocess.pydataprocess.CGraphicsOutput.get_unit_element_count", false]], "get_unit_element_count() (ikomia.dataprocess.pydataprocess.cimageio method)": [[60, "ikomia.dataprocess.pydataprocess.CImageIO.get_unit_element_count", false]], "get_unit_element_count() (ikomia.dataprocess.pydataprocess.cnumericio method)": [[65, "ikomia.dataprocess.pydataprocess.CNumericIO.get_unit_element_count", false]], "get_unit_element_count() (ikomia.dataprocess.pydataprocess.cpathio method)": [[70, "ikomia.dataprocess.pydataprocess.CPathIO.get_unit_element_count", false]], "get_unit_element_count() (ikomia.dataprocess.pydataprocess.cvideoio method)": [[76, "ikomia.dataprocess.pydataprocess.CVideoIO.get_unit_element_count", false]], "get_unit_element_count() (ikomia.dataprocess.pydataprocess.cwidgetoutput method)": [[78, "ikomia.dataprocess.pydataprocess.CWidgetOutput.get_unit_element_count", false]], "get_value_list() (ikomia.dataprocess.pydataprocess.cdatastringio method)": [[56, "ikomia.dataprocess.pydataprocess.CDataStringIO.get_value_list", false]], "get_value_list() (ikomia.dataprocess.pydataprocess.cnumericio method)": [[65, "ikomia.dataprocess.pydataprocess.CNumericIO.get_value_list", false]], "get_values() (ikomia.core.pycore.cworkflowtaskparam method)": [[40, "ikomia.core.pycore.CWorkflowTaskParam.get_values", false]], "get_values() (ikomia.core.task.taskparam method)": [[53, "ikomia.core.task.TaskParam.get_values", false]], "get_video_frame_count() (ikomia.dataprocess.pydataprocess.cvideoio method)": [[76, "ikomia.dataprocess.pydataprocess.CVideoIO.get_video_frame_count", false]], "get_video_images() (ikomia.dataprocess.pydataprocess.cvideoio method)": [[76, "ikomia.dataprocess.pydataprocess.CVideoIO.get_video_images", false]], "get_video_path() (ikomia.dataprocess.pydataprocess.cvideoio method)": [[76, "ikomia.dataprocess.pydataprocess.CVideoIO.get_video_path", false]], "get_whole_image_results() (ikomia.dataprocess.pydataprocess.cclassificationtask method)": [[3, "ikomia.dataprocess.pydataprocess.CClassificationTask.get_whole_image_results", false]], "get_workflow_parameters() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.get_workflow_parameters", false]], "global_input_changed() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.global_input_changed", false]], "global_input_changed() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.global_input_changed", false]], "global_input_changed() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.global_input_changed", false]], "global_input_changed() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.global_input_changed", false]], "global_input_changed() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.global_input_changed", false]], "global_input_changed() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.global_input_changed", false]], "global_input_changed() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.global_input_changed", false]], "global_input_changed() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.global_input_changed", false]], "graphics_changed() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.graphics_changed", false]], "graphics_changed() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.graphics_changed", false]], "graphics_changed() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.graphics_changed", false]], "graphics_changed() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.graphics_changed", false]], "graphics_changed() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.graphics_changed", false]], "graphics_changed() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.graphics_changed", false]], "graphics_changed() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.graphics_changed", false]], "graphics_changed() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.graphics_changed", false]], "graphics_to_binary_mask() (ikomia.core.pycore.cgraphicsconversion method)": [[27, "ikomia.core.pycore.CGraphicsConversion.graphics_to_binary_mask", false]], "graphicsellipseproperty (class in ikomia.core.pycore)": [[42, "ikomia.core.pycore.GraphicsEllipseProperty", false]], "graphicsitem (class in ikomia.core.pycore)": [[43, "ikomia.core.pycore.GraphicsItem", false]], "graphicspointproperty (class in ikomia.core.pycore)": [[44, "ikomia.core.pycore.GraphicsPointProperty", false]], "graphicspolygonproperty (class in ikomia.core.pycore)": [[45, "ikomia.core.pycore.GraphicsPolygonProperty", false]], "graphicspolylineproperty (class in ikomia.core.pycore)": [[46, "ikomia.core.pycore.GraphicsPolylineProperty", false]], "graphicsrectproperty (class in ikomia.core.pycore)": [[47, "ikomia.core.pycore.GraphicsRectProperty", false]], "graphicsshape (class in ikomia.core.pycore)": [[48, "ikomia.core.pycore.GraphicsShape", false]], "graphicstextproperty (class in ikomia.core.pycore)": [[49, "ikomia.core.pycore.GraphicsTextProperty", false]], "has_video() (ikomia.dataprocess.pydataprocess.cvideoio method)": [[76, "ikomia.dataprocess.pydataprocess.CVideoIO.has_video", false]], "ikdatasetio (class in ikomia.dnn.datasetio)": [[81, "ikomia.dnn.datasetio.IkDatasetIO", false]], "ikomia.core.pycore": [[83, "module-ikomia.core.pycore", false]], "ikomia.core.task": [[84, "module-ikomia.core.task", false]], "ikomia.dataprocess.datadictio": [[85, "module-ikomia.dataprocess.datadictIO", false]], "ikomia.dataprocess.pydataprocess": [[86, "module-ikomia.dataprocess.pydataprocess", false]], "ikomia.dataprocess.registry": [[87, "module-ikomia.dataprocess.registry", false]], "ikomia.dataprocess.workflow": [[88, "module-ikomia.dataprocess.workflow", false]], "ikomia.dnn.dataset": [[89, "module-ikomia.dnn.dataset", false]], "ikomia.dnn.datasetio": [[90, "module-ikomia.dnn.datasetio", false]], "ikomia.dnn.dnntrain": [[91, "module-ikomia.dnn.dnntrain", false]], "ikomia.dnn.torch.datasetmapper": [[92, "module-ikomia.dnn.torch.datasetmapper", false]], "ikomia.dnn.torch.models": [[93, "module-ikomia.dnn.torch.models", false]], "ikomia.utils.displayio": [[94, "module-ikomia.utils.displayIO", false]], "ikomia.utils.pyqtutils": [[95, "module-ikomia.utils.pyqtutils", false]], "ikomia.utils.pyutils": [[96, "module-ikomia.utils.pyutils", false]], "ikomia.utils.qtconversion": [[97, "module-ikomia.utils.qtconversion", false]], "ikomiaregistry (class in ikomia.dataprocess.registry)": [[15, "ikomia.dataprocess.registry.IkomiaRegistry", false]], "info (ikomia.dataprocess.pydataprocess.ctaskfactory attribute)": [[73, "ikomia.dataprocess.pydataprocess.CTaskFactory.info", false]], "init() (ikomia.dataprocess.pydataprocess.cinstancesegmentationio method)": [[62, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationIO.init", false]], "init() (ikomia.dataprocess.pydataprocess.ckeypointsio method)": [[64, "ikomia.dataprocess.pydataprocess.CKeypointsIO.init", false]], "init() (ikomia.dataprocess.pydataprocess.cobjectdetectionio method)": [[67, "ikomia.dataprocess.pydataprocess.CObjectDetectionIO.init", false]], "init() (ikomia.dataprocess.pydataprocess.ctextio method)": [[75, "ikomia.dataprocess.pydataprocess.CTextIO.init", false]], "install_algorithm() (ikomia.dataprocess.registry.ikomiaregistry method)": [[15, "ikomia.dataprocess.registry.IkomiaRegistry.install_algorithm", false]], "install_requirements() (in module ikomia.dataprocess.workflow)": [[88, "ikomia.dataprocess.workflow.install_requirements", false]], "iodatatype (class in ikomia.core.pycore)": [[50, "ikomia.core.pycore.IODataType", false]], "is_all_loaded() (ikomia.dataprocess.pydataprocess.cikomiaregistry method)": [[5, "ikomia.dataprocess.pydataprocess.CIkomiaRegistry.is_all_loaded", false]], "is_composite() (ikomia.core.pycore.cworkflowtaskio method)": [[38, "ikomia.core.pycore.CWorkflowTaskIO.is_composite", false]], "is_data_available() (ikomia.core.pycore.cworkflowtaskio method)": [[38, "ikomia.core.pycore.CWorkflowTaskIO.is_data_available", false]], "is_data_available() (ikomia.dataprocess.datadictio.datadictio method)": [[0, "ikomia.dataprocess.datadictIO.DataDictIO.is_data_available", false]], "is_data_available() (ikomia.dataprocess.pydataprocess.carrayio method)": [[54, "ikomia.dataprocess.pydataprocess.CArrayIO.is_data_available", false]], "is_data_available() (ikomia.dataprocess.pydataprocess.cblobmeasureio method)": [[55, "ikomia.dataprocess.pydataprocess.CBlobMeasureIO.is_data_available", false]], "is_data_available() (ikomia.dataprocess.pydataprocess.cdatasetio method)": [[57, "ikomia.dataprocess.pydataprocess.CDatasetIO.is_data_available", false]], "is_data_available() (ikomia.dataprocess.pydataprocess.cdatastringio method)": [[56, "ikomia.dataprocess.pydataprocess.CDataStringIO.is_data_available", false]], "is_data_available() (ikomia.dataprocess.pydataprocess.cgraphicsinput method)": [[58, "ikomia.dataprocess.pydataprocess.CGraphicsInput.is_data_available", false]], "is_data_available() (ikomia.dataprocess.pydataprocess.cgraphicsoutput method)": [[59, "ikomia.dataprocess.pydataprocess.CGraphicsOutput.is_data_available", false]], "is_data_available() (ikomia.dataprocess.pydataprocess.cimageio method)": [[60, "ikomia.dataprocess.pydataprocess.CImageIO.is_data_available", false]], "is_data_available() (ikomia.dataprocess.pydataprocess.cinstancesegmentationio method)": [[62, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationIO.is_data_available", false]], "is_data_available() (ikomia.dataprocess.pydataprocess.ckeypointsio method)": [[64, "ikomia.dataprocess.pydataprocess.CKeypointsIO.is_data_available", false]], "is_data_available() (ikomia.dataprocess.pydataprocess.cnumericio method)": [[65, "ikomia.dataprocess.pydataprocess.CNumericIO.is_data_available", false]], "is_data_available() (ikomia.dataprocess.pydataprocess.cobjectdetectionio method)": [[67, "ikomia.dataprocess.pydataprocess.CObjectDetectionIO.is_data_available", false]], "is_data_available() (ikomia.dataprocess.pydataprocess.cpathio method)": [[70, "ikomia.dataprocess.pydataprocess.CPathIO.is_data_available", false]], "is_data_available() (ikomia.dataprocess.pydataprocess.csemanticsegmentationio method)": [[72, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationIO.is_data_available", false]], "is_data_available() (ikomia.dataprocess.pydataprocess.ctextio method)": [[75, "ikomia.dataprocess.pydataprocess.CTextIO.is_data_available", false]], "is_data_available() (ikomia.dataprocess.pydataprocess.cvideoio method)": [[76, "ikomia.dataprocess.pydataprocess.CVideoIO.is_data_available", false]], "is_data_available() (ikomia.dataprocess.pydataprocess.cwidgetoutput method)": [[78, "ikomia.dataprocess.pydataprocess.CWidgetOutput.is_data_available", false]], "is_data_available() (ikomia.dnn.datasetio.ikdatasetio method)": [[81, "ikomia.dnn.datasetio.IkDatasetIO.is_data_available", false]], "is_graphics_changed_listening() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.is_graphics_changed_listening", false]], "is_graphics_changed_listening() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.is_graphics_changed_listening", false]], "is_graphics_changed_listening() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.is_graphics_changed_listening", false]], "is_graphics_changed_listening() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.is_graphics_changed_listening", false]], "is_graphics_changed_listening() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.is_graphics_changed_listening", false]], "is_graphics_changed_listening() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.is_graphics_changed_listening", false]], "is_graphics_changed_listening() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.is_graphics_changed_listening", false]], "is_graphics_changed_listening() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.is_graphics_changed_listening", false]], "is_mask_available() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.is_mask_available", false]], "is_mask_available() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.is_mask_available", false]], "is_mask_available() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.is_mask_available", false]], "is_mask_available() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.is_mask_available", false]], "is_mask_available() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.is_mask_available", false]], "is_overlay_available() (ikomia.dataprocess.pydataprocess.cimageio method)": [[60, "ikomia.dataprocess.pydataprocess.CImageIO.is_overlay_available", false]], "is_overlay_available() (ikomia.dataprocess.pydataprocess.cvideoio method)": [[76, "ikomia.dataprocess.pydataprocess.CVideoIO.is_overlay_available", false]], "is_text_item() (ikomia.core.pycore.cgraphicscomplexpolygon method)": [[26, "ikomia.core.pycore.CGraphicsComplexPolygon.is_text_item", false]], "is_text_item() (ikomia.core.pycore.cgraphicsellipse method)": [[28, "ikomia.core.pycore.CGraphicsEllipse.is_text_item", false]], "is_text_item() (ikomia.core.pycore.cgraphicsitem method)": [[29, "ikomia.core.pycore.CGraphicsItem.is_text_item", false]], "is_text_item() (ikomia.core.pycore.cgraphicspoint method)": [[30, "ikomia.core.pycore.CGraphicsPoint.is_text_item", false]], "is_text_item() (ikomia.core.pycore.cgraphicspolygon method)": [[31, "ikomia.core.pycore.CGraphicsPolygon.is_text_item", false]], "is_text_item() (ikomia.core.pycore.cgraphicspolyline method)": [[32, "ikomia.core.pycore.CGraphicsPolyline.is_text_item", false]], "is_text_item() (ikomia.core.pycore.cgraphicsrectangle method)": [[33, "ikomia.core.pycore.CGraphicsRectangle.is_text_item", false]], "is_text_item() (ikomia.core.pycore.cgraphicstext method)": [[34, "ikomia.core.pycore.CGraphicsText.is_text_item", false]], "is_whole_image_classification() (ikomia.dataprocess.pydataprocess.cclassificationtask method)": [[3, "ikomia.dataprocess.pydataprocess.CClassificationTask.is_whole_image_classification", false]], "load() (ikomia.core.pycore.cworkflowtaskio method)": [[38, "ikomia.core.pycore.CWorkflowTaskIO.load", false]], "load() (ikomia.dataprocess.datadictio.datadictio method)": [[0, "ikomia.dataprocess.datadictIO.DataDictIO.load", false]], "load() (ikomia.dataprocess.pydataprocess.cdatastringio method)": [[56, "ikomia.dataprocess.pydataprocess.CDataStringIO.load", false]], "load() (ikomia.dataprocess.pydataprocess.cgraphicsinput method)": [[58, "ikomia.dataprocess.pydataprocess.CGraphicsInput.load", false]], "load() (ikomia.dataprocess.pydataprocess.cgraphicsoutput method)": [[59, "ikomia.dataprocess.pydataprocess.CGraphicsOutput.load", false]], "load() (ikomia.dataprocess.pydataprocess.cimageio method)": [[60, "ikomia.dataprocess.pydataprocess.CImageIO.load", false]], "load() (ikomia.dataprocess.pydataprocess.cinstancesegmentationio method)": [[62, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationIO.load", false]], "load() (ikomia.dataprocess.pydataprocess.ckeypointsio method)": [[64, "ikomia.dataprocess.pydataprocess.CKeypointsIO.load", false]], "load() (ikomia.dataprocess.pydataprocess.cnumericio method)": [[65, "ikomia.dataprocess.pydataprocess.CNumericIO.load", false]], "load() (ikomia.dataprocess.pydataprocess.cobjectdetectionio method)": [[67, "ikomia.dataprocess.pydataprocess.CObjectDetectionIO.load", false]], "load() (ikomia.dataprocess.pydataprocess.csemanticsegmentationio method)": [[72, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationIO.load", false]], "load() (ikomia.dataprocess.pydataprocess.ctextio method)": [[75, "ikomia.dataprocess.pydataprocess.CTextIO.load", false]], "load() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.load", false]], "load() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.load", false]], "load() (ikomia.dnn.datasetio.ikdatasetio method)": [[81, "ikomia.dnn.datasetio.IkDatasetIO.load", false]], "load() (in module ikomia.dataprocess.workflow)": [[88, "ikomia.dataprocess.workflow.load", false]], "load_algorithms() (ikomia.dataprocess.pydataprocess.cikomiaregistry method)": [[5, "ikomia.dataprocess.pydataprocess.CIkomiaRegistry.load_algorithms", false]], "load_coco_dataset() (in module ikomia.dnn.dataset)": [[89, "ikomia.dnn.dataset.load_coco_dataset", false]], "load_cpp_algorithm() (ikomia.dataprocess.pydataprocess.cikomiaregistry method)": [[5, "ikomia.dataprocess.pydataprocess.CIkomiaRegistry.load_cpp_algorithm", false]], "load_cpp_algorithms() (ikomia.dataprocess.pydataprocess.cikomiaregistry method)": [[5, "ikomia.dataprocess.pydataprocess.CIkomiaRegistry.load_cpp_algorithms", false]], "load_pascalvoc_dataset() (in module ikomia.dnn.dataset)": [[89, "ikomia.dnn.dataset.load_pascalvoc_dataset", false]], "load_python_algorithm() (ikomia.dataprocess.pydataprocess.cikomiaregistry method)": [[5, "ikomia.dataprocess.pydataprocess.CIkomiaRegistry.load_python_algorithm", false]], "load_python_algorithms() (ikomia.dataprocess.pydataprocess.cikomiaregistry method)": [[5, "ikomia.dataprocess.pydataprocess.CIkomiaRegistry.load_python_algorithms", false]], "load_via_dataset() (in module ikomia.dnn.dataset)": [[89, "ikomia.dnn.dataset.load_via_dataset", false]], "load_yolo_dataset() (in module ikomia.dnn.dataset)": [[89, "ikomia.dnn.dataset.load_yolo_dataset", false]], "log_artifact() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.log_artifact", false]], "log_artifacts() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.log_artifacts", false]], "log_metric() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.log_metric", false]], "log_metrics() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.log_metrics", false]], "log_param() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.log_param", false]], "log_params() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.log_params", false]], "manage_outputs() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.manage_outputs", false]], "mask_rcnn() (in module ikomia.dnn.torch.models)": [[93, "ikomia.dnn.torch.models.mask_rcnn", false]], "measureid (class in ikomia.core.pycore)": [[51, "ikomia.core.pycore.MeasureId", false]], "message() (ikomia.utils.pyutils.cexception method)": [[18, "ikomia.utils.pyutils.CException.message", false]], "mnasnet() (in module ikomia.dnn.torch.models)": [[93, "ikomia.dnn.torch.models.mnasnet", false]], "module": [[83, "module-ikomia.core.pycore", false], [84, "module-ikomia.core.task", false], [85, "module-ikomia.dataprocess.datadictIO", false], [86, "module-ikomia.dataprocess.pydataprocess", false], [87, "module-ikomia.dataprocess.registry", false], [88, "module-ikomia.dataprocess.workflow", false], [89, "module-ikomia.dnn.dataset", false], [90, "module-ikomia.dnn.datasetio", false], [91, "module-ikomia.dnn.dnntrain", false], [92, "module-ikomia.dnn.torch.datasetmapper", false], [93, "module-ikomia.dnn.torch.models", false], [94, "module-ikomia.utils.displayIO", false], [95, "module-ikomia.utils.pyqtutils", false], [96, "module-ikomia.utils.pyutils", false], [97, "module-ikomia.utils.qtconversion", false]], "name (ikomia.dataprocess.pydataprocess.cwidgetfactory attribute)": [[77, "ikomia.dataprocess.pydataprocess.CWidgetFactory.name", false]], "notify_video_end() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.notify_video_end", false]], "notify_video_end() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.notify_video_end", false]], "notify_video_end() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.notify_video_end", false]], "notify_video_start() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.notify_video_start", false]], "notify_video_start() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.notify_video_start", false]], "notify_video_start() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.notify_video_start", false]], "numericoutputtype (class in ikomia.dataprocess.pydataprocess)": [[79, "ikomia.dataprocess.pydataprocess.NumericOutputType", false]], "on_apply() (ikomia.core.pycore.cworkflowtaskwidget method)": [[41, "ikomia.core.pycore.CWorkflowTaskWidget.on_apply", false]], "ostype (class in ikomia.utils.pyutils)": [[22, "ikomia.utils.pyutils.OSType", false]], "parameters_modified() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.parameters_modified", false]], "parameters_modified() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.parameters_modified", false]], "parameters_modified() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.parameters_modified", false]], "parameters_modified() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.parameters_modified", false]], "parameters_modified() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.parameters_modified", false]], "parameters_modified() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.parameters_modified", false]], "parameters_modified() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.parameters_modified", false]], "parameters_modified() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.parameters_modified", false]], "plottype (class in ikomia.dataprocess.pydataprocess)": [[80, "ikomia.dataprocess.pydataprocess.PlotType", false]], "pluginstate (class in ikomia.utils.pyutils)": [[23, "ikomia.utils.pyutils.PluginState", false]], "polygon_to_mask() (in module ikomia.dnn.dataset)": [[89, "ikomia.dnn.dataset.polygon_to_mask", false]], "prepare_runtime_env() (in module ikomia.dataprocess.workflow)": [[88, "ikomia.dataprocess.workflow.prepare_runtime_env", false]], "print_elapsed_time_ms() (ikomia.utils.pyutils.ctimer method)": [[20, "ikomia.utils.pyutils.CTimer.print_elapsed_time_ms", false]], "print_total_elapsed_time_ms() (ikomia.utils.pyutils.ctimer method)": [[20, "ikomia.utils.pyutils.CTimer.print_total_elapsed_time_ms", false]], "read_class_names() (ikomia.dataprocess.pydataprocess.cclassificationtask method)": [[3, "ikomia.dataprocess.pydataprocess.CClassificationTask.read_class_names", false]], "read_class_names() (ikomia.dataprocess.pydataprocess.cinstancesegmentationtask method)": [[6, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationTask.read_class_names", false]], "read_class_names() (ikomia.dataprocess.pydataprocess.ckeypointdetectiontask method)": [[7, "ikomia.dataprocess.pydataprocess.CKeypointDetectionTask.read_class_names", false]], "read_class_names() (ikomia.dataprocess.pydataprocess.cobjectdetectiontask method)": [[8, "ikomia.dataprocess.pydataprocess.CObjectDetectionTask.read_class_names", false]], "read_class_names() (ikomia.dataprocess.pydataprocess.csemanticsegmentationtask method)": [[9, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationTask.read_class_names", false]], "read_class_names() (in module ikomia.dnn.dataset)": [[89, "ikomia.dnn.dataset.read_class_names", false]], "register_io() (ikomia.dataprocess.pydataprocess.cikomiaregistry method)": [[5, "ikomia.dataprocess.pydataprocess.CIkomiaRegistry.register_io", false]], "register_task() (ikomia.dataprocess.pydataprocess.cikomiaregistry method)": [[5, "ikomia.dataprocess.pydataprocess.CIkomiaRegistry.register_task", false]], "register_task() (ikomia.dataprocess.registry.ikomiaregistry method)": [[15, "ikomia.dataprocess.registry.IkomiaRegistry.register_task", false]], "remove_input() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.remove_input", false]], "remove_input() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.remove_input", false]], "remove_input() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.remove_input", false]], "remove_input() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.remove_input", false]], "remove_input() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.remove_input", false]], "remove_input() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.remove_input", false]], "remove_input() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.remove_input", false]], "remove_input() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.remove_input", false]], "remove_input() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.remove_input", false]], "remove_input() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.remove_input", false]], "remove_task() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.remove_task", false]], "resnet() (in module ikomia.dnn.torch.models)": [[93, "ikomia.dnn.torch.models.resnet", false]], "resnext() (in module ikomia.dnn.torch.models)": [[93, "ikomia.dnn.torch.models.resnext", false]], "root() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.root", false]], "run() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.run", false]], "run() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.run", false]], "run() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.run", false]], "run() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.run", false]], "run() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.run", false]], "run() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.run", false]], "run() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.run", false]], "run() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.run", false]], "run() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.run", false]], "run() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.run", false]], "run_on() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.run_on", false]], "save() (ikomia.core.pycore.cworkflowtaskio method)": [[38, "ikomia.core.pycore.CWorkflowTaskIO.save", false]], "save() (ikomia.dataprocess.datadictio.datadictio method)": [[0, "ikomia.dataprocess.datadictIO.DataDictIO.save", false]], "save() (ikomia.dataprocess.pydataprocess.cdatasetio method)": [[57, "ikomia.dataprocess.pydataprocess.CDatasetIO.save", false]], "save() (ikomia.dataprocess.pydataprocess.cdatastringio method)": [[56, "ikomia.dataprocess.pydataprocess.CDataStringIO.save", false]], "save() (ikomia.dataprocess.pydataprocess.cgraphicsinput method)": [[58, "ikomia.dataprocess.pydataprocess.CGraphicsInput.save", false]], "save() (ikomia.dataprocess.pydataprocess.cgraphicsoutput method)": [[59, "ikomia.dataprocess.pydataprocess.CGraphicsOutput.save", false]], "save() (ikomia.dataprocess.pydataprocess.cimageio method)": [[60, "ikomia.dataprocess.pydataprocess.CImageIO.save", false]], "save() (ikomia.dataprocess.pydataprocess.cinstancesegmentationio method)": [[62, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationIO.save", false]], "save() (ikomia.dataprocess.pydataprocess.ckeypointsio method)": [[64, "ikomia.dataprocess.pydataprocess.CKeypointsIO.save", false]], "save() (ikomia.dataprocess.pydataprocess.cnumericio method)": [[65, "ikomia.dataprocess.pydataprocess.CNumericIO.save", false]], "save() (ikomia.dataprocess.pydataprocess.cobjectdetectionio method)": [[67, "ikomia.dataprocess.pydataprocess.CObjectDetectionIO.save", false]], "save() (ikomia.dataprocess.pydataprocess.csemanticsegmentationio method)": [[72, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationIO.save", false]], "save() (ikomia.dataprocess.pydataprocess.ctextio method)": [[75, "ikomia.dataprocess.pydataprocess.CTextIO.save", false]], "save() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.save", false]], "save() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.save", false]], "save() (ikomia.dnn.datasetio.ikdatasetio method)": [[81, "ikomia.dnn.datasetio.IkDatasetIO.save", false]], "set_action_flag() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.set_action_flag", false]], "set_action_flag() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.set_action_flag", false]], "set_action_flag() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.set_action_flag", false]], "set_action_flag() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.set_action_flag", false]], "set_action_flag() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.set_action_flag", false]], "set_action_flag() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.set_action_flag", false]], "set_action_flag() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.set_action_flag", false]], "set_action_flag() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.set_action_flag", false]], "set_active() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.set_active", false]], "set_active() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.set_active", false]], "set_active() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.set_active", false]], "set_active() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.set_active", false]], "set_active() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.set_active", false]], "set_active() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.set_active", false]], "set_active() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.set_active", false]], "set_active() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.set_active", false]], "set_apply_btn_hidden() (ikomia.core.pycore.cworkflowtaskwidget method)": [[41, "ikomia.core.pycore.CWorkflowTaskWidget.set_apply_btn_hidden", false]], "set_array() (ikomia.dataprocess.pydataprocess.carrayio method)": [[54, "ikomia.dataprocess.pydataprocess.CArrayIO.set_array", false]], "set_auto_save() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.set_auto_save", false]], "set_auto_save() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.set_auto_save", false]], "set_auto_save() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.set_auto_save", false]], "set_auto_save() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.set_auto_save", false]], "set_category() (ikomia.core.pycore.cgraphicscomplexpolygon method)": [[26, "ikomia.core.pycore.CGraphicsComplexPolygon.set_category", false]], "set_category() (ikomia.core.pycore.cgraphicsellipse method)": [[28, "ikomia.core.pycore.CGraphicsEllipse.set_category", false]], "set_category() (ikomia.core.pycore.cgraphicsitem method)": [[29, "ikomia.core.pycore.CGraphicsItem.set_category", false]], "set_category() (ikomia.core.pycore.cgraphicspoint method)": [[30, "ikomia.core.pycore.CGraphicsPoint.set_category", false]], "set_category() (ikomia.core.pycore.cgraphicspolygon method)": [[31, "ikomia.core.pycore.CGraphicsPolygon.set_category", false]], "set_category() (ikomia.core.pycore.cgraphicspolyline method)": [[32, "ikomia.core.pycore.CGraphicsPolyline.set_category", false]], "set_category() (ikomia.core.pycore.cgraphicsrectangle method)": [[33, "ikomia.core.pycore.CGraphicsRectangle.set_category", false]], "set_category() (ikomia.core.pycore.cgraphicstext method)": [[34, "ikomia.core.pycore.CGraphicsText.set_category", false]], "set_channel_count() (ikomia.dataprocess.pydataprocess.cimageio method)": [[60, "ikomia.dataprocess.pydataprocess.CImageIO.set_channel_count", false]], "set_channel_count() (ikomia.dataprocess.pydataprocess.cvideoio method)": [[76, "ikomia.dataprocess.pydataprocess.CVideoIO.set_channel_count", false]], "set_class_colors() (ikomia.dataprocess.pydataprocess.csemanticsegmentationio method)": [[72, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationIO.set_class_colors", false]], "set_class_names() (ikomia.dataprocess.pydataprocess.csemanticsegmentationio method)": [[72, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationIO.set_class_names", false]], "set_colors() (ikomia.dataprocess.pydataprocess.cclassificationtask method)": [[3, "ikomia.dataprocess.pydataprocess.CClassificationTask.set_colors", false]], "set_colors() (ikomia.dataprocess.pydataprocess.cinstancesegmentationtask method)": [[6, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationTask.set_colors", false]], "set_colors() (ikomia.dataprocess.pydataprocess.cobjectdetectiontask method)": [[8, "ikomia.dataprocess.pydataprocess.CObjectDetectionTask.set_colors", false]], "set_colors() (ikomia.dataprocess.pydataprocess.csemanticsegmentationtask method)": [[9, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationTask.set_colors", false]], "set_current_image() (ikomia.dataprocess.pydataprocess.cvideoio method)": [[76, "ikomia.dataprocess.pydataprocess.CVideoIO.set_current_image", false]], "set_directory_input() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.set_directory_input", false]], "set_exposed_parameter() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.set_exposed_parameter", false]], "set_image() (ikomia.dataprocess.pydataprocess.cimageio method)": [[60, "ikomia.dataprocess.pydataprocess.CImageIO.set_image", false]], "set_image() (ikomia.dataprocess.pydataprocess.cvideoio method)": [[76, "ikomia.dataprocess.pydataprocess.CVideoIO.set_image", false]], "set_image_index() (ikomia.dataprocess.pydataprocess.cgraphicsoutput method)": [[59, "ikomia.dataprocess.pydataprocess.CGraphicsOutput.set_image_index", false]], "set_image_input() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.set_image_input", false]], "set_input() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.set_input", false]], "set_input() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.set_input", false]], "set_input() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.set_input", false]], "set_input() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.set_input", false]], "set_input() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.set_input", false]], "set_input() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.set_input", false]], "set_input() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.set_input", false]], "set_input() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.set_input", false]], "set_input() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.set_input", false]], "set_input() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.set_input", false]], "set_input_data_type() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.set_input_data_type", false]], "set_input_data_type() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.set_input_data_type", false]], "set_input_data_type() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.set_input_data_type", false]], "set_input_data_type() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.set_input_data_type", false]], "set_input_data_type() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.set_input_data_type", false]], "set_input_data_type() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.set_input_data_type", false]], "set_input_data_type() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.set_input_data_type", false]], "set_input_data_type() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.set_input_data_type", false]], "set_inputs() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.set_inputs", false]], "set_inputs() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.set_inputs", false]], "set_inputs() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.set_inputs", false]], "set_inputs() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.set_inputs", false]], "set_inputs() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.set_inputs", false]], "set_inputs() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.set_inputs", false]], "set_inputs() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.set_inputs", false]], "set_inputs() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.set_inputs", false]], "set_items() (ikomia.dataprocess.pydataprocess.cgraphicsinput method)": [[58, "ikomia.dataprocess.pydataprocess.CGraphicsInput.set_items", false]], "set_items() (ikomia.dataprocess.pydataprocess.cgraphicsoutput method)": [[59, "ikomia.dataprocess.pydataprocess.CGraphicsOutput.set_items", false]], "set_keypoint_links() (ikomia.dataprocess.pydataprocess.ckeypointdetectiontask method)": [[7, "ikomia.dataprocess.pydataprocess.CKeypointDetectionTask.set_keypoint_links", false]], "set_keypoint_links() (ikomia.dataprocess.pydataprocess.ckeypointsio method)": [[64, "ikomia.dataprocess.pydataprocess.CKeypointsIO.set_keypoint_links", false]], "set_keypoint_names() (ikomia.dataprocess.pydataprocess.ckeypointdetectiontask method)": [[7, "ikomia.dataprocess.pydataprocess.CKeypointDetectionTask.set_keypoint_names", false]], "set_keypoint_names() (ikomia.dataprocess.pydataprocess.ckeypointsio method)": [[64, "ikomia.dataprocess.pydataprocess.CKeypointsIO.set_keypoint_names", false]], "set_layout() (ikomia.core.pycore.cworkflowtaskwidget method)": [[41, "ikomia.core.pycore.CWorkflowTaskWidget.set_layout", false]], "set_mask() (ikomia.dataprocess.pydataprocess.csemanticsegmentationio method)": [[72, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationIO.set_mask", false]], "set_mask() (ikomia.dataprocess.pydataprocess.csemanticsegmentationtask method)": [[9, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationTask.set_mask", false]], "set_names() (ikomia.dataprocess.pydataprocess.cclassificationtask method)": [[3, "ikomia.dataprocess.pydataprocess.CClassificationTask.set_names", false]], "set_names() (ikomia.dataprocess.pydataprocess.cinstancesegmentationtask method)": [[6, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationTask.set_names", false]], "set_names() (ikomia.dataprocess.pydataprocess.cobjectdetectiontask method)": [[8, "ikomia.dataprocess.pydataprocess.CObjectDetectionTask.set_names", false]], "set_names() (ikomia.dataprocess.pydataprocess.csemanticsegmentationtask method)": [[9, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationTask.set_names", false]], "set_new_layer() (ikomia.dataprocess.pydataprocess.cgraphicsoutput method)": [[59, "ikomia.dataprocess.pydataprocess.CGraphicsOutput.set_new_layer", false]], "set_object_colors() (ikomia.dataprocess.pydataprocess.ckeypointdetectiontask method)": [[7, "ikomia.dataprocess.pydataprocess.CKeypointDetectionTask.set_object_colors", false]], "set_object_measure() (ikomia.dataprocess.pydataprocess.cblobmeasureio method)": [[55, "ikomia.dataprocess.pydataprocess.CBlobMeasureIO.set_object_measure", false]], "set_object_names() (ikomia.dataprocess.pydataprocess.ckeypointdetectiontask method)": [[7, "ikomia.dataprocess.pydataprocess.CKeypointDetectionTask.set_object_names", false]], "set_output() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.set_output", false]], "set_output() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.set_output", false]], "set_output() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.set_output", false]], "set_output() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.set_output", false]], "set_output() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.set_output", false]], "set_output() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.set_output", false]], "set_output() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.set_output", false]], "set_output() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.set_output", false]], "set_output_color_map() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.set_output_color_map", false]], "set_output_color_map() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.set_output_color_map", false]], "set_output_color_map() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.set_output_color_map", false]], "set_output_color_map() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.set_output_color_map", false]], "set_output_color_map() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.set_output_color_map", false]], "set_output_data_type() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.set_output_data_type", false]], "set_output_data_type() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.set_output_data_type", false]], "set_output_data_type() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.set_output_data_type", false]], "set_output_data_type() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.set_output_data_type", false]], "set_output_data_type() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.set_output_data_type", false]], "set_output_data_type() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.set_output_data_type", false]], "set_output_data_type() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.set_output_data_type", false]], "set_output_data_type() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.set_output_data_type", false]], "set_output_folder() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.set_output_folder", false]], "set_output_folder() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.set_output_folder", false]], "set_output_type() (ikomia.dataprocess.pydataprocess.cdatastringio method)": [[56, "ikomia.dataprocess.pydataprocess.CDataStringIO.set_output_type", false]], "set_output_type() (ikomia.dataprocess.pydataprocess.cnumericio method)": [[65, "ikomia.dataprocess.pydataprocess.CNumericIO.set_output_type", false]], "set_outputs() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.set_outputs", false]], "set_outputs() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.set_outputs", false]], "set_outputs() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.set_outputs", false]], "set_outputs() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.set_outputs", false]], "set_outputs() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.set_outputs", false]], "set_outputs() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.set_outputs", false]], "set_outputs() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.set_outputs", false]], "set_outputs() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.set_outputs", false]], "set_overlay_mask() (ikomia.dataprocess.pydataprocess.cimageio method)": [[60, "ikomia.dataprocess.pydataprocess.CImageIO.set_overlay_mask", false]], "set_overlay_mask() (ikomia.dataprocess.pydataprocess.cvideoio method)": [[76, "ikomia.dataprocess.pydataprocess.CVideoIO.set_overlay_mask", false]], "set_param_object() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.set_param_object", false]], "set_param_object() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.set_param_object", false]], "set_parameters() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.set_parameters", false]], "set_parameters() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.set_parameters", false]], "set_parameters() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.set_parameters", false]], "set_parameters() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.set_parameters", false]], "set_parameters() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.set_parameters", false]], "set_parameters() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.set_parameters", false]], "set_parameters() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.set_parameters", false]], "set_parameters() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.set_parameters", false]], "set_parameters() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.set_parameters", false]], "set_path() (ikomia.dataprocess.pydataprocess.cpathio method)": [[70, "ikomia.dataprocess.pydataprocess.CPathIO.set_path", false]], "set_plot_type() (ikomia.dataprocess.pydataprocess.cdatastringio method)": [[56, "ikomia.dataprocess.pydataprocess.CDataStringIO.set_plot_type", false]], "set_plot_type() (ikomia.dataprocess.pydataprocess.cnumericio method)": [[65, "ikomia.dataprocess.pydataprocess.CNumericIO.set_plot_type", false]], "set_plugins_directory() (ikomia.dataprocess.pydataprocess.cikomiaregistry method)": [[5, "ikomia.dataprocess.pydataprocess.CIkomiaRegistry.set_plugins_directory", false]], "set_plugins_directory() (ikomia.dataprocess.registry.ikomiaregistry method)": [[15, "ikomia.dataprocess.registry.IkomiaRegistry.set_plugins_directory", false]], "set_roi_to_track() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.set_roi_to_track", false]], "set_values() (ikomia.core.pycore.cworkflowtaskparam method)": [[40, "ikomia.core.pycore.CWorkflowTaskParam.set_values", false]], "set_values() (ikomia.core.task.taskparam method)": [[53, "ikomia.core.task.TaskParam.set_values", false]], "set_video_input() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.set_video_input", false]], "set_video_path() (ikomia.dataprocess.pydataprocess.cvideoio method)": [[76, "ikomia.dataprocess.pydataprocess.CVideoIO.set_video_path", false]], "set_video_pos() (ikomia.dataprocess.pydataprocess.cvideoio method)": [[76, "ikomia.dataprocess.pydataprocess.CVideoIO.set_video_pos", false]], "set_whole_image_results() (ikomia.dataprocess.pydataprocess.cclassificationtask method)": [[3, "ikomia.dataprocess.pydataprocess.CClassificationTask.set_whole_image_results", false]], "set_widget() (ikomia.dataprocess.pydataprocess.cwidgetoutput method)": [[78, "ikomia.dataprocess.pydataprocess.CWidgetOutput.set_widget", false]], "set_workflow_parameters() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.set_workflow_parameters", false]], "start() (ikomia.utils.pyutils.ctimer method)": [[20, "ikomia.utils.pyutils.CTimer.start", false]], "start_video() (ikomia.dataprocess.pydataprocess.cvideoio method)": [[76, "ikomia.dataprocess.pydataprocess.CVideoIO.start_video", false]], "start_video_write() (ikomia.dataprocess.pydataprocess.cvideoio method)": [[76, "ikomia.dataprocess.pydataprocess.CVideoIO.start_video_write", false]], "stop() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.stop", false]], "stop() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.stop", false]], "stop() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.stop", false]], "stop() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.stop", false]], "stop() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.stop", false]], "stop() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.stop", false]], "stop() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.stop", false]], "stop() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.stop", false]], "stop() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.stop", false]], "stop() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.stop", false]], "stop_video() (ikomia.dataprocess.pydataprocess.cvideoio method)": [[76, "ikomia.dataprocess.pydataprocess.CVideoIO.stop_video", false]], "stop_video_write() (ikomia.dataprocess.pydataprocess.cvideoio method)": [[76, "ikomia.dataprocess.pydataprocess.CVideoIO.stop_video_write", false]], "taskparam (class in ikomia.core.task)": [[53, "ikomia.core.task.TaskParam", false]], "tasktype (class in ikomia.core.pycore)": [[52, "ikomia.core.pycore.TaskType", false]], "to_json() (ikomia.core.pycore.cworkflowtaskio method)": [[38, "ikomia.core.pycore.CWorkflowTaskIO.to_json", false]], "to_json() (ikomia.dataprocess.datadictio.datadictio method)": [[0, "ikomia.dataprocess.datadictIO.DataDictIO.to_json", false]], "to_json() (ikomia.dataprocess.pydataprocess.cblobmeasureio method)": [[55, "ikomia.dataprocess.pydataprocess.CBlobMeasureIO.to_json", false]], "to_json() (ikomia.dataprocess.pydataprocess.cdatasetio method)": [[57, "ikomia.dataprocess.pydataprocess.CDatasetIO.to_json", false]], "to_json() (ikomia.dataprocess.pydataprocess.cdatastringio method)": [[56, "ikomia.dataprocess.pydataprocess.CDataStringIO.to_json", false]], "to_json() (ikomia.dataprocess.pydataprocess.cgraphicsinput method)": [[58, "ikomia.dataprocess.pydataprocess.CGraphicsInput.to_json", false]], "to_json() (ikomia.dataprocess.pydataprocess.cgraphicsoutput method)": [[59, "ikomia.dataprocess.pydataprocess.CGraphicsOutput.to_json", false]], "to_json() (ikomia.dataprocess.pydataprocess.cimageio method)": [[60, "ikomia.dataprocess.pydataprocess.CImageIO.to_json", false]], "to_json() (ikomia.dataprocess.pydataprocess.cinstancesegmentationio method)": [[62, "ikomia.dataprocess.pydataprocess.CInstanceSegmentationIO.to_json", false]], "to_json() (ikomia.dataprocess.pydataprocess.ckeypointsio method)": [[64, "ikomia.dataprocess.pydataprocess.CKeypointsIO.to_json", false]], "to_json() (ikomia.dataprocess.pydataprocess.cnumericio method)": [[65, "ikomia.dataprocess.pydataprocess.CNumericIO.to_json", false]], "to_json() (ikomia.dataprocess.pydataprocess.cobjectdetectionio method)": [[67, "ikomia.dataprocess.pydataprocess.CObjectDetectionIO.to_json", false]], "to_json() (ikomia.dataprocess.pydataprocess.csemanticsegmentationio method)": [[72, "ikomia.dataprocess.pydataprocess.CSemanticSegmentationIO.to_json", false]], "to_json() (ikomia.dataprocess.pydataprocess.ctextio method)": [[75, "ikomia.dataprocess.pydataprocess.CTextIO.to_json", false]], "trainprocess (class in ikomia.dnn.dnntrain)": [[82, "ikomia.dnn.dnntrain.TrainProcess", false]], "update_algorithm() (ikomia.dataprocess.registry.ikomiaregistry method)": [[15, "ikomia.dataprocess.registry.IkomiaRegistry.update_algorithm", false]], "update_algorithms() (ikomia.dataprocess.registry.ikomiaregistry method)": [[15, "ikomia.dataprocess.registry.IkomiaRegistry.update_algorithms", false]], "update_start_time() (ikomia.dataprocess.pydataprocess.cworkflow method)": [[14, "ikomia.dataprocess.pydataprocess.CWorkflow.update_start_time", false]], "update_start_time() (ikomia.dataprocess.workflow.workflow method)": [[16, "ikomia.dataprocess.workflow.Workflow.update_start_time", false]], "update_static_outputs() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.update_static_outputs", false]], "update_static_outputs() (ikomia.dataprocess.pydataprocess.c2dimageinteractivetask method)": [[1, "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask.update_static_outputs", false]], "update_static_outputs() (ikomia.dataprocess.pydataprocess.c2dimagetask method)": [[2, "ikomia.dataprocess.pydataprocess.C2dImageTask.update_static_outputs", false]], "update_static_outputs() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.update_static_outputs", false]], "update_static_outputs() (ikomia.dataprocess.pydataprocess.cvideooftask method)": [[11, "ikomia.dataprocess.pydataprocess.CVideoOFTask.update_static_outputs", false]], "update_static_outputs() (ikomia.dataprocess.pydataprocess.cvideotask method)": [[12, "ikomia.dataprocess.pydataprocess.CVideoTask.update_static_outputs", false]], "update_static_outputs() (ikomia.dataprocess.pydataprocess.cvideotrackingtask method)": [[13, "ikomia.dataprocess.pydataprocess.CVideoTrackingTask.update_static_outputs", false]], "update_static_outputs() (ikomia.dnn.dnntrain.trainprocess method)": [[82, "ikomia.dnn.dnntrain.TrainProcess.update_static_outputs", false]], "workflow (class in ikomia.dataprocess.workflow)": [[16, "ikomia.dataprocess.workflow.Workflow", false]], "workflow_finished() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.workflow_finished", false]], "workflow_finished() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.workflow_finished", false]], "workflow_started() (ikomia.core.pycore.cworkflowtask method)": [[37, "ikomia.core.pycore.CWorkflowTask.workflow_started", false]], "workflow_started() (ikomia.dataprocess.pydataprocess.cdnntraintask method)": [[4, "ikomia.dataprocess.pydataprocess.CDnnTrainTask.workflow_started", false]], "write_image() (ikomia.dataprocess.pydataprocess.cvideoio method)": [[76, "ikomia.dataprocess.pydataprocess.CVideoIO.write_image", false]]}, "objects": {"ikomia.core": [[83, 0, 0, "-", "pycore"], [84, 0, 0, "-", "task"]], "ikomia.core.pycore": [[24, 1, 1, "", "ActionFlag"], [25, 1, 1, "", "AlgoType"], [26, 1, 1, "", "CGraphicsComplexPolygon"], [27, 1, 1, "", "CGraphicsConversion"], [28, 1, 1, "", "CGraphicsEllipse"], [29, 1, 1, "", "CGraphicsItem"], [30, 1, 1, "", "CGraphicsPoint"], [31, 1, 1, "", "CGraphicsPolygon"], [32, 1, 1, "", "CGraphicsPolyline"], [33, 1, 1, "", "CGraphicsRectangle"], [34, 1, 1, "", "CGraphicsText"], [35, 1, 1, "", "CMeasure"], [36, 1, 1, "", "CPointF"], [37, 1, 1, "", "CWorkflowTask"], [38, 1, 1, "", "CWorkflowTaskIO"], [39, 1, 1, "", "CWorkflowTaskIOFactory"], [40, 1, 1, "", "CWorkflowTaskParam"], [41, 1, 1, "", "CWorkflowTaskWidget"], [42, 1, 1, "", "GraphicsEllipseProperty"], [43, 1, 1, "", "GraphicsItem"], [44, 1, 1, "", "GraphicsPointProperty"], [45, 1, 1, "", "GraphicsPolygonProperty"], [46, 1, 1, "", "GraphicsPolylineProperty"], [47, 1, 1, "", "GraphicsRectProperty"], [48, 1, 1, "", "GraphicsShape"], [49, 1, 1, "", "GraphicsTextProperty"], [50, 1, 1, "", "IODataType"], [51, 1, 1, "", "MeasureId"], [52, 1, 1, "", "TaskType"]], "ikomia.core.pycore.CGraphicsComplexPolygon": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "get_bounding_rect"], [26, 2, 1, "", "get_category"], [26, 2, 1, "", "get_id"], [26, 2, 1, "", "get_type"], [26, 2, 1, "", "is_text_item"], [26, 2, 1, "", "set_category"]], "ikomia.core.pycore.CGraphicsConversion": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "graphics_to_binary_mask"]], "ikomia.core.pycore.CGraphicsEllipse": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "get_bounding_rect"], [28, 2, 1, "", "get_category"], [28, 2, 1, "", "get_id"], [28, 2, 1, "", "get_type"], [28, 2, 1, "", "is_text_item"], [28, 2, 1, "", "set_category"]], "ikomia.core.pycore.CGraphicsItem": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "get_bounding_rect"], [29, 2, 1, "", "get_category"], [29, 2, 1, "", "get_id"], [29, 2, 1, "", "get_type"], [29, 2, 1, "", "is_text_item"], [29, 2, 1, "", "set_category"]], "ikomia.core.pycore.CGraphicsPoint": [[30, 2, 1, "", "__init__"], [30, 2, 1, "", "get_bounding_rect"], [30, 2, 1, "", "get_category"], [30, 2, 1, "", "get_id"], [30, 2, 1, "", "get_type"], [30, 2, 1, "", "is_text_item"], [30, 2, 1, "", "set_category"]], "ikomia.core.pycore.CGraphicsPolygon": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "get_bounding_rect"], [31, 2, 1, "", "get_category"], [31, 2, 1, "", "get_id"], [31, 2, 1, "", "get_type"], [31, 2, 1, "", "is_text_item"], [31, 2, 1, "", "set_category"]], "ikomia.core.pycore.CGraphicsPolyline": [[32, 2, 1, "", "__init__"], [32, 2, 1, "", "get_bounding_rect"], [32, 2, 1, "", "get_category"], [32, 2, 1, "", "get_id"], [32, 2, 1, "", "get_type"], [32, 2, 1, "", "is_text_item"], [32, 2, 1, "", "set_category"]], "ikomia.core.pycore.CGraphicsRectangle": [[33, 2, 1, "", "__init__"], [33, 2, 1, "", "get_bounding_rect"], [33, 2, 1, "", "get_category"], [33, 2, 1, "", "get_id"], [33, 2, 1, "", "get_type"], [33, 2, 1, "", "is_text_item"], [33, 2, 1, "", "set_category"]], "ikomia.core.pycore.CGraphicsText": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "get_bounding_rect"], [34, 2, 1, "", "get_category"], [34, 2, 1, "", "get_id"], [34, 2, 1, "", "get_type"], [34, 2, 1, "", "is_text_item"], [34, 2, 1, "", "set_category"]], "ikomia.core.pycore.CMeasure": [[35, 2, 1, "", "__init__"], [35, 2, 1, "", "get_available_measures"], [35, 2, 1, "", "get_name"]], "ikomia.core.pycore.CPointF": [[36, 2, 1, "", "__init__"]], "ikomia.core.pycore.CWorkflowTask": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "add_input"], [37, 2, 1, "", "add_output"], [37, 2, 1, "", "begin_task_run"], [37, 2, 1, "", "clear_inputs"], [37, 2, 1, "", "clear_outputs"], [37, 2, 1, "", "download"], [37, 2, 1, "", "emit_add_sub_progress_steps"], [37, 2, 1, "", "emit_graphics_context_changed"], [37, 2, 1, "", "emit_output_changed"], [37, 2, 1, "", "emit_step_progress"], [37, 2, 1, "", "end_task_run"], [37, 2, 1, "", "execute_actions"], [37, 2, 1, "", "get_elapsed_time"], [37, 2, 1, "", "get_input"], [37, 2, 1, "", "get_input_count"], [37, 2, 1, "", "get_input_data_type"], [37, 2, 1, "", "get_inputs"], [37, 2, 1, "", "get_output"], [37, 2, 1, "", "get_output_count"], [37, 2, 1, "", "get_output_data_type"], [37, 2, 1, "", "get_outputs"], [37, 2, 1, "", "get_param_object"], [37, 2, 1, "", "get_parameters"], [37, 2, 1, "", "get_progress_steps"], [37, 2, 1, "", "global_input_changed"], [37, 2, 1, "", "graphics_changed"], [37, 2, 1, "", "is_graphics_changed_listening"], [37, 2, 1, "", "parameters_modified"], [37, 2, 1, "", "remove_input"], [37, 2, 1, "", "run"], [37, 2, 1, "", "set_action_flag"], [37, 2, 1, "", "set_active"], [37, 2, 1, "", "set_auto_save"], [37, 2, 1, "", "set_input"], [37, 2, 1, "", "set_input_data_type"], [37, 2, 1, "", "set_inputs"], [37, 2, 1, "", "set_output"], [37, 2, 1, "", "set_output_data_type"], [37, 2, 1, "", "set_outputs"], [37, 2, 1, "", "set_param_object"], [37, 2, 1, "", "set_parameters"], [37, 2, 1, "", "stop"], [37, 2, 1, "", "update_static_outputs"], [37, 2, 1, "", "workflow_finished"], [37, 2, 1, "", "workflow_started"]], "ikomia.core.pycore.CWorkflowTaskIO": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "clear_data"], [38, 2, 1, "", "copy_static_data"], [38, 2, 1, "", "from_json"], [38, 2, 1, "", "get_sub_io_list"], [38, 2, 1, "", "get_unit_element_count"], [38, 2, 1, "", "is_composite"], [38, 2, 1, "", "is_data_available"], [38, 2, 1, "", "load"], [38, 2, 1, "", "save"], [38, 2, 1, "", "to_json"]], "ikomia.core.pycore.CWorkflowTaskIOFactory": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "create"]], "ikomia.core.pycore.CWorkflowTaskParam": [[40, 2, 1, "", "__init__"], [40, 2, 1, "", "get_hash_value"], [40, 2, 1, "", "get_values"], [40, 2, 1, "", "set_values"]], "ikomia.core.pycore.CWorkflowTaskWidget": [[41, 2, 1, "", "__init__"], [41, 2, 1, "", "emit_apply"], [41, 2, 1, "", "emit_send_process_action"], [41, 2, 1, "", "emit_set_graphics_category"], [41, 2, 1, "", "emit_set_graphics_tool"], [41, 2, 1, "", "on_apply"], [41, 2, 1, "", "set_apply_btn_hidden"], [41, 2, 1, "", "set_layout"]], "ikomia.core.task": [[53, 1, 1, "", "TaskParam"], [84, 3, 1, "", "create"], [84, 3, 1, "", "get_output"]], "ikomia.core.task.TaskParam": [[53, 2, 1, "", "__init__"], [53, 2, 1, "", "get_values"], [53, 2, 1, "", "set_values"]], "ikomia.dataprocess": [[85, 0, 0, "-", "datadictIO"], [86, 0, 0, "-", "pydataprocess"], [87, 0, 0, "-", "registry"], [88, 0, 0, "-", "workflow"]], "ikomia.dataprocess.datadictIO": [[0, 1, 1, "", "DataDictIO"]], "ikomia.dataprocess.datadictIO.DataDictIO": [[0, 2, 1, "", "__init__"], [0, 2, 1, "", "clear_data"], [0, 2, 1, "", "from_json"], [0, 2, 1, "", "is_data_available"], [0, 2, 1, "", "load"], [0, 2, 1, "", "save"], [0, 2, 1, "", "to_json"]], "ikomia.dataprocess.pydataprocess": [[1, 1, 1, "", "C2dImageInteractiveTask"], [2, 1, 1, "", "C2dImageTask"], [54, 1, 1, "", "CArrayIO"], [55, 1, 1, "", "CBlobMeasureIO"], [3, 1, 1, "", "CClassificationTask"], [56, 1, 1, "", "CDataStringIO"], [57, 1, 1, "", "CDatasetIO"], [4, 1, 1, "", "CDnnTrainTask"], [58, 1, 1, "", "CGraphicsInput"], [59, 1, 1, "", "CGraphicsOutput"], [5, 1, 1, "", "CIkomiaRegistry"], [60, 1, 1, "", "CImageIO"], [61, 1, 1, "", "CInstanceSegmentation"], [62, 1, 1, "", "CInstanceSegmentationIO"], [6, 1, 1, "", "CInstanceSegmentationTask"], [7, 1, 1, "", "CKeypointDetectionTask"], [63, 1, 1, "", "CKeypointLink"], [64, 1, 1, "", "CKeypointsIO"], [65, 1, 1, "", "CNumericIO"], [66, 1, 1, "", "CObjectDetection"], [67, 1, 1, "", "CObjectDetectionIO"], [8, 1, 1, "", "CObjectDetectionTask"], [68, 1, 1, "", "CObjectKeypoints"], [69, 1, 1, "", "CObjectMeasure"], [70, 1, 1, "", "CPathIO"], [71, 1, 1, "", "CPluginProcessInterface"], [72, 1, 1, "", "CSemanticSegmentationIO"], [9, 1, 1, "", "CSemanticSegmentationTask"], [73, 1, 1, "", "CTaskFactory"], [10, 1, 1, "", "CTaskInfo"], [74, 1, 1, "", "CTextField"], [75, 1, 1, "", "CTextIO"], [76, 1, 1, "", "CVideoIO"], [11, 1, 1, "", "CVideoOFTask"], [12, 1, 1, "", "CVideoTask"], [13, 1, 1, "", "CVideoTrackingTask"], [77, 1, 1, "", "CWidgetFactory"], [78, 1, 1, "", "CWidgetOutput"], [14, 1, 1, "", "CWorkflow"], [79, 1, 1, "", "NumericOutputType"], [80, 1, 1, "", "PlotType"]], "ikomia.dataprocess.pydataprocess.C2dImageInteractiveTask": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "add_input"], [1, 2, 1, "", "add_output"], [1, 2, 1, "", "apply_graphics_mask"], [1, 2, 1, "", "apply_graphics_mask_to_binary"], [1, 2, 1, "", "begin_task_run"], [1, 2, 1, "", "clear_interaction_layer"], [1, 2, 1, "", "compute_blobs"], [1, 2, 1, "", "create_graphics_mask"], [1, 2, 1, "", "create_interaction_mask"], [1, 2, 1, "", "emit_add_sub_progress_steps"], [1, 2, 1, "", "emit_graphics_context_changed"], [1, 2, 1, "", "emit_output_changed"], [1, 2, 1, "", "emit_step_progress"], [1, 2, 1, "", "end_task_run"], [1, 2, 1, "", "execute_actions"], [1, 2, 1, "", "forward_input_image"], [1, 2, 1, "", "get_blobs"], [1, 2, 1, "", "get_elapsed_time"], [1, 2, 1, "", "get_graphics_mask"], [1, 2, 1, "", "get_input"], [1, 2, 1, "", "get_input_count"], [1, 2, 1, "", "get_input_data_type"], [1, 2, 1, "", "get_inputs"], [1, 2, 1, "", "get_interaction_mask"], [1, 2, 1, "", "get_output"], [1, 2, 1, "", "get_output_count"], [1, 2, 1, "", "get_output_data_type"], [1, 2, 1, "", "get_outputs"], [1, 2, 1, "", "get_parameters"], [1, 2, 1, "", "get_progress_steps"], [1, 2, 1, "", "global_input_changed"], [1, 2, 1, "", "graphics_changed"], [1, 2, 1, "", "is_graphics_changed_listening"], [1, 2, 1, "", "is_mask_available"], [1, 2, 1, "", "parameters_modified"], [1, 2, 1, "", "remove_input"], [1, 2, 1, "", "run"], [1, 2, 1, "", "set_action_flag"], [1, 2, 1, "", "set_active"], [1, 2, 1, "", "set_input"], [1, 2, 1, "", "set_input_data_type"], [1, 2, 1, "", "set_inputs"], [1, 2, 1, "", "set_output"], [1, 2, 1, "", "set_output_color_map"], [1, 2, 1, "", "set_output_data_type"], [1, 2, 1, "", "set_outputs"], [1, 2, 1, "", "set_parameters"], [1, 2, 1, "", "stop"], [1, 2, 1, "", "update_static_outputs"]], "ikomia.dataprocess.pydataprocess.C2dImageTask": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "add_input"], [2, 2, 1, "", "add_output"], [2, 2, 1, "", "apply_graphics_mask"], [2, 2, 1, "", "apply_graphics_mask_to_binary"], [2, 2, 1, "", "begin_task_run"], [2, 2, 1, "", "create_graphics_mask"], [2, 2, 1, "", "create_input_graphics_mask"], [2, 2, 1, "", "emit_add_sub_progress_steps"], [2, 2, 1, "", "emit_graphics_context_changed"], [2, 2, 1, "", "emit_output_changed"], [2, 2, 1, "", "emit_step_progress"], [2, 2, 1, "", "end_task_run"], [2, 2, 1, "", "execute_actions"], [2, 2, 1, "", "forward_input_image"], [2, 2, 1, "", "get_elapsed_time"], [2, 2, 1, "", "get_graphics_mask"], [2, 2, 1, "", "get_input"], [2, 2, 1, "", "get_input_count"], [2, 2, 1, "", "get_input_data_type"], [2, 2, 1, "", "get_inputs"], [2, 2, 1, "", "get_output"], [2, 2, 1, "", "get_output_count"], [2, 2, 1, "", "get_output_data_type"], [2, 2, 1, "", "get_outputs"], [2, 2, 1, "", "get_parameters"], [2, 2, 1, "", "get_progress_steps"], [2, 2, 1, "", "global_input_changed"], [2, 2, 1, "", "graphics_changed"], [2, 2, 1, "", "is_graphics_changed_listening"], [2, 2, 1, "", "is_mask_available"], [2, 2, 1, "", "parameters_modified"], [2, 2, 1, "", "remove_input"], [2, 2, 1, "", "run"], [2, 2, 1, "", "set_action_flag"], [2, 2, 1, "", "set_active"], [2, 2, 1, "", "set_input"], [2, 2, 1, "", "set_input_data_type"], [2, 2, 1, "", "set_inputs"], [2, 2, 1, "", "set_output"], [2, 2, 1, "", "set_output_color_map"], [2, 2, 1, "", "set_output_data_type"], [2, 2, 1, "", "set_outputs"], [2, 2, 1, "", "set_parameters"], [2, 2, 1, "", "stop"], [2, 2, 1, "", "update_static_outputs"]], "ikomia.dataprocess.pydataprocess.CArrayIO": [[54, 2, 1, "", "__init__"], [54, 2, 1, "", "clear_data"], [54, 2, 1, "", "copy_static_data"], [54, 2, 1, "", "get_array"], [54, 2, 1, "", "get_unit_element_count"], [54, 2, 1, "", "is_data_available"], [54, 2, 1, "", "set_array"]], "ikomia.dataprocess.pydataprocess.CBlobMeasureIO": [[55, 2, 1, "", "__init__"], [55, 2, 1, "", "add_object_measure"], [55, 2, 1, "", "add_object_measures"], [55, 2, 1, "", "clear_data"], [55, 2, 1, "", "from_json"], [55, 2, 1, "", "get_measures"], [55, 2, 1, "", "is_data_available"], [55, 2, 1, "", "set_object_measure"], [55, 2, 1, "", "to_json"]], "ikomia.dataprocess.pydataprocess.CClassificationTask": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "add_object"], [3, 2, 1, "", "emit_add_sub_progress_steps"], [3, 2, 1, "", "emit_graphics_context_changed"], [3, 2, 1, "", "emit_output_changed"], [3, 2, 1, "", "emit_step_progress"], [3, 2, 1, "", "end_task_run"], [3, 2, 1, "", "get_image_with_graphics"], [3, 2, 1, "", "get_input_objects"], [3, 2, 1, "", "get_names"], [3, 2, 1, "", "get_object_sub_image"], [3, 2, 1, "", "get_objects_results"], [3, 2, 1, "", "get_whole_image_results"], [3, 2, 1, "", "is_whole_image_classification"], [3, 2, 1, "", "read_class_names"], [3, 2, 1, "", "set_colors"], [3, 2, 1, "", "set_names"], [3, 2, 1, "", "set_whole_image_results"]], "ikomia.dataprocess.pydataprocess.CDataStringIO": [[56, 2, 1, "", "__init__"], [56, 2, 1, "", "add_value_list"], [56, 2, 1, "", "clear_data"], [56, 2, 1, "", "copy_static_data"], [56, 2, 1, "", "from_json"], [56, 2, 1, "", "get_all_header_labels"], [56, 2, 1, "", "get_all_label_list"], [56, 2, 1, "", "get_all_value_list"], [56, 2, 1, "", "get_output_type"], [56, 2, 1, "", "get_plot_type"], [56, 2, 1, "", "get_unit_element_count"], [56, 2, 1, "", "get_value_list"], [56, 2, 1, "", "is_data_available"], [56, 2, 1, "", "load"], [56, 2, 1, "", "save"], [56, 2, 1, "", "set_output_type"], [56, 2, 1, "", "set_plot_type"], [56, 2, 1, "", "to_json"]], "ikomia.dataprocess.pydataprocess.CDatasetIO": [[57, 2, 1, "", "__init__"], [57, 2, 1, "", "clear_data"], [57, 2, 1, "", "copy_static_data"], [57, 2, 1, "", "from_json"], [57, 2, 1, "", "get_categories"], [57, 2, 1, "", "get_category_count"], [57, 2, 1, "", "get_graphics_annotations"], [57, 2, 1, "", "get_image_paths"], [57, 2, 1, "", "get_mask_path"], [57, 2, 1, "", "get_unit_element_count"], [57, 2, 1, "", "is_data_available"], [57, 2, 1, "", "save"], [57, 2, 1, "", "to_json"]], "ikomia.dataprocess.pydataprocess.CDnnTrainTask": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "add_input"], [4, 2, 1, "", "add_output"], [4, 2, 1, "", "begin_task_run"], [4, 2, 1, "", "emit_add_sub_progress_steps"], [4, 2, 1, "", "emit_graphics_context_changed"], [4, 2, 1, "", "emit_output_changed"], [4, 2, 1, "", "emit_step_progress"], [4, 2, 1, "", "enable_mlflow"], [4, 2, 1, "", "enable_tensorboard"], [4, 2, 1, "", "end_task_run"], [4, 2, 1, "", "execute_actions"], [4, 2, 1, "", "get_elapsed_time"], [4, 2, 1, "", "get_input"], [4, 2, 1, "", "get_input_count"], [4, 2, 1, "", "get_input_data_type"], [4, 2, 1, "", "get_inputs"], [4, 2, 1, "", "get_output"], [4, 2, 1, "", "get_output_count"], [4, 2, 1, "", "get_output_data_type"], [4, 2, 1, "", "get_outputs"], [4, 2, 1, "", "get_param_object"], [4, 2, 1, "", "get_parameters"], [4, 2, 1, "", "get_progress_steps"], [4, 2, 1, "", "global_input_changed"], [4, 2, 1, "", "graphics_changed"], [4, 2, 1, "", "is_graphics_changed_listening"], [4, 2, 1, "", "parameters_modified"], [4, 2, 1, "", "remove_input"], [4, 2, 1, "", "run"], [4, 2, 1, "", "set_action_flag"], [4, 2, 1, "", "set_active"], [4, 2, 1, "", "set_auto_save"], [4, 2, 1, "", "set_input"], [4, 2, 1, "", "set_input_data_type"], [4, 2, 1, "", "set_inputs"], [4, 2, 1, "", "set_output"], [4, 2, 1, "", "set_output_data_type"], [4, 2, 1, "", "set_outputs"], [4, 2, 1, "", "set_param_object"], [4, 2, 1, "", "set_parameters"], [4, 2, 1, "", "stop"], [4, 2, 1, "", "update_static_outputs"], [4, 2, 1, "", "workflow_finished"], [4, 2, 1, "", "workflow_started"]], "ikomia.dataprocess.pydataprocess.CGraphicsInput": [[58, 2, 1, "", "__init__"], [58, 2, 1, "", "clear_data"], [58, 2, 1, "", "copy_static_data"], [58, 2, 1, "", "from_json"], [58, 2, 1, "", "get_items"], [58, 2, 1, "", "get_unit_element_count"], [58, 2, 1, "", "is_data_available"], [58, 2, 1, "", "load"], [58, 2, 1, "", "save"], [58, 2, 1, "", "set_items"], [58, 2, 1, "", "to_json"]], "ikomia.dataprocess.pydataprocess.CGraphicsOutput": [[59, 2, 1, "", "__init__"], [59, 2, 1, "", "add_complex_polygon"], [59, 2, 1, "", "add_ellipse"], [59, 2, 1, "", "add_item"], [59, 2, 1, "", "add_point"], [59, 2, 1, "", "add_polygon"], [59, 2, 1, "", "add_polyline"], [59, 2, 1, "", "add_rectangle"], [59, 2, 1, "", "add_text"], [59, 2, 1, "", "clear_data"], [59, 2, 1, "", "copy_static_data"], [59, 2, 1, "", "from_json"], [59, 2, 1, "", "get_image_index"], [59, 2, 1, "", "get_items"], [59, 2, 1, "", "get_unit_element_count"], [59, 2, 1, "", "is_data_available"], [59, 2, 1, "", "load"], [59, 2, 1, "", "save"], [59, 2, 1, "", "set_image_index"], [59, 2, 1, "", "set_items"], [59, 2, 1, "", "set_new_layer"], [59, 2, 1, "", "to_json"]], "ikomia.dataprocess.pydataprocess.CIkomiaRegistry": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "create_instance"], [5, 2, 1, "", "get_algorithm_info"], [5, 2, 1, "", "get_algorithms"], [5, 2, 1, "", "get_plugins_directory"], [5, 2, 1, "", "is_all_loaded"], [5, 2, 1, "", "load_algorithms"], [5, 2, 1, "", "load_cpp_algorithm"], [5, 2, 1, "", "load_cpp_algorithms"], [5, 2, 1, "", "load_python_algorithm"], [5, 2, 1, "", "load_python_algorithms"], [5, 2, 1, "", "register_io"], [5, 2, 1, "", "register_task"], [5, 2, 1, "", "set_plugins_directory"]], "ikomia.dataprocess.pydataprocess.CImageIO": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "clear_data"], [60, 2, 1, "", "copy_static_data"], [60, 2, 1, "", "draw_graphics"], [60, 2, 1, "", "from_json"], [60, 2, 1, "", "get_channel_count"], [60, 2, 1, "", "get_data"], [60, 2, 1, "", "get_image"], [60, 2, 1, "", "get_image_with_graphics"], [60, 2, 1, "", "get_image_with_mask"], [60, 2, 1, "", "get_image_with_mask_and_graphics"], [60, 2, 1, "", "get_overlay_mask"], [60, 2, 1, "", "get_unit_element_count"], [60, 2, 1, "", "is_data_available"], [60, 2, 1, "", "is_overlay_available"], [60, 2, 1, "", "load"], [60, 2, 1, "", "save"], [60, 2, 1, "", "set_channel_count"], [60, 2, 1, "", "set_image"], [60, 2, 1, "", "set_overlay_mask"], [60, 2, 1, "", "to_json"]], "ikomia.dataprocess.pydataprocess.CInstanceSegmentationIO": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "add_object"], [62, 2, 1, "", "clear_data"], [62, 2, 1, "", "from_json"], [62, 2, 1, "", "get_merge_mask"], [62, 2, 1, "", "get_object"], [62, 2, 1, "", "get_object_count"], [62, 2, 1, "", "get_objects"], [62, 2, 1, "", "init"], [62, 2, 1, "", "is_data_available"], [62, 2, 1, "", "load"], [62, 2, 1, "", "save"], [62, 2, 1, "", "to_json"]], "ikomia.dataprocess.pydataprocess.CInstanceSegmentationTask": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "add_object"], [6, 2, 1, "", "emit_add_sub_progress_steps"], [6, 2, 1, "", "emit_graphics_context_changed"], [6, 2, 1, "", "emit_output_changed"], [6, 2, 1, "", "emit_step_progress"], [6, 2, 1, "", "end_task_run"], [6, 2, 1, "", "get_image_with_graphics"], [6, 2, 1, "", "get_image_with_mask"], [6, 2, 1, "", "get_image_with_mask_and_graphics"], [6, 2, 1, "", "get_names"], [6, 2, 1, "", "get_results"], [6, 2, 1, "", "read_class_names"], [6, 2, 1, "", "set_colors"], [6, 2, 1, "", "set_names"]], "ikomia.dataprocess.pydataprocess.CKeypointDetectionTask": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "add_object"], [7, 2, 1, "", "emit_add_sub_progress_steps"], [7, 2, 1, "", "emit_graphics_context_changed"], [7, 2, 1, "", "emit_output_changed"], [7, 2, 1, "", "emit_step_progress"], [7, 2, 1, "", "end_task_run"], [7, 2, 1, "", "get_image_with_graphics"], [7, 2, 1, "", "get_keypoint_links"], [7, 2, 1, "", "get_keypoint_names"], [7, 2, 1, "", "get_object_names"], [7, 2, 1, "", "get_results"], [7, 2, 1, "", "read_class_names"], [7, 2, 1, "", "set_keypoint_links"], [7, 2, 1, "", "set_keypoint_names"], [7, 2, 1, "", "set_object_colors"], [7, 2, 1, "", "set_object_names"]], "ikomia.dataprocess.pydataprocess.CKeypointsIO": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "add_object"], [64, 2, 1, "", "clear_data"], [64, 2, 1, "", "from_json"], [64, 2, 1, "", "get_keypoint_links"], [64, 2, 1, "", "get_keypoint_names"], [64, 2, 1, "", "get_object"], [64, 2, 1, "", "get_object_count"], [64, 2, 1, "", "get_objects"], [64, 2, 1, "", "init"], [64, 2, 1, "", "is_data_available"], [64, 2, 1, "", "load"], [64, 2, 1, "", "save"], [64, 2, 1, "", "set_keypoint_links"], [64, 2, 1, "", "set_keypoint_names"], [64, 2, 1, "", "to_json"]], "ikomia.dataprocess.pydataprocess.CNumericIO": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "add_value_list"], [65, 2, 1, "", "clear_data"], [65, 2, 1, "", "copy_static_data"], [65, 2, 1, "", "from_json"], [65, 2, 1, "", "get_all_header_labels"], [65, 2, 1, "", "get_all_label_list"], [65, 2, 1, "", "get_all_value_list"], [65, 2, 1, "", "get_output_type"], [65, 2, 1, "", "get_plot_type"], [65, 2, 1, "", "get_unit_element_count"], [65, 2, 1, "", "get_value_list"], [65, 2, 1, "", "is_data_available"], [65, 2, 1, "", "load"], [65, 2, 1, "", "save"], [65, 2, 1, "", "set_output_type"], [65, 2, 1, "", "set_plot_type"], [65, 2, 1, "", "to_json"]], "ikomia.dataprocess.pydataprocess.CObjectDetectionIO": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "add_object"], [67, 2, 1, "", "clear_data"], [67, 2, 1, "", "from_json"], [67, 2, 1, "", "get_object"], [67, 2, 1, "", "get_object_count"], [67, 2, 1, "", "get_objects"], [67, 2, 1, "", "init"], [67, 2, 1, "", "is_data_available"], [67, 2, 1, "", "load"], [67, 2, 1, "", "save"], [67, 2, 1, "", "to_json"]], "ikomia.dataprocess.pydataprocess.CObjectDetectionTask": [[8, 2, 1, "", "__init__"], [8, 2, 1, "", "add_object"], [8, 2, 1, "", "emit_add_sub_progress_steps"], [8, 2, 1, "", "emit_graphics_context_changed"], [8, 2, 1, "", "emit_output_changed"], [8, 2, 1, "", "emit_step_progress"], [8, 2, 1, "", "end_task_run"], [8, 2, 1, "", "get_image_with_graphics"], [8, 2, 1, "", "get_names"], [8, 2, 1, "", "get_results"], [8, 2, 1, "", "read_class_names"], [8, 2, 1, "", "set_colors"], [8, 2, 1, "", "set_names"]], "ikomia.dataprocess.pydataprocess.CObjectMeasure": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "get_measure_info"]], "ikomia.dataprocess.pydataprocess.CPathIO": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "clear_data"], [70, 2, 1, "", "copy_static_data"], [70, 2, 1, "", "get_path"], [70, 2, 1, "", "get_unit_element_count"], [70, 2, 1, "", "is_data_available"], [70, 2, 1, "", "set_path"]], "ikomia.dataprocess.pydataprocess.CSemanticSegmentationIO": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "from_json"], [72, 2, 1, "", "get_class_names"], [72, 2, 1, "", "get_colors"], [72, 2, 1, "", "get_mask"], [72, 2, 1, "", "get_polygons"], [72, 2, 1, "", "is_data_available"], [72, 2, 1, "", "load"], [72, 2, 1, "", "save"], [72, 2, 1, "", "set_class_colors"], [72, 2, 1, "", "set_class_names"], [72, 2, 1, "", "set_mask"], [72, 2, 1, "", "to_json"]], "ikomia.dataprocess.pydataprocess.CSemanticSegmentationTask": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "emit_add_sub_progress_steps"], [9, 2, 1, "", "emit_graphics_context_changed"], [9, 2, 1, "", "emit_output_changed"], [9, 2, 1, "", "emit_step_progress"], [9, 2, 1, "", "end_task_run"], [9, 2, 1, "", "get_image_with_graphics"], [9, 2, 1, "", "get_image_with_mask"], [9, 2, 1, "", "get_image_with_mask_and_graphics"], [9, 2, 1, "", "get_names"], [9, 2, 1, "", "get_results"], [9, 2, 1, "", "read_class_names"], [9, 2, 1, "", "set_colors"], [9, 2, 1, "", "set_mask"], [9, 2, 1, "", "set_names"]], "ikomia.dataprocess.pydataprocess.CTaskFactory": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "create"], [73, 4, 1, "", "info"]], "ikomia.dataprocess.pydataprocess.CTextIO": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "add_text_field"], [75, 2, 1, "", "clear_data"], [75, 2, 1, "", "finalize"], [75, 2, 1, "", "from_json"], [75, 2, 1, "", "get_graphics_io"], [75, 2, 1, "", "get_text_field"], [75, 2, 1, "", "get_text_field_count"], [75, 2, 1, "", "get_text_fields"], [75, 2, 1, "", "init"], [75, 2, 1, "", "is_data_available"], [75, 2, 1, "", "load"], [75, 2, 1, "", "save"], [75, 2, 1, "", "to_json"]], "ikomia.dataprocess.pydataprocess.CVideoIO": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "add_video_image"], [76, 2, 1, "", "clear_data"], [76, 2, 1, "", "copy_static_data"], [76, 2, 1, "", "get_channel_count"], [76, 2, 1, "", "get_current_pos"], [76, 2, 1, "", "get_data"], [76, 2, 1, "", "get_image"], [76, 2, 1, "", "get_overlay_mask"], [76, 2, 1, "", "get_snapshot"], [76, 2, 1, "", "get_unit_element_count"], [76, 2, 1, "", "get_video_frame_count"], [76, 2, 1, "", "get_video_images"], [76, 2, 1, "", "get_video_path"], [76, 2, 1, "", "has_video"], [76, 2, 1, "", "is_data_available"], [76, 2, 1, "", "is_overlay_available"], [76, 2, 1, "", "set_channel_count"], [76, 2, 1, "", "set_current_image"], [76, 2, 1, "", "set_image"], [76, 2, 1, "", "set_overlay_mask"], [76, 2, 1, "", "set_video_path"], [76, 2, 1, "", "set_video_pos"], [76, 2, 1, "", "start_video"], [76, 2, 1, "", "start_video_write"], [76, 2, 1, "", "stop_video"], [76, 2, 1, "", "stop_video_write"], [76, 2, 1, "", "write_image"]], "ikomia.dataprocess.pydataprocess.CVideoOFTask": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "add_input"], [11, 2, 1, "", "add_output"], [11, 2, 1, "", "apply_graphics_mask"], [11, 2, 1, "", "apply_graphics_mask_to_binary"], [11, 2, 1, "", "begin_task_run"], [11, 2, 1, "", "create_graphics_mask"], [11, 2, 1, "", "draw_opt_flow_map"], [11, 2, 1, "", "emit_add_sub_progress_steps"], [11, 2, 1, "", "emit_graphics_context_changed"], [11, 2, 1, "", "emit_output_changed"], [11, 2, 1, "", "emit_step_progress"], [11, 2, 1, "", "end_task_run"], [11, 2, 1, "", "execute_actions"], [11, 2, 1, "", "flow_to_display"], [11, 2, 1, "", "forward_input_image"], [11, 2, 1, "", "get_elapsed_time"], [11, 2, 1, "", "get_graphics_mask"], [11, 2, 1, "", "get_input"], [11, 2, 1, "", "get_input_count"], [11, 2, 1, "", "get_input_data_type"], [11, 2, 1, "", "get_inputs"], [11, 2, 1, "", "get_output"], [11, 2, 1, "", "get_output_count"], [11, 2, 1, "", "get_output_data_type"], [11, 2, 1, "", "get_outputs"], [11, 2, 1, "", "get_parameters"], [11, 2, 1, "", "get_progress_steps"], [11, 2, 1, "", "global_input_changed"], [11, 2, 1, "", "graphics_changed"], [11, 2, 1, "", "is_graphics_changed_listening"], [11, 2, 1, "", "is_mask_available"], [11, 2, 1, "", "notify_video_end"], [11, 2, 1, "", "notify_video_start"], [11, 2, 1, "", "parameters_modified"], [11, 2, 1, "", "remove_input"], [11, 2, 1, "", "run"], [11, 2, 1, "", "set_action_flag"], [11, 2, 1, "", "set_active"], [11, 2, 1, "", "set_input"], [11, 2, 1, "", "set_input_data_type"], [11, 2, 1, "", "set_inputs"], [11, 2, 1, "", "set_output"], [11, 2, 1, "", "set_output_color_map"], [11, 2, 1, "", "set_output_data_type"], [11, 2, 1, "", "set_outputs"], [11, 2, 1, "", "set_parameters"], [11, 2, 1, "", "stop"], [11, 2, 1, "", "update_static_outputs"]], "ikomia.dataprocess.pydataprocess.CVideoTask": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "add_input"], [12, 2, 1, "", "add_output"], [12, 2, 1, "", "apply_graphics_mask"], [12, 2, 1, "", "apply_graphics_mask_to_binary"], [12, 2, 1, "", "begin_task_run"], [12, 2, 1, "", "create_graphics_mask"], [12, 2, 1, "", "emit_add_sub_progress_steps"], [12, 2, 1, "", "emit_graphics_context_changed"], [12, 2, 1, "", "emit_output_changed"], [12, 2, 1, "", "emit_step_progress"], [12, 2, 1, "", "end_task_run"], [12, 2, 1, "", "execute_actions"], [12, 2, 1, "", "forward_input_image"], [12, 2, 1, "", "get_elapsed_time"], [12, 2, 1, "", "get_graphics_mask"], [12, 2, 1, "", "get_input"], [12, 2, 1, "", "get_input_count"], [12, 2, 1, "", "get_input_data_type"], [12, 2, 1, "", "get_inputs"], [12, 2, 1, "", "get_output"], [12, 2, 1, "", "get_output_count"], [12, 2, 1, "", "get_output_data_type"], [12, 2, 1, "", "get_outputs"], [12, 2, 1, "", "get_parameters"], [12, 2, 1, "", "get_progress_steps"], [12, 2, 1, "", "global_input_changed"], [12, 2, 1, "", "graphics_changed"], [12, 2, 1, "", "is_graphics_changed_listening"], [12, 2, 1, "", "is_mask_available"], [12, 2, 1, "", "notify_video_end"], [12, 2, 1, "", "notify_video_start"], [12, 2, 1, "", "parameters_modified"], [12, 2, 1, "", "remove_input"], [12, 2, 1, "", "run"], [12, 2, 1, "", "set_action_flag"], [12, 2, 1, "", "set_active"], [12, 2, 1, "", "set_input"], [12, 2, 1, "", "set_input_data_type"], [12, 2, 1, "", "set_inputs"], [12, 2, 1, "", "set_output"], [12, 2, 1, "", "set_output_color_map"], [12, 2, 1, "", "set_output_data_type"], [12, 2, 1, "", "set_outputs"], [12, 2, 1, "", "set_parameters"], [12, 2, 1, "", "stop"], [12, 2, 1, "", "update_static_outputs"]], "ikomia.dataprocess.pydataprocess.CVideoTrackingTask": [[13, 2, 1, "", "__init__"], [13, 2, 1, "", "add_input"], [13, 2, 1, "", "add_output"], [13, 2, 1, "", "apply_graphics_mask"], [13, 2, 1, "", "apply_graphics_mask_to_binary"], [13, 2, 1, "", "begin_task_run"], [13, 2, 1, "", "create_graphics_mask"], [13, 2, 1, "", "emit_add_sub_progress_steps"], [13, 2, 1, "", "emit_graphics_context_changed"], [13, 2, 1, "", "emit_output_changed"], [13, 2, 1, "", "emit_step_progress"], [13, 2, 1, "", "end_task_run"], [13, 2, 1, "", "execute_actions"], [13, 2, 1, "", "forward_input_image"], [13, 2, 1, "", "get_elapsed_time"], [13, 2, 1, "", "get_graphics_mask"], [13, 2, 1, "", "get_input"], [13, 2, 1, "", "get_input_count"], [13, 2, 1, "", "get_input_data_type"], [13, 2, 1, "", "get_inputs"], [13, 2, 1, "", "get_output"], [13, 2, 1, "", "get_output_count"], [13, 2, 1, "", "get_output_data_type"], [13, 2, 1, "", "get_outputs"], [13, 2, 1, "", "get_parameters"], [13, 2, 1, "", "get_progress_steps"], [13, 2, 1, "", "global_input_changed"], [13, 2, 1, "", "graphics_changed"], [13, 2, 1, "", "is_graphics_changed_listening"], [13, 2, 1, "", "is_mask_available"], [13, 2, 1, "", "manage_outputs"], [13, 2, 1, "", "notify_video_end"], [13, 2, 1, "", "notify_video_start"], [13, 2, 1, "", "parameters_modified"], [13, 2, 1, "", "remove_input"], [13, 2, 1, "", "run"], [13, 2, 1, "", "set_action_flag"], [13, 2, 1, "", "set_active"], [13, 2, 1, "", "set_input"], [13, 2, 1, "", "set_input_data_type"], [13, 2, 1, "", "set_inputs"], [13, 2, 1, "", "set_output"], [13, 2, 1, "", "set_output_color_map"], [13, 2, 1, "", "set_output_data_type"], [13, 2, 1, "", "set_outputs"], [13, 2, 1, "", "set_parameters"], [13, 2, 1, "", "set_roi_to_track"], [13, 2, 1, "", "stop"], [13, 2, 1, "", "update_static_outputs"]], "ikomia.dataprocess.pydataprocess.CWidgetFactory": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "create"], [77, 4, 1, "", "name"]], "ikomia.dataprocess.pydataprocess.CWidgetOutput": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "clear_data"], [78, 2, 1, "", "copy_static_data"], [78, 2, 1, "", "get_unit_element_count"], [78, 2, 1, "", "is_data_available"], [78, 2, 1, "", "set_widget"]], "ikomia.dataprocess.pydataprocess.CWorkflow": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "add_exposed_parameter"], [14, 2, 1, "", "add_input"], [14, 2, 1, "", "add_output"], [14, 2, 1, "", "add_task"], [14, 2, 1, "", "clear"], [14, 2, 1, "", "clear_exposed_parameters"], [14, 2, 1, "", "clear_inputs"], [14, 2, 1, "", "clear_output_data"], [14, 2, 1, "", "clear_outputs"], [14, 2, 1, "", "connect"], [14, 2, 1, "", "delete_edge"], [14, 2, 1, "", "delete_task"], [14, 2, 1, "", "export_graphviz"], [14, 2, 1, "", "get_children"], [14, 2, 1, "", "get_edge_info"], [14, 2, 1, "", "get_edge_source"], [14, 2, 1, "", "get_edge_target"], [14, 2, 1, "", "get_elapsed_time_to"], [14, 2, 1, "", "get_exposed_parameters"], [14, 2, 1, "", "get_final_tasks"], [14, 2, 1, "", "get_in_edges"], [14, 2, 1, "", "get_last_run_folder"], [14, 2, 1, "", "get_out_edges"], [14, 2, 1, "", "get_output"], [14, 2, 1, "", "get_output_count"], [14, 2, 1, "", "get_output_data_type"], [14, 2, 1, "", "get_outputs"], [14, 2, 1, "", "get_parents"], [14, 2, 1, "", "get_root_id"], [14, 2, 1, "", "get_root_target_types"], [14, 2, 1, "", "get_task"], [14, 2, 1, "", "get_task_count"], [14, 2, 1, "", "get_task_ids"], [14, 2, 1, "", "get_total_elapsed_time"], [14, 2, 1, "", "load"], [14, 2, 1, "", "remove_input"], [14, 2, 1, "", "run"], [14, 2, 1, "", "save"], [14, 2, 1, "", "set_auto_save"], [14, 2, 1, "", "set_exposed_parameter"], [14, 2, 1, "", "set_input"], [14, 2, 1, "", "set_output_folder"], [14, 2, 1, "", "stop"], [14, 2, 1, "", "update_start_time"]], "ikomia.dataprocess.registry": [[15, 1, 1, "", "IkomiaRegistry"]], "ikomia.dataprocess.registry.IkomiaRegistry": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "create_algorithm"], [15, 2, 1, "", "get_algorithm_info"], [15, 2, 1, "", "get_algorithms"], [15, 2, 1, "", "get_plugins_directory"], [15, 2, 1, "", "get_private_hub_algorithms"], [15, 2, 1, "", "get_public_hub_algorithms"], [15, 2, 1, "", "install_algorithm"], [15, 2, 1, "", "register_task"], [15, 2, 1, "", "set_plugins_directory"], [15, 2, 1, "", "update_algorithm"], [15, 2, 1, "", "update_algorithms"]], "ikomia.dataprocess.workflow": [[16, 1, 1, "", "Workflow"], [88, 3, 1, "", "create"], [88, 3, 1, "", "install_requirements"], [88, 3, 1, "", "load"], [88, 3, 1, "", "prepare_runtime_env"]], "ikomia.dataprocess.workflow.Workflow": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "add_input"], [16, 2, 1, "", "add_task"], [16, 2, 1, "", "clear"], [16, 2, 1, "", "clear_inputs"], [16, 2, 1, "", "clear_output_data"], [16, 2, 1, "", "connect_tasks"], [16, 2, 1, "", "delete_edge"], [16, 2, 1, "", "delete_task"], [16, 2, 1, "", "export_graphviz"], [16, 2, 1, "", "find_task"], [16, 2, 1, "", "get_children"], [16, 2, 1, "", "get_edge_info"], [16, 2, 1, "", "get_edge_source"], [16, 2, 1, "", "get_edge_target"], [16, 2, 1, "", "get_elapsed_time_to"], [16, 2, 1, "", "get_final_tasks"], [16, 2, 1, "", "get_in_edges"], [16, 2, 1, "", "get_out_edges"], [16, 2, 1, "", "get_parents"], [16, 2, 1, "", "get_required_tasks"], [16, 2, 1, "", "get_root_id"], [16, 2, 1, "", "get_root_target_types"], [16, 2, 1, "", "get_task"], [16, 2, 1, "", "get_task_count"], [16, 2, 1, "", "get_task_id"], [16, 2, 1, "", "get_task_ids"], [16, 2, 1, "", "get_task_output"], [16, 2, 1, "", "get_tasks"], [16, 2, 1, "", "get_time_metrics"], [16, 2, 1, "", "get_total_elapsed_time"], [16, 2, 1, "", "get_workflow_parameters"], [16, 2, 1, "", "load"], [16, 2, 1, "", "remove_input"], [16, 2, 1, "", "remove_task"], [16, 2, 1, "", "root"], [16, 2, 1, "", "run"], [16, 2, 1, "", "run_on"], [16, 2, 1, "", "save"], [16, 2, 1, "", "set_auto_save"], [16, 2, 1, "", "set_directory_input"], [16, 2, 1, "", "set_image_input"], [16, 2, 1, "", "set_input"], [16, 2, 1, "", "set_output_folder"], [16, 2, 1, "", "set_parameters"], [16, 2, 1, "", "set_video_input"], [16, 2, 1, "", "set_workflow_parameters"], [16, 2, 1, "", "stop"], [16, 2, 1, "", "update_start_time"]], "ikomia.dnn": [[89, 0, 0, "-", "dataset"], [90, 0, 0, "-", "datasetio"], [91, 0, 0, "-", "dnntrain"]], "ikomia.dnn.dataset": [[89, 3, 1, "", "load_coco_dataset"], [89, 3, 1, "", "load_pascalvoc_dataset"], [89, 3, 1, "", "load_via_dataset"], [89, 3, 1, "", "load_yolo_dataset"], [89, 3, 1, "", "polygon_to_mask"], [89, 3, 1, "", "read_class_names"]], "ikomia.dnn.datasetio": [[81, 1, 1, "", "IkDatasetIO"]], "ikomia.dnn.datasetio.IkDatasetIO": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "clear_data"], [81, 2, 1, "", "get_categories"], [81, 2, 1, "", "get_category_count"], [81, 2, 1, "", "get_graphics_annotations"], [81, 2, 1, "", "get_image_paths"], [81, 2, 1, "", "get_mask_path"], [81, 2, 1, "", "get_source_format"], [81, 2, 1, "", "is_data_available"], [81, 2, 1, "", "load"], [81, 2, 1, "", "save"]], "ikomia.dnn.dnntrain": [[82, 1, 1, "", "TrainProcess"]], "ikomia.dnn.dnntrain.TrainProcess": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "add_input"], [82, 2, 1, "", "add_output"], [82, 2, 1, "", "begin_task_run"], [82, 2, 1, "", "emit_add_sub_progress_steps"], [82, 2, 1, "", "emit_graphics_context_changed"], [82, 2, 1, "", "emit_output_changed"], [82, 2, 1, "", "emit_step_progress"], [82, 2, 1, "", "enable_mlflow"], [82, 2, 1, "", "enable_tensorboard"], [82, 2, 1, "", "end_task_run"], [82, 2, 1, "", "execute_actions"], [82, 2, 1, "", "get_elapsed_time"], [82, 2, 1, "", "get_input"], [82, 2, 1, "", "get_input_count"], [82, 2, 1, "", "get_input_data_type"], [82, 2, 1, "", "get_inputs"], [82, 2, 1, "", "get_output"], [82, 2, 1, "", "get_output_count"], [82, 2, 1, "", "get_output_data_type"], [82, 2, 1, "", "get_outputs"], [82, 2, 1, "", "get_parameters"], [82, 2, 1, "", "get_progress_steps"], [82, 2, 1, "", "global_input_changed"], [82, 2, 1, "", "graphics_changed"], [82, 2, 1, "", "is_graphics_changed_listening"], [82, 2, 1, "", "log_artifact"], [82, 2, 1, "", "log_artifacts"], [82, 2, 1, "", "log_metric"], [82, 2, 1, "", "log_metrics"], [82, 2, 1, "", "log_param"], [82, 2, 1, "", "log_params"], [82, 2, 1, "", "parameters_modified"], [82, 2, 1, "", "remove_input"], [82, 2, 1, "", "run"], [82, 2, 1, "", "set_action_flag"], [82, 2, 1, "", "set_active"], [82, 2, 1, "", "set_input"], [82, 2, 1, "", "set_input_data_type"], [82, 2, 1, "", "set_inputs"], [82, 2, 1, "", "set_output"], [82, 2, 1, "", "set_output_data_type"], [82, 2, 1, "", "set_outputs"], [82, 2, 1, "", "set_parameters"], [82, 2, 1, "", "stop"], [82, 2, 1, "", "update_static_outputs"]], "ikomia.dnn.torch": [[92, 0, 0, "-", "datasetmapper"], [93, 0, 0, "-", "models"]], "ikomia.dnn.torch.models": [[93, 3, 1, "", "faster_rcnn"], [93, 3, 1, "", "mask_rcnn"], [93, 3, 1, "", "mnasnet"], [93, 3, 1, "", "resnet"], [93, 3, 1, "", "resnext"]], "ikomia.utils": [[94, 0, 0, "-", "displayIO"], [95, 0, 0, "-", "pyqtutils"], [96, 0, 0, "-", "pyutils"], [97, 0, 0, "-", "qtconversion"]], "ikomia.utils.displayIO": [[94, 3, 1, "", "display"]], "ikomia.utils.pyutils": [[17, 1, 1, "", "ApiLanguage"], [18, 1, 1, "", "CException"], [19, 1, 1, "", "CMemoryInfo"], [20, 1, 1, "", "CTimer"], [21, 1, 1, "", "CpuArch"], [22, 1, 1, "", "OSType"], [23, 1, 1, "", "PluginState"]], "ikomia.utils.pyutils.CException": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "message"]], "ikomia.utils.pyutils.CMemoryInfo": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "get_available_memory"], [19, 2, 1, "", "get_memory_load"], [19, 2, 1, "", "get_total_memory"]], "ikomia.utils.pyutils.CTimer": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "get_elapsed_ms"], [20, 2, 1, "", "get_elapsed_ns"], [20, 2, 1, "", "get_elapsed_us"], [20, 2, 1, "", "get_total_elapsed_ms"], [20, 2, 1, "", "get_total_elapsed_ns"], [20, 2, 1, "", "get_total_elapsed_us"], [20, 2, 1, "", "print_elapsed_time_ms"], [20, 2, 1, "", "print_total_elapsed_time_ms"], [20, 2, 1, "", "start"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute"}, "terms": {"": [14, 16, 26, 28, 29, 30, 31, 32, 33, 34, 37, 41, 57, 59, 81, 84, 98, 99, 100, 102, 107, 108, 109, 111], "0": [3, 6, 7, 8, 9, 16, 62, 98, 99, 100, 104, 107, 108, 109, 111, 112, 113], "06271362304688": 104, "0xff": 113, "1": [1, 2, 3, 4, 6, 9, 11, 12, 13, 16, 37, 38, 54, 57, 58, 59, 60, 62, 69, 70, 76, 78, 82, 84, 98, 101, 108, 109, 112, 113], "10": [104, 109, 111, 112], "100": [104, 107, 108, 109], "11": 109, "117": 98, "119": 98, "12": 98, "1284790039062": 104, "136": 98, "139": 98, "15": 99, "160": 98, "175": 98, "1998": 35, "1st": 104, "2": [13, 76, 81, 93, 98, 99, 108, 112], "200": [104, 107, 108, 109], "2012": 89, "2017": 89, "2022": 109, "224": 98, "230": 98, "232": 104, "235": 104, "25": 109, "250": 98, "255": [3, 6, 7, 8, 9, 98, 108], "270": 98, "286": 104, "2d": [1, 2, 3, 6, 7, 8, 9, 26, 30, 31, 32, 36, 37, 60, 62, 76], "3": [6, 9, 11, 13, 60, 76, 98, 99, 104, 109, 111, 112], "30": 112, "34": 98, "374": 104, "3d": [60, 76], "3d892810357f48026932d5412fa81574": 111, "4": [13, 35, 69, 110, 111, 112], "433": 98, "5": [99, 112], "50": 104, "51531982421875": 104, "6": 112, "61": [99, 100, 104, 113], "65234375": 98, "7": [104, 112], "7386779785156": 104, "8": [1, 2, 11, 12, 13, 60, 76, 104, 112, 113], "800": 93, "853": 104, "9": [99, 104, 112], "93017578125": 98, "9322412014007568": 104, "99": 104, "A": [5, 6, 9, 14, 16, 54, 55, 56, 57, 59, 60, 65, 71, 78, 83, 110], "And": 101, "As": [41, 60, 99, 108, 109], "At": [56, 65, 111], "Be": 16, "But": 14, "By": [14, 16, 78, 108, 109, 111], "For": [0, 4, 14, 16, 37, 38, 56, 57, 58, 59, 60, 62, 64, 65, 67, 70, 71, 75, 78, 99, 101, 103, 104], "If": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 37, 72, 82, 84, 88, 98, 99, 100, 101, 104, 111, 113], "In": [3, 15, 26, 28, 29, 30, 31, 32, 33, 34, 37, 56, 60, 65, 86, 98, 99, 100, 104, 107, 108, 109, 111, 113], "It": [2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 26, 28, 29, 30, 31, 32, 33, 34, 37, 40, 53, 55, 57, 60, 61, 62, 63, 64, 66, 68, 69, 71, 74, 75, 76, 81, 82, 83, 86, 87, 88, 92, 95, 96, 98, 100, 105, 111], "On": 102, "One": [3, 29, 37, 109], "Or": 101, "Such": [26, 28, 29, 30, 31, 32, 33, 34, 57, 60, 62, 64, 67, 72, 75, 76, 81], "That": [99, 109, 111], "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 37, 39, 40, 41, 54, 56, 58, 59, 60, 62, 64, 65, 67, 70, 73, 75, 76, 77, 82, 83, 89, 94, 98, 100, 109, 112], "Then": [39, 73, 77, 101, 104, 107, 108, 109], "There": [100, 108, 111], "These": [10, 100, 112], "To": [16, 86, 98, 100, 102, 103, 108, 109, 111, 113], "With": [14, 105, 109, 111], "__init__": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 69, 70, 72, 73, 75, 76, 77, 78, 81, 82, 107, 108, 109], "__new__": 99, "_darknet": 111, "abl": [5, 15, 16, 39, 60, 62, 64, 67, 72, 73, 75, 76, 77, 88, 99], "about": [14, 60, 69, 76, 86], "abov": 111, "abstract": [39, 71, 73, 77, 86], "access": [12, 37, 98, 99, 100, 101, 105, 107, 109], "accord": [1, 2, 4, 11, 12, 13, 14, 37, 60, 76, 82, 98, 103], "accordingli": 1, "accuraci": 111, "achiev": [99, 111], "action": [1, 2, 4, 11, 12, 13, 24, 37, 41, 82], "actionflag": [1, 2, 4, 11, 12, 13, 37, 82], "activ": [1, 14, 16, 37], "actual": [14, 16], "ad": [1, 2, 4, 11, 12, 13, 14, 16, 37, 54, 57, 58, 59, 60, 75, 76, 81, 82, 109], "add": [1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 37, 55, 59, 62, 64, 67, 75, 82, 86, 104, 108, 109, 111, 112, 113], "add_complex_polygon": 59, "add_ellips": 59, "add_exposed_paramet": 14, "add_input": [1, 2, 4, 11, 12, 13, 14, 16, 37, 82, 109], "add_item": 59, "add_object": [3, 6, 7, 8, 62, 64, 67], "add_object_measur": 55, "add_output": [1, 2, 4, 11, 12, 13, 14, 37, 82, 109], "add_point": 59, "add_polygon": 59, "add_polylin": 59, "add_rectangl": 59, "add_spin": 108, "add_task": [14, 16, 88, 98, 99, 100, 104, 107, 109, 111, 113], "add_text": 59, "add_text_field": 75, "add_value_list": [56, 65], "add_video_imag": 76, "addict": 86, "addition": 111, "additionn": 83, "address": 98, "adjust": [59, 99, 101, 104], "adopt": 99, "advanc": [16, 105], "aerial": 111, "after": [5, 14, 16, 37, 75, 113], "ai": 112, "aim": [16, 29, 37], "airplan": 111, "airport": 111, "airport_246_jpg": 111, "algo": [99, 109], "algo_task": 109, "algo_typ": 109, "algorithm": [4, 5, 11, 13, 14, 15, 16, 25, 41, 60, 62, 64, 67, 72, 76, 84, 87, 88, 98, 101, 105, 112, 113], "algotyp": 109, "all": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 29, 37, 38, 41, 55, 56, 57, 59, 62, 64, 65, 67, 75, 76, 81, 82, 84, 88, 89, 93, 98, 99, 100, 101, 104, 110, 111, 112, 113], "alloc": 113, "allow": [15, 37, 73, 86, 99], "along": 113, "alreadi": [4, 14, 15, 16, 37, 99, 104, 108], "also": [5, 10, 11, 13, 14, 16, 29, 37, 55, 64, 69, 71, 84, 86, 88, 109, 111], "although": 55, "alwai": [54, 100], "amaz": 104, "among": [57, 62, 64, 67, 72, 81, 113], "amount": 19, "an": [1, 2, 5, 11, 12, 13, 14, 15, 16, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 53, 55, 57, 58, 59, 60, 62, 64, 67, 69, 70, 71, 72, 75, 76, 78, 89, 98, 99, 100, 104, 105, 108, 109, 111, 112], "analysi": [35, 113], "analyz": 103, "angl": [8, 67], "ani": [2, 15, 16, 37, 39, 82, 88, 100, 101, 108, 109, 112, 113], "annot": [43, 57, 81, 89, 111], "annotation_fold": 89, "anomali": 113, "anoth": [26, 28, 29, 30, 31, 32, 33, 34, 100], "anymor": 112, "api": [0, 12, 14, 37, 56, 57, 65, 83, 99, 100, 102, 107, 108, 109, 112], "appear": [1, 2, 11, 12, 13], "append": [1, 2, 11, 12, 13, 56, 65, 76], "appli": [1, 2, 3, 6, 9, 11, 12, 13, 29, 41, 108, 110, 111], "applic": [35, 105, 107, 109, 111, 113], "apply_graphics_mask": [1, 2, 11, 12, 13], "apply_graphics_mask_to_binari": [1, 2, 11, 12, 13], "approach": 104, "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 29, 35, 37, 38, 41, 54, 55, 56, 57, 58, 59, 62, 64, 65, 67, 69, 70, 72, 73, 75, 78, 84, 88, 89, 99, 100, 107, 109, 110, 111, 112, 113], "architectur": [21, 71, 103, 112], "arclength": 35, "area": [1, 2, 11, 12, 13], "arg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 18, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 69, 70, 72, 73, 75, 76, 77, 78, 82], "arg1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 69, 70, 72, 73, 75, 76, 77, 78, 81], "arg2": [0, 1, 2, 14, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 69, 72, 73, 75, 76, 77], "arg3": 69, "arg4": 69, "arg5": 69, "argument": [16, 109, 111], "around": [16, 84, 111], "arrai": [1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 16, 54, 57, 60, 62, 72, 76, 81, 89, 98, 100, 107, 109], "art": 105, "articl": 109, "artifact": 82, "aspect": 103, "assess": 103, "associ": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 29, 37, 38, 41, 55, 56, 57, 59, 60, 62, 64, 65, 67, 69, 72, 73, 75, 76, 77, 82, 83, 98, 108, 109, 111], "assum": 89, "attribut": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 99], "augment": [103, 113], "authent": [15, 88, 112], "author": [5, 15, 109], "auto": [4, 14, 16, 37, 101, 104, 112], "auto_complet": 99, "auto_connect": [16, 98, 99, 100, 104, 107, 109, 111, 113], "autom": 109, "automag": 104, "automat": [1, 2, 4, 5, 11, 12, 13, 14, 15, 16, 37, 59, 60, 62, 64, 67, 71, 72, 75, 76, 82, 100, 105, 111, 112], "autonom": 113, "avail": [1, 2, 5, 10, 11, 12, 13, 14, 15, 16, 19, 35, 38, 43, 48, 50, 51, 52, 56, 60, 65, 69, 84, 88, 99, 100], "averag": 35, "avoid": [102, 112, 113], "axi": [8, 67], "b": [1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 57, 72, 81, 104], "back": 112, "backend": 60, "background": [1, 2, 11, 12, 13], "bar": [37, 38, 57, 58, 59, 60, 70, 76, 78, 107, 109], "base": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 53, 55, 57, 58, 59, 60, 62, 64, 67, 71, 72, 73, 75, 76, 77, 78, 82, 83, 84, 86, 88, 97, 100, 110, 112], "basic": [2, 37, 41, 69, 94, 101, 108, 109], "batch": [103, 111, 112], "batch_siz": 111, "bbox": [35, 57, 69, 81], "becaus": [1, 2, 4, 11, 12, 13, 14, 16, 37, 82, 113], "becom": [1, 2, 11, 12, 13, 14, 16, 54, 60], "been": [5, 38], "befor": [4, 5, 12, 14, 15, 16, 37, 82, 88, 102, 113], "begin": [109, 110], "begin_task_run": [1, 2, 4, 11, 12, 13, 37, 82, 107, 109], "behavior": [24, 99, 113], "behaviour": 107, "behind": [14, 16], "being": 113, "below": [81, 86, 104, 111], "bench": 98, "benefit": 105, "best": [16, 111, 112], "better": [98, 99, 100, 104, 111], "between": [6, 7, 9, 16, 57, 63, 64, 72, 76, 81, 100, 112], "bgr": 113, "bin": 102, "binari": [1, 2, 6, 11, 12, 13, 27, 60, 62, 76, 98], "bind": [1, 2, 11, 12, 13, 41, 83, 86, 96, 110, 112], "bit": [1, 2, 11, 12, 13, 60, 76], "black": [1, 2, 11, 12, 13], "blacklist": 112, "blob": [1, 2, 11, 12, 13, 35, 55, 69], "blue": 113, "blur": [99, 100, 104, 112], "blurri": 113, "bool": [0, 1, 2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 70, 72, 75, 76, 78, 81, 82, 84, 88, 93], "boolean": [0, 4, 57, 81, 82, 93], "both": [1, 2, 6, 9, 11, 12, 13, 15, 103], "bound": [3, 6, 7, 8, 16, 26, 28, 29, 30, 31, 32, 33, 34, 57, 62, 64, 67, 75, 81, 89, 98, 106, 111], "boundingrect": 35, "box": [6, 7, 8, 28, 57, 61, 62, 64, 66, 67, 68, 75, 81, 89, 98, 104, 106, 108, 111], "box_height": [62, 64, 67, 75], "box_i": [62, 64, 67, 75], "box_width": [62, 64, 67, 75], "box_x": [62, 64, 67, 75], "boxheight": 62, "boxi": 62, "boxwidth": 62, "boxx": 62, "break": [112, 113], "bring": 105, "buffer": [60, 76, 113], "bug": 112, "build": [14, 41, 105, 108, 109], "built": [14, 15, 16, 59, 87, 88, 112], "builtin": [4, 37], "burn": [98, 100], "busi": 113, "button": [41, 59, 108], "c": [5, 41, 56, 65, 78, 83, 86, 88, 96, 97, 110, 112], "c2dimagetask": [1, 3, 6, 7, 8, 9, 11, 12, 13, 37, 101], "cach": 15, "calcul": [54, 60], "call": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 16, 20, 37, 41, 75, 82, 88, 107, 108, 109], "camera": [14, 16, 76], "can": [1, 2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 24, 29, 35, 37, 38, 41, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 69, 70, 71, 72, 75, 76, 81, 82, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 111], "candid": [16, 84], "canni": [104, 107, 109], "cannot": 113, "capabl": [1, 83], "capit": 110, "captur": 113, "car": 111, "care": 16, "carrayio": [14, 16], "case": [3, 15, 16, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 56, 60, 65, 86, 100, 112], "categori": [26, 28, 29, 30, 31, 32, 33, 34, 41, 57, 81, 100], "category_color": [57, 81], "category_id": [57, 81], "category_nam": [57, 81], "cblobmeasureio": [14, 16, 94], "cdatasetio": [14, 16, 81, 90, 106], "cdatastringio": [3, 94], "cdnntrainprocessparam": 82, "cdnntraintask": 82, "center": [8, 67, 89], "centroid": 35, "cfg": 53, "cgraphicsellips": 42, "cgraphicsinput": [1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 16, 60, 94, 98, 106], "cgraphicsitem": [3, 26, 27, 28, 30, 31, 32, 33, 34, 57, 58, 59, 72, 81], "cgraphicsoutput": [3, 55, 60, 69, 75, 94, 106], "cgraphicspoint": 44, "cgraphicspolygon": 45, "cgraphicspolylin": 46, "cgraphicsrectangl": 47, "cgraphicstext": 49, "chang": [1, 2, 4, 11, 12, 13, 14, 37, 40, 41, 82, 104, 107, 108, 112], "channel": [1, 2, 6, 9, 11, 12, 13, 60, 76, 98], "chapter": 100, "check": [0, 1, 2, 3, 4, 11, 12, 13, 15, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 54, 58, 59, 60, 70, 76, 78, 81, 82], "child": [4, 14, 16, 37], "choos": [16, 103], "chosen": 105, "cikomiaregistri": [14, 15], "cimageio": [1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 16, 59, 76, 94, 98, 100, 106, 109, 112], "cinstancesegio": [61, 112], "cinstancesegment": [62, 98], "cinstancesegmentationio": [6, 94, 98, 106], "circl": [28, 59, 106], "circular": 35, "ckeypointlink": [7, 64, 98], "ckeypointsio": [7, 63, 68, 94, 98, 106], "cl": 99, "class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 96, 98, 99, 100, 107, 108, 109, 110, 111, 112], "class_fil": 111, "class_file_path": 111, "class_index": [3, 6, 7, 8, 62, 98], "class_path": 89, "classic": [11, 69, 93, 104], "classif": [3, 109, 111], "classifi": 103, "classindex": 62, "clear": [0, 1, 14, 16, 38, 54, 58, 59, 60, 70, 76, 78, 81], "clear_data": [0, 38, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 70, 75, 76, 78, 81], "clear_exposed_paramet": 14, "clear_input": [14, 16, 37], "clear_interaction_lay": 1, "clear_output": [14, 37], "clear_output_data": [14, 16], "click": 108, "close": [59, 113], "cmeasur": 69, "cnumericio": [14, 16, 55, 56, 94], "cobjectdetect": [67, 98], "cobjectdetectionio": [3, 8, 66, 94, 98, 100, 106, 111], "cobjectdetectiontask": 101, "cobjectkeypoint": [64, 98], "cobjectmeasur": 55, "coco": [57, 81, 89, 111], "code": [1, 2, 4, 11, 12, 13, 14, 18, 37, 41, 76, 82, 98, 99, 100, 105, 108, 109, 111, 112, 113], "codec": [76, 112], "coder": 99, "colab": [98, 100, 104, 111], "collabor": 105, "color": [1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 72, 74, 75, 76, 81, 98, 104, 109, 113], "color_bgr2rgb": 113, "column": [56, 65], "com": [98, 99, 100, 104, 107, 109, 111, 112], "combin": 111, "come": [41, 59, 83], "command": [14, 16, 99, 109], "common": [6, 9, 14, 16, 57, 62, 64, 67, 72, 75, 86, 112, 113], "commun": [5, 105], "compact": [0, 38, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 72, 75], "compat": [0, 15, 23, 41, 78, 92, 105, 109, 112], "compil": 112, "complet": [0, 14, 37, 60, 76, 101, 104, 111, 112], "complex": [26, 41, 59, 100, 105], "compon": [1, 9, 35, 38, 55, 57, 58, 59, 70, 72, 76, 78, 81, 83, 94], "compos": [6, 9, 14, 16, 57, 81, 83, 88], "composit": [38, 112], "comprehens": 98, "comput": [3, 6, 7, 8, 9, 11, 14, 16, 35, 38, 55, 69, 75, 98, 99, 101, 105, 111, 112, 113], "compute_blob": 1, "concept": 83, "concern": 15, "concret": 86, "conf_thr": [99, 111, 113], "confict": 112, "confid": [3, 6, 7, 8, 61, 62, 64, 66, 67, 68, 74, 75, 98, 99, 104, 106], "configur": [16, 40, 82, 103], "conflict": 102, "congratul": 104, "connect": [1, 7, 9, 14, 16, 35, 55, 57, 60, 64, 72, 76, 81, 82, 86, 101, 109, 111, 112, 113], "connect_task": [16, 88, 100, 109], "consid": [54, 113], "consist": [6, 7, 9, 40, 56, 64, 65, 83, 86, 89, 96, 111], "consol": 100, "consolid": 112, "construct": [1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 16, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 41, 54, 55, 56, 57, 58, 59, 60, 65, 69, 70, 76, 78], "constructor": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 69, 70, 72, 75, 76, 78, 81, 82, 112], "consult": [10, 16, 58, 59, 113], "consum": [37, 55, 56, 65], "contain": [0, 2, 38, 57, 58, 59, 62, 64, 67, 70, 75, 76, 78, 81, 82, 89, 99, 100, 107, 109, 110, 111], "content": [0, 29], "context": [4, 37, 82, 99], "continu": 113, "contourarea": 35, "control": 107, "conveni": [14, 16, 98], "convent": [110, 112], "convers": [27, 112, 113], "convert": [0, 27, 92, 111], "convex": 35, "coordin": [6, 7, 8, 11, 13, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 59, 62, 64, 67, 75, 89], "copi": [0, 1, 2, 14, 37, 38, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 70, 72, 75, 76, 78, 98, 100, 104, 109, 111], "copy_static_data": [38, 54, 56, 57, 58, 59, 60, 65, 70, 76, 78], "core": [16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 71, 73, 77, 83, 84, 86, 96, 107, 108, 109, 110, 112], "correct": 112, "correspond": [4, 16, 26, 31, 32, 37, 56, 57, 60, 65, 72, 76, 81, 82, 89, 98, 111, 113], "could": [1, 14, 16, 82, 83, 113], "count": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 16, 37, 38, 57, 58, 59, 60, 62, 64, 67, 70, 75, 76, 78, 82, 111], "cover": [37, 103, 111], "cpathio": [14, 16, 106], "cpluginprocessinterfac": 86, "cpointf": [7, 26, 30, 31, 32, 59, 64, 75], "cpu": 21, "creat": [1, 2, 4, 11, 12, 13, 14, 16, 37, 39, 62, 73, 77, 82, 84, 88, 93, 99, 103, 104, 105, 107, 108, 111, 112], "create_algorithm": [15, 99, 112], "create_graphics_mask": [1, 2, 11, 12, 13], "create_input_graphics_mask": 2, "create_inst": [5, 15], "create_interaction_mask": 1, "creation": [82, 105], "cross": [19, 20, 105], "crowd": [57, 81, 113], "crucial": 113, "csemanticio": 72, "csemanticsegmentationio": [9, 94, 98, 106], "csv": [56, 65], "ctaskfactori": [5, 15, 86, 109], "ctaskinfo": [5, 15, 73], "ctaskiofactori": 5, "ctextfield": 75, "ctextio": [74, 94, 106], "current": [5, 15, 19, 41, 60, 76, 104], "custom": [0, 1, 2, 4, 11, 12, 13, 14, 16, 37, 38, 41, 54, 55, 56, 57, 58, 59, 60, 65, 70, 76, 78, 82, 99, 105], "custom_model": 111, "cv": 35, "cv2": [100, 107, 109, 113], "cvideoio": [12, 14, 16, 106], "cvideotask": [11, 13, 37], "cvt": 113, "cvtcolor": 113, "cwidgetfactori": [86, 108], "cworkflow": [16, 94, 112], "cworkflowtask": [1, 2, 4, 5, 11, 12, 13, 14, 15, 16, 53, 54, 57, 58, 59, 60, 73, 76, 81, 82, 84, 94, 101, 109, 112], "cworkflowtaskio": [0, 1, 2, 4, 11, 12, 13, 14, 16, 37, 39, 54, 55, 56, 57, 58, 59, 60, 65, 70, 76, 78, 82, 84], "cworkflowtaskiofactori": 5, "cworkflowtaskparam": [4, 5, 15, 16, 37, 41, 53, 73, 77, 82, 107, 109], "cworkflowtaskwidget": [77, 108], "cx": [8, 67], "cy": [8, 67], "d": [102, 111], "dashboard": [4, 82], "data": [0, 1, 2, 3, 4, 6, 9, 11, 12, 13, 14, 16, 37, 38, 39, 50, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 70, 72, 75, 76, 78, 81, 82, 84, 85, 100, 103, 106, 109, 111, 112], "data_typ": [0, 1, 2, 4, 11, 12, 13, 37, 38, 60, 70, 76, 78, 82], "dataprocess": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 88, 98, 99, 100, 101, 104, 107, 108, 109, 110, 111, 112, 113], "dataset": [0, 57, 81, 90, 92, 93, 103, 106, 109, 111], "dataset_fold": 111, "dataset_format": 81, "dataset_path": 111, "dataset_yolo": 111, "datasetio": [57, 81], "datasetmapp": 92, "datatyp": [16, 39], "date": 105, "deactiv": [14, 16], "deal": 98, "debug": 94, "declar": 108, "dedic": [1, 2, 5, 12, 13, 14, 60, 76, 82, 84, 87, 88, 90, 91, 94, 97], "deduc": [4, 37, 82], "deep": [57, 81, 82, 90, 91, 92, 93, 106], "deepcopi": 109, "deeper": 113, "deeplabv3": [72, 98], "def": [99, 107, 108, 109], "default": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 69, 70, 72, 73, 75, 76, 78, 82, 90, 107, 108, 109, 111], "defin": [2, 3, 4, 6, 7, 8, 9, 12, 16, 26, 28, 30, 31, 32, 33, 34, 37, 38, 39, 41, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 70, 71, 72, 73, 75, 76, 77, 78, 81, 100, 103], "definit": [3, 6, 7, 8, 9, 16, 29, 88], "delete_edg": [14, 16], "delete_task": [14, 16], "demo": 113, "depend": [14, 16, 38, 57, 81, 98, 99, 100, 102, 105], "deploy": 105, "deriv": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 26, 28, 30, 31, 32, 33, 34, 37, 39, 41, 54, 55, 56, 57, 58, 59, 60, 65, 70, 73, 76, 77, 78, 81, 82, 84, 86, 90, 109], "descend": 3, "describ": [89, 99], "descript": [5, 14, 15, 16, 101, 109], "design": [14, 16, 37, 39, 56, 60, 65, 71, 73, 76, 77, 78, 86, 95, 99, 100, 103, 105], "desir": [14, 16, 60], "destin": 37, "destroi": 113, "destroyallwindow": 113, "detail": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 18, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 69, 70, 72, 73, 75, 76, 77, 78, 81, 82, 84, 86, 88, 89, 93, 94, 100, 103], "detect": [3, 6, 7, 8, 26, 28, 29, 30, 31, 32, 33, 34, 62, 64, 66, 67, 75, 89, 93, 99, 100, 104, 106, 109, 112], "detector": [100, 104, 109, 113], "detectron2": 105, "determin": [1, 2, 11, 12, 13, 40, 76], "dev": [98, 99, 100, 104, 105, 107, 109], "develop": [99, 105], "devic": [76, 101, 113], "diamet": 35, "dict": [0, 1, 2, 4, 11, 12, 13, 14, 15, 16, 37, 40, 53, 57, 81, 82, 85, 89, 104, 107, 109, 112], "dictionari": 0, "differ": [1, 2, 4, 11, 12, 13, 14, 37, 82, 89, 98, 100, 104, 105, 112], "dimens": [27, 28, 33, 98], "dimension": 54, "directli": [15, 29, 100, 113], "directori": [5, 14, 15, 16, 109], "disabl": [1, 2, 4, 11, 12, 13, 24, 37, 82, 112], "disk": [4, 37, 38, 76], "displai": [1, 2, 4, 8, 11, 12, 13, 26, 28, 29, 30, 31, 32, 33, 34, 37, 56, 59, 60, 62, 64, 65, 67, 75, 76, 79, 82, 94, 98, 99, 104, 107, 109, 111, 112, 113], "display": 11, "displayio": [98, 99, 100, 104, 107, 109, 111, 112, 113], "divid": 110, "dnn": [81, 82, 89, 92, 93, 110], "dnntrain": 82, "do": [93, 98, 100, 107, 108, 109], "document": [5, 15, 98, 99, 103, 109, 112, 113], "documentation_link": 109, "doe": [1, 2, 4, 11, 12, 13, 37, 57, 60, 76, 82, 109], "doesn": 111, "dog": 98, "domain": 112, "don": [1, 2, 11, 12, 13, 37, 100, 108, 109], "done": [101, 109], "dot": [14, 16], "doubl": [8, 56, 62, 64, 65, 67, 69, 75], "download": [5, 16, 37, 104, 105, 111, 112], "draw": [1, 11, 60], "draw_graph": 60, "draw_opt_flow_map": 11, "drive": 111, "dst_imag": [107, 109], "due": 113, "dure": 112, "dynam": [39, 73, 77], "e": 103, "each": [3, 4, 6, 7, 9, 14, 15, 16, 26, 29, 37, 38, 39, 41, 55, 56, 57, 62, 64, 65, 67, 72, 73, 75, 77, 81, 82, 83, 89, 94, 98, 99, 101, 110, 111, 113], "eas": 105, "easi": 14, "easili": [41, 98, 99, 100, 101, 105, 108, 109, 110], "edg": [14, 16, 104, 109], "edit": [108, 109], "editor": [99, 109], "effect": [100, 104], "effici": 105, "efficientdet": 98, "effort": [99, 105], "effortless": 105, "either": [60, 70, 76, 99], "elaps": [1, 2, 4, 11, 12, 13, 14, 16, 20, 37, 82, 112], "element": [38, 54, 57, 58, 59, 60, 70, 76, 78], "ellips": [28, 59], "elong": 35, "els": [88, 99, 108, 109], "embed": [3, 6, 7, 8, 9], "emit_add_sub_progress_step": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 37, 82], "emit_appli": [41, 108], "emit_graphics_context_chang": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 37, 82], "emit_output_chang": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 37, 82], "emit_send_process_act": [1, 2, 4, 11, 12, 13, 37, 41, 82], "emit_set_graphics_categori": 41, "emit_set_graphics_tool": 41, "emit_step_progress": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 37, 82, 107, 109], "empti": [1, 2, 11, 12, 13, 14, 16, 53, 54, 57, 60, 76, 88], "enabl": [1, 2, 4, 5, 11, 12, 13, 14, 16, 24, 26, 28, 29, 30, 31, 32, 33, 34, 37, 82, 101, 105, 113], "enable_mlflow": [4, 82], "enable_tensorboard": [4, 82], "encod": [38, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 72, 75], "encount": 113, "end": [0, 7, 11, 12, 13, 15, 38, 54, 55, 56, 58, 59, 60, 63, 64, 65, 76, 86, 98, 100, 104, 105, 112], "end_task_run": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 37, 82, 107, 109], "engin": [10, 86], "enjoi": 108, "ensur": [0, 83, 111], "entertain": 113, "entir": [57, 81], "entiti": 54, "entri": 81, "enum": [17, 21, 22, 23, 24, 25, 43, 48, 50, 51, 52, 79, 80], "environ": [87, 99, 104], "epoch": [82, 103, 111], "equal": 72, "equival": [7, 35, 64], "ergonom": 99, "error": [18, 112, 113], "essenti": [0, 94], "establish": 100, "estim": [35, 64, 100], "etc": [100, 106], "evalu": [103, 111], "even": [15, 39, 73, 77, 111], "event": [1, 2, 4, 11, 12, 13, 37, 41, 82, 113], "everi": [1, 5, 40, 60, 99, 112], "ex": [1, 4, 37, 82, 112], "exactli": 100, "exampl": [0, 1, 16, 29, 41, 69, 98, 99, 100, 101, 103, 104, 107, 108, 109, 111, 112], "except": [4, 18, 82], "excit": 113, "execut": [1, 2, 4, 11, 12, 13, 14, 16, 37, 41, 82, 88], "execute_act": [1, 2, 4, 11, 12, 13, 37, 82], "executeact": 112, "exist": [1, 2, 4, 11, 12, 13, 14, 16, 37, 57, 59, 70, 82], "experi": [82, 112], "experiment": 111, "explan": 104, "explicitli": 15, "exploit": [98, 111], "explor": [104, 111], "export": [14, 16, 56, 58, 59, 65, 101, 112], "export_graphviz": [14, 16], "expos": [14, 16, 27, 56, 65, 86], "exposed_output": 16, "exposed_param": 16, "extens": [39, 73, 77, 83, 112], "extract": [1, 3, 6, 7, 8, 9, 13, 62, 64, 67, 72, 75, 76, 89, 111], "f": [98, 111], "face": [99, 100, 104], "face_detector": 99, "facilit": [99, 100], "factor": [6, 9], "factori": [5, 15, 39, 71, 73, 77, 86, 108, 109], "fail": 112, "failur": 112, "fals": [0, 1, 2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 54, 55, 58, 59, 60, 70, 76, 78, 81, 82, 84, 88, 93], "familiar": [111, 113], "fast": 14, "faster": 93, "faster_rcnn": 93, "fasterrcnn": 67, "favorit": 104, "featur": [0, 2, 5, 11, 12, 13, 14, 16, 83, 84, 87, 88, 93, 104, 112], "feature_extract": 93, "feedback": 37, "feel": 104, "few": [105, 109], "field": [16, 57, 73, 74, 75, 81, 105, 113], "fig": 94, "figur": 94, "file": [0, 3, 6, 7, 8, 9, 14, 16, 18, 37, 38, 56, 57, 58, 59, 60, 62, 64, 65, 67, 70, 72, 75, 76, 81, 82, 88, 89, 99, 101, 106, 108, 109, 111, 112], "file_path": 82, "filenam": [57, 81, 112], "fill": [3, 13, 40, 58, 59], "filter": [26, 28, 29, 30, 31, 32, 33, 34, 112], "final": [14, 15, 16, 37, 75, 82, 101, 107, 109, 111], "find": [16, 72, 86, 99, 104, 109, 111, 112], "find_task": [14, 16, 101, 104], "fine": 111, "first": [15, 16, 20, 37, 76, 98, 99, 100, 101, 108, 109], "firstli": 16, "fit": 41, "fix": 112, "float": [1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 16, 20, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 56, 57, 59, 62, 64, 65, 67, 69, 75, 81, 82], "flow": 11, "flow_to_displai": 11, "focu": 105, "folder": [4, 14, 16, 37, 70, 82, 89, 104, 106, 111], "folder_path": [82, 89, 111], "follow": [2, 3, 6, 7, 8, 9, 12, 57, 59, 64, 81, 86, 89, 98, 99, 100, 102, 103, 107, 109, 111, 113], "forc": 15, "forger": 1, "forget": [1, 2, 11, 12, 13, 37, 109], "formal": 37, "format": [0, 4, 16, 18, 37, 38, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 72, 75, 81, 89, 98, 100, 101, 111, 112], "forward": [1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 29, 37, 58, 59], "forward_input_imag": [1, 2, 11, 12, 13], "found": [16, 112], "fourcc": 76, "fp": 76, "frame": [1, 4, 11, 12, 13, 14, 16, 37, 76, 82, 113], "frame_count": [11, 12, 13], "framework": [11, 41, 78, 82, 95, 97, 105], "free": [104, 113], "frequent": 105, "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 103, 105, 107, 108, 109, 111, 112], "from_json": [0, 38, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 72, 75], "full": [5, 11, 15, 16, 57, 81, 109], "fulli": 0, "func": 18, "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 35, 37, 60, 82, 84, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 107, 108, 109, 112], "functionn": 41, "funtion": 93, "further": 111, "futur": [60, 76, 89], "g": [1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 57, 72, 81, 103, 104], "gener": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 16, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 53, 54, 55, 57, 58, 59, 70, 72, 78, 82, 89, 109], "gestur": 113, "get": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 69, 70, 72, 75, 76, 78, 81, 82, 84, 98, 100, 101, 103, 105, 107, 108, 109, 111, 112, 113], "get_algorithm": [5, 15], "get_algorithm_info": [5, 15], "get_all_header_label": [56, 65], "get_all_label_list": [56, 65], "get_all_value_list": [56, 65], "get_arrai": 54, "get_available_measur": 35, "get_available_memori": 19, "get_blob": 1, "get_bounding_rect": [26, 28, 29, 30, 31, 32, 33, 34], "get_categori": [26, 28, 29, 30, 31, 32, 33, 34, 57, 81], "get_category_count": [57, 81], "get_channel_count": [60, 76], "get_children": [14, 16], "get_class_nam": [72, 98], "get_color": 72, "get_current_po": 76, "get_data": [60, 76], "get_edge_info": [14, 16], "get_edge_sourc": [14, 16], "get_edge_target": [14, 16], "get_elapsed_m": 20, "get_elapsed_n": 20, "get_elapsed_tim": [1, 2, 4, 11, 12, 13, 37, 82], "get_elapsed_time_to": [14, 16], "get_elapsed_u": 20, "get_exposed_paramet": 14, "get_final_task": [14, 16], "get_graphics_annot": [57, 81], "get_graphics_io": 75, "get_graphics_mask": [1, 2, 11, 12, 13], "get_hash_valu": 40, "get_id": [26, 28, 29, 30, 31, 32, 33, 34], "get_imag": [60, 76, 98, 99, 100, 104, 107, 109, 113], "get_image_index": 59, "get_image_path": [57, 81], "get_image_with_graph": [3, 6, 7, 8, 9, 60, 98, 100, 104, 111, 113], "get_image_with_mask": [6, 9, 60, 98], "get_image_with_mask_and_graph": [6, 9, 60, 98], "get_in_edg": [14, 16], "get_input": [1, 2, 4, 11, 12, 13, 37, 82, 98, 104, 107, 109], "get_input_count": [1, 2, 4, 11, 12, 13, 37, 82], "get_input_data_typ": [1, 2, 4, 11, 12, 13, 37, 82], "get_input_object": 3, "get_inst": 98, "get_interaction_mask": 1, "get_item": [58, 59], "get_keypoint_link": [7, 64], "get_keypoint_nam": [7, 64], "get_last_run_fold": 14, "get_mask": [72, 98], "get_mask_path": [57, 81], "get_measur": 55, "get_measure_info": 69, "get_memory_load": 19, "get_merge_mask": 62, "get_nam": [3, 6, 8, 9, 35], "get_object": [62, 64, 67, 98, 100, 111], "get_object_count": [62, 64, 67], "get_object_nam": 7, "get_object_sub_imag": 3, "get_objects_result": 3, "get_out_edg": [14, 16], "get_output": [1, 2, 4, 11, 12, 13, 14, 37, 82, 84, 98, 99, 100, 104, 107, 109, 113], "get_output_count": [1, 2, 4, 11, 12, 13, 14, 37, 82], "get_output_data_typ": [1, 2, 4, 11, 12, 13, 14, 37, 82], "get_output_typ": [56, 65], "get_overlay_mask": [60, 76], "get_par": [14, 16], "get_param_object": [4, 16, 37, 107, 109], "get_paramet": [1, 2, 4, 11, 12, 13, 37, 82], "get_path": 70, "get_plot_typ": [56, 65], "get_plugins_directori": [5, 15], "get_polygon": 72, "get_private_hub_algorithm": 15, "get_progress_step": [1, 2, 4, 11, 12, 13, 37, 82, 109], "get_public_hub_algorithm": 15, "get_required_task": 16, "get_result": [6, 7, 8, 9, 98, 100, 104, 111], "get_root_id": [14, 16], "get_root_target_typ": [14, 16], "get_snapshot": 76, "get_source_format": 81, "get_sub_io_list": 38, "get_task": [14, 16, 101], "get_task_count": [14, 16], "get_task_id": [14, 16], "get_task_output": 16, "get_text_field": 75, "get_text_field_count": 75, "get_time_metr": 16, "get_total_elapsed_m": 20, "get_total_elapsed_n": 20, "get_total_elapsed_tim": [14, 16], "get_total_elapsed_u": 20, "get_total_memori": 19, "get_typ": [26, 28, 29, 30, 31, 32, 33, 34], "get_unit_element_count": [38, 54, 56, 57, 58, 59, 60, 65, 70, 76, 78], "get_unit_elementcount": [56, 65], "get_valu": [40, 53, 107, 109], "get_value_list": [56, 65], "get_video_frame_count": 76, "get_video_imag": 76, "get_video_path": 76, "get_whole_image_result": 3, "get_workflow_paramet": 16, "gettask": 112, "getter": 71, "github": 99, "githubusercont": [98, 99, 100, 104, 107, 109], "give": [0, 3, 16, 38, 54, 55, 56, 58, 59, 60, 65, 76, 102], "given": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 69, 70, 73, 75, 76, 77, 78, 81, 82, 84, 88], "global": [7, 14, 16, 59, 64, 81], "global_input_chang": [1, 2, 4, 11, 12, 13, 37, 82], "go": [111, 113], "goal": [57, 81, 111], "good": [2, 41, 104, 111], "googl": [98, 100, 104, 111], "graph": [14, 16, 83], "graphic": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 41, 43, 48, 55, 57, 58, 59, 60, 62, 64, 67, 69, 75, 81, 82, 83, 98, 106, 112], "graphics_chang": [1, 2, 4, 11, 12, 13, 37, 82], "graphics_item": 3, "graphics_to_binary_mask": 27, "graphicsellipseproperti": [28, 59], "graphicsid": 69, "graphicsitem": [26, 28, 29, 30, 31, 32, 33, 34, 58, 59], "graphicspointproperti": [30, 59], "graphicspolygonproperti": [26, 31, 59], "graphicspolylineproperti": [32, 59], "graphicsrectproperti": [33, 59], "graphicsshap": 41, "graphicstextproperti": [34, 59], "graphviz": [14, 16], "graylevel": [9, 62, 72, 76], "grayscal": [62, 72, 98], "greater": [14, 16], "green": 113, "grid_layout": 108, "ground": [57, 81], "guid": [100, 103, 104, 111], "h": [57, 81], "ha": [1, 4, 11, 12, 13, 16, 29, 37, 40, 54, 72, 76, 82, 98, 99], "had": 38, "handl": [1, 11, 13, 14, 16, 27, 35, 37, 41, 55, 56, 60, 65, 69, 70, 76, 78, 82, 83, 86, 98, 105, 107, 109, 112], "happen": [1, 2, 4, 11, 12, 13, 37, 82], "has_graphics_input": 2, "has_video": 76, "hash": 40, "have": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16, 37, 38, 55, 60, 64, 76, 82, 86, 98, 100, 104, 107, 108, 109, 111], "he": 16, "header": [56, 65], "header_label": [56, 65], "heigh": 62, "height": [1, 2, 6, 7, 8, 11, 12, 13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 57, 59, 62, 64, 67, 75, 76, 81, 89, 98, 104], "help": [99, 102, 103], "helper": [89, 93, 95, 96], "here": [35, 69, 98, 99, 100, 104, 107, 109, 111, 113], "high": [84, 88], "higher": [5, 14], "higli": 37, "histori": 112, "hold": [40, 60, 76], "hole": [26, 59], "home": 98, "horizont": [8, 67], "how": [100, 104, 109, 111, 112], "howev": 99, "http": [98, 99, 100, 104, 107, 109, 111], "hub": [5, 10, 14, 15, 16, 84, 87, 88, 99, 111, 112], "hull": 35, "hullsurfac": 35, "human": 111, "hundr": 111, "hwc": 98, "hyperparamet": 82, "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 81, 82, 83, 85, 89, 92, 94, 99, 100, 102, 103, 105, 108, 109, 110, 111, 112, 113], "icon": 109, "icon_path": 109, "id": [6, 7, 8, 14, 16, 35, 57, 62, 64, 67, 75, 76, 81, 98, 99, 104, 109, 112], "idea": [94, 105], "identif": [26, 28, 29, 30, 31, 32, 33, 34, 60, 76], "identifi": [0, 6, 7, 8, 14, 15, 16, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 55, 57, 62, 64, 67, 69, 75, 81, 110, 111], "ie": [16, 29, 35, 43, 55, 57, 72, 76, 81, 84], "ik": [98, 100, 101, 104, 107, 109, 111, 112, 113], "ik_registri": 99, "ikcli": 109, "ikdatasetio": 89, "ikomia": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 107, 108, 110, 112], "ikomiaregistri": [5, 14, 16, 84, 87, 112], "imag": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 16, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 54, 55, 57, 58, 59, 60, 62, 64, 67, 69, 70, 72, 75, 76, 78, 81, 82, 83, 89, 93, 99, 101, 104, 106, 107, 109, 111, 112, 113], "image_binari": [60, 76], "image_capt": 109, "image_fold": 89, "image_format": [60, 62, 72], "image_gener": 109, "image_id": [57, 81], "image_label": [60, 76], "image_mat": 109, "image_path": 57, "imageshow": [98, 100, 104, 111], "imagin": 29, "img": [98, 99, 100, 104, 107, 109], "img_dog": 98, "img_fireman": [98, 107, 109], "img_fold": 89, "img_in": 98, "img_out": 98, "img_path": 81, "img_peopl": [99, 100, 104], "img_work": 104, "implement": [0, 1, 2, 4, 5, 11, 12, 13, 14, 16, 37, 39, 41, 56, 57, 60, 65, 71, 73, 76, 77, 82, 85, 86, 87, 88, 90, 92, 109], "import": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 84, 85, 88, 92, 93, 95, 98, 99, 101, 103, 104, 107, 108, 109, 111, 113], "imposs": 113, "improv": [111, 112], "imread": 100, "inact": 1, "includ": [5, 16, 53, 82, 112], "indent": [0, 38, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 72, 75, 104], "independ": 60, "index": [1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 16, 37, 55, 56, 59, 60, 61, 62, 63, 64, 65, 67, 72, 75, 76, 82, 84, 98, 100], "index_of_input": 109, "index_of_output": 109, "indic": [1, 100], "individu": 3, "infer": [93, 109, 112], "infer_face_detection_kornia": [99, 100, 104, 113], "infer_hf_semantic_segment": 98, "infer_mmlab_pose_estim": 98, "infer_yolo_v7": [98, 101, 104, 111], "infer_yolo_v7_instance_segment": 98, "info": [73, 109], "inform": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 19, 26, 28, 30, 31, 32, 33, 34, 37, 55, 57, 60, 61, 62, 63, 64, 66, 67, 68, 69, 72, 74, 75, 76, 81, 82, 89, 98, 100, 101, 103, 109, 111], "inherit": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 15, 16, 26, 28, 30, 31, 32, 33, 34, 38, 40, 53, 54, 56, 57, 58, 59, 62, 64, 65, 67, 70, 72, 75, 76, 78, 82, 83, 107, 108, 109, 112], "init": [62, 64, 67, 75, 100, 101, 104, 107, 109, 113], "initi": [15, 37, 53, 59, 73, 77, 82, 107, 109, 111, 112], "initialis": [62, 64, 67, 75], "inner": [26, 59], "innov": 105, "inpaint": 109, "input": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 74, 75, 76, 78, 81, 82, 83, 86, 93, 94, 100, 103, 106, 107, 109, 111, 112], "input_index": [1, 2, 11, 12, 13, 98], "input_obj": 98, "input_s": 93, "input_tot": [1, 2, 4, 11, 12, 13, 37, 82], "insert": 29, "insid": [4, 5, 15, 16, 37, 59, 82, 109, 111], "insight": [0, 38, 54, 56, 58, 59, 60, 65, 76, 112], "insigth": 55, "inspect": [100, 104, 107, 109, 111], "instal": [5, 15, 16, 19, 84, 87, 88, 99, 105, 109, 112], "install_algorithm": 15, "install_requir": 88, "instanc": [1, 3, 5, 6, 7, 8, 9, 15, 16, 38, 39, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 69, 70, 72, 73, 75, 76, 77, 78, 81, 84, 88, 89, 97, 106, 112], "instance_seg_fold": 89, "instance_seg_masks_fil": [57, 81], "instance_segment": [89, 109], "instanci": [5, 14, 15, 16, 86, 87], "instantan": [14, 16], "instanti": [39, 73, 77], "instruct": [37, 99], "insuffici": 113, "int": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 69, 70, 72, 75, 76, 78, 81, 82, 84, 89, 93, 107, 109], "integ": [3, 6, 7, 8, 9, 57, 81], "integr": [71, 86, 105, 113], "intend": 14, "interact": [1, 14, 16, 41, 59, 83], "interest": [13, 14, 16, 111], "interfac": [37, 41, 71, 109], "intern": [0, 1, 2, 4, 11, 12, 13, 40, 54, 60, 75, 76, 112], "introduc": [112, 113], "intrus": 113, "intuit": 99, "invalid": [14, 16, 112], "involv": [16, 86, 109], "io": [3, 6, 7, 8, 9, 38, 54, 56, 57, 58, 59, 60, 65, 70, 78], "iodatatyp": [0, 1, 2, 4, 11, 12, 13, 14, 16, 37, 38, 39, 60, 70, 76, 78, 82, 84, 98, 100], "ip": 76, "ipythonview": [98, 100, 104, 111], "is_act": [1, 2, 4, 11, 12, 13, 37, 82], "is_all_load": 5, "is_composit": 38, "is_data_avail": [0, 38, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 70, 72, 75, 76, 78, 81, 112], "is_en": [1, 2, 4, 11, 12, 13, 37, 82], "is_graphics_changed_listen": [1, 2, 4, 11, 12, 13, 37, 82], "is_hidden": 41, "is_mask_avail": [1, 2, 11, 12, 13], "is_new_sequ": [1, 2, 4, 12, 13, 37, 82], "is_overlay_avail": [60, 76], "is_text_item": [26, 28, 29, 30, 31, 32, 33, 34], "is_whole_image_classif": 3, "iscrowd": [57, 81], "isol": 102, "issu": 113, "item": [1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 26, 28, 29, 30, 31, 32, 33, 34, 42, 43, 44, 45, 46, 47, 49, 55, 57, 58, 59, 60, 69, 75, 81, 106], "iter": [3, 82, 98], "its": [1, 5, 7, 14, 15, 16, 35, 55, 69, 71, 72, 83, 98, 108, 111], "itself": [1, 2, 11, 12, 13], "job": [4, 82], "join": 105, "journal": 109, "jpeg": [60, 62, 72], "jpg": [60, 62, 72, 98, 99, 100, 104, 107, 109, 111], "json": [0, 14, 16, 38, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 72, 75, 81, 88, 89, 98, 101, 111, 112], "json_format": [0, 38, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 72, 75, 104], "json_str": [0, 57, 60, 62, 64, 67, 75], "jsonstr": [38, 55, 56, 58, 59, 60, 65, 72], "jupyt": [98, 100, 104, 111], "just": [4, 14, 16, 26, 28, 29, 30, 31, 32, 33, 34, 37, 55, 82, 98, 100, 104, 105, 108, 109, 113], "k": 35, "keep": 93, "kei": [16, 53, 57, 81, 82, 111], "kept": [1, 2, 11, 12, 13], "kernel": 100, "keypoint": [7, 57, 63, 64, 68, 81, 89, 98, 106, 112], "keypoint_connection_rul": [57, 81], "keypoint_nam": [57, 81], "keypoints_detect": 109, "keyword": [16, 109], "kind": [58, 59, 101], "know": [100, 111], "kornia": [100, 104], "ksizeheight": [99, 100, 104, 113], "ksizewidth": [99, 100, 104, 113], "kwarg": 94, "lab": [98, 100, 104, 111], "label": [1, 2, 6, 7, 8, 9, 11, 12, 13, 20, 26, 28, 29, 30, 31, 32, 33, 34, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 81, 98, 104, 106, 108, 111], "languag": 17, "laptop": 104, "larg": 110, "larger": 109, "last": [1, 2, 4, 11, 12, 13, 14, 20, 37, 82, 93], "later": 109, "latest": 105, "latter": 16, "launch": [4, 14, 15, 20, 41, 76, 82, 108, 111], "layer": [1, 4, 12, 13, 26, 28, 29, 30, 31, 32, 33, 34, 37, 59, 62, 64, 67, 75, 82, 93], "layout": [41, 108], "layout_ptr": 108, "lazi": 112, "lazy_load": 15, "leaf": [14, 16], "learn": [57, 81, 82, 90, 91, 92, 93, 103, 106], "least": [5, 38, 55], "left": [6, 7, 8, 26, 28, 29, 30, 31, 32, 33, 34, 59, 62, 64, 67, 75], "legend": 112, "len": 111, "let": [98, 100, 107, 108, 109, 112], "letter": 110, "level": [5, 14, 16, 38, 57, 58, 59, 70, 78, 84, 88, 99], "librari": [5, 10, 73, 77, 100, 113], "licens": 109, "life": 105, "like": [41, 62, 64, 67, 72, 99, 102, 105, 107, 108, 109, 111, 112], "limit": 13, "line": [1, 3, 6, 7, 8, 9, 18, 57, 81, 89, 99, 100, 105, 109], "link": [5, 7, 15, 63, 64, 98, 106], "linux": [102, 104, 105], "list": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 43, 48, 50, 51, 52, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 69, 72, 75, 76, 79, 80, 81, 82, 84, 89, 94, 98, 99, 100, 104, 111], "listen": [1, 2, 4, 11, 12, 13, 37, 82], "live_stream": 76, "live_stream_binari": 76, "live_stream_label": 76, "load": [0, 4, 5, 14, 16, 19, 37, 38, 40, 56, 58, 59, 60, 62, 64, 65, 67, 72, 75, 81, 88, 89, 100, 103, 104, 111, 112], "load_algorithm": 5, "load_coco_dataset": 89, "load_cpp_algorithm": 5, "load_pascalvoc_dataset": 89, "load_python_algorithm": 5, "load_via_dataset": 89, "load_yolo_dataset": 89, "loader": [57, 89, 92, 111], "local": [5, 6, 8, 15, 82, 84, 88, 99, 109, 111], "locat": 111, "log": [82, 112], "log_artifact": 82, "log_metr": 82, "log_param": 82, "look": [108, 109, 111], "loop": 113, "lot": 100, "lowercas": 81, "m": [1, 2, 4, 11, 12, 13, 20, 37, 76, 82], "machin": [19, 99, 104], "maco": 102, "made": [4, 82], "mai": [14, 16, 57, 81, 98, 99, 100, 110, 111, 112, 113], "main": [37, 41, 81, 83, 98, 99, 100, 104, 107, 108, 109, 110, 111], "make": [1, 41, 60, 109, 112, 113], "manag": [2, 4, 10, 14, 16, 37, 41, 53, 58, 59, 62, 64, 67, 72, 75, 76, 82, 83, 84, 86, 87, 88, 105, 106, 111, 112], "manage_output": 13, "manageth": 57, "mandatori": [41, 57, 73, 81, 112], "mani": [1, 2, 4, 11, 12, 13, 37, 38, 82, 111, 112, 113], "manipul": 113, "manner": 99, "manual": 109, "map": [1, 2, 11, 12, 13, 55, 57, 60, 69, 76, 81], "mapintstr": 57, "mapper": 92, "mark": 112, "mask": [1, 2, 6, 9, 11, 12, 13, 27, 57, 60, 61, 62, 72, 76, 81, 89, 93, 98, 106, 112], "mask_from_class": 98, "mask_index": [1, 2, 11, 12, 13], "mask_rcnn": 93, "maskrcnn": [62, 98], "match": [72, 105], "max": 108, "max_ikomia_vers": 109, "max_python_vers": 109, "maximum": 76, "mb": 19, "mean": [59, 100, 111], "meaning": [56, 65], "meaningful": [14, 16], "meant": 0, "measur": [13, 35, 51, 55, 69], "measureid": [35, 69], "mechan": [1, 37, 41, 104], "meet": 99, "memori": [19, 60, 113], "merg": 62, "messag": 18, "meta": 109, "metadata": [10, 57, 73, 81], "method": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 81, 82, 84, 99, 109, 111, 112], "metric": [16, 82, 103], "might": [100, 109], "millisecond": [1, 2, 4, 11, 12, 13, 14, 16, 37, 82], "min": 108, "min_ikomia_vers": 109, "min_python_vers": 109, "minarearect": 35, "minim": 105, "minimum": 99, "minor": 112, "miss": 112, "mit": 109, "mix": 105, "mlflow": [4, 82, 111, 112], "mmlab": 112, "mnasnet": 93, "mode": [4, 14, 16, 37, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 72, 75], "model": [7, 64, 82, 92, 101, 103], "model_nam": 93, "model_weight_fil": 111, "modifi": [14, 16, 29, 88], "modul": [5, 41, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 109, 110, 111, 112], "modular": 105, "moment": 35, "monitor": [14, 16, 103, 111], "monochrom": [60, 76], "more": [0, 3, 5, 14, 16, 38, 41, 55, 60, 76, 100, 101, 103, 104, 112], "moreov": [7, 29, 64], "most": [98, 100, 107], "motion": 113, "mukundan": 35, "multi": 54, "multipl": [16, 69, 100, 105, 111], "must": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 37, 38, 39, 40, 53, 56, 57, 58, 59, 60, 64, 65, 70, 71, 72, 73, 76, 77, 78, 82, 88, 89, 108], "my": 104, "my_algo": [107, 109], "my_algorithm": 109, "my_description_1": 16, "my_description_2": 16, "my_first_algo": [107, 108, 109], "my_first_algo_process": [108, 109], "my_first_algo_widget": 108, "my_ikomia_env": 102, "my_workflow": [101, 104], "my_workflow_parameter_name_1": 16, "my_workflow_parameter_name_2": 16, "myfirstalgo": 109, "myfirstalgofactori": 109, "myfirstalgoparam": [107, 108, 109], "myfirstalgowidget": 108, "myfirstalgowidgetfactori": 108, "n": [20, 57, 81, 100], "name": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 20, 35, 37, 38, 40, 41, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 69, 70, 72, 75, 76, 77, 78, 81, 82, 84, 88, 89, 93, 98, 99, 101, 102, 104, 106, 108, 109, 110, 111, 112], "namespac": [99, 100], "nanosecond": 20, "natur": [60, 76], "navig": 113, "nb": [60, 76], "nd": 54, "ndarrai": [16, 89, 94], "necessari": [5, 38, 109], "need": [37, 38, 41, 54, 55, 59, 60, 69, 88, 98, 99, 107, 108, 109, 111, 113], "neg": 37, "network": 103, "neural": 103, "new": [1, 2, 4, 5, 11, 12, 13, 14, 15, 16, 37, 39, 41, 55, 56, 59, 65, 73, 76, 77, 82, 88, 100, 103, 104, 105, 109, 111, 112], "new_sequ": [14, 16], "next": 111, "node": [14, 16, 100], "non": [60, 76], "none": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 69, 70, 72, 73, 75, 76, 77, 78, 82, 94, 99, 108, 109], "normal": 103, "note": [0, 14, 16, 55, 60, 76, 89], "notebook": [98, 99, 100, 104, 107, 109, 111], "noth": [1, 2, 4, 11, 12, 13, 37, 82, 109], "notifi": [1, 2, 4, 11, 12, 13, 37, 82], "notify_video_end": [11, 12, 13], "notify_video_start": [11, 12, 13], "now": [98, 100, 102, 104, 107, 108, 109, 111, 112], "nth": 100, "null": 78, "number": [1, 2, 4, 11, 12, 13, 14, 16, 37, 38, 54, 57, 58, 59, 60, 62, 64, 67, 70, 75, 76, 78, 81, 82, 89, 93, 98, 99, 103, 109, 111], "numer": [56, 65, 79, 82], "numericoutputtyp": [56, 65], "numpi": [1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 16, 54, 57, 60, 62, 72, 76, 81, 89, 98, 100, 107, 109], "o": [0, 4, 5, 22, 37, 38, 39, 60, 83, 85, 112], "obj": [94, 98], "object": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 81, 82, 84, 93, 94, 104, 106, 108, 109, 112, 113], "object_detect": 109, "object_track": 109, "objet": [64, 67], "observ": 111, "obstacl": 113, "obtain": 101, "occur": [112, 113], "ocr": [75, 109], "ocv_blur": [100, 104], "ocv_canni": 104, "ocv_color_convers": 113, "ocv_stack_blur": [99, 101, 113], "offer": [11, 41, 83, 86, 87, 88, 96, 99, 104], "ok": 113, "on_appli": [41, 108], "onc": [4, 5, 15, 38, 82, 109, 111, 113], "one": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 16, 26, 37, 38, 41, 55, 56, 57, 59, 60, 62, 64, 65, 67, 71, 75, 76, 77, 81, 82, 89, 100, 108, 110, 111], "ones": 111, "onli": [1, 2, 4, 5, 11, 12, 13, 14, 15, 16, 26, 28, 29, 30, 31, 32, 33, 34, 37, 55, 56, 59, 60, 65, 89, 93, 104, 112], "onlin": [15, 99, 113], "open": [4, 82, 104, 105, 109, 112, 113], "opencv": [11, 16, 60, 100, 104, 105, 109, 112, 113], "openmmlab": 105, "oper": [14, 16, 27, 76, 105], "opert": 76, "optic": 11, "optical_flow": 109, "option": [0, 16, 38, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 72, 75, 99], "option_nam": [38, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 72, 75], "option_valu": [38, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 72, 75], "ord": 113, "order": [7, 14, 16, 64], "organ": 103, "orient": [8, 35, 67], "origin": [1, 2, 4, 6, 9, 11, 12, 13, 14, 16, 37, 60, 82], "original_repositori": 109, "other": [0, 37, 62, 64, 67, 72, 81, 102, 105, 109, 112, 113], "otherwis": [1, 2, 3, 11, 12, 13, 15, 38, 54, 55, 58, 59, 60, 70, 76, 78], "ouput": [5, 38, 54, 57, 58, 59, 60, 70, 78], "our": [60, 104, 111], "out": [14, 16], "outer": [26, 59], "outlin": [9, 111], "output": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 20, 37, 38, 39, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 74, 75, 76, 78, 81, 82, 83, 84, 86, 89, 94, 101, 106, 107, 109, 111, 112], "output_data": [107, 109], "output_fold": [4, 37, 89, 111], "output_index": [1, 2, 11, 12, 13, 16, 98], "output_obj": 98, "over": [3, 98], "overal": 113, "overlai": [1, 2, 11, 12, 13, 26, 28, 29, 30, 31, 32, 33, 34, 59, 60, 62, 64, 67, 75, 76, 98], "overload": 99, "overrid": [1, 37, 38, 71, 83, 86], "overridden": [0, 1, 2, 3, 6, 7, 8, 9, 12, 13, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 70, 72, 75, 76, 78], "overriden": [1, 2, 4, 11, 12, 13, 37, 38, 40, 41, 54, 57, 58, 59, 70, 78, 82], "overview": [100, 109], "overwrit": 60, "own": [86, 95, 104, 109, 111], "packag": [5, 14, 15, 16, 108, 112], "page": [93, 111], "pair": [1, 2, 4, 7, 11, 12, 13, 14, 16, 37, 38, 40, 53, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 72, 75, 81, 82], "panoptic_segment": 109, "param": [4, 16, 37, 40, 53, 73, 77, 82, 107, 108, 109], "param_1": 101, "param_2": 101, "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 20, 27, 37, 38, 40, 41, 53, 54, 55, 56, 58, 59, 60, 62, 64, 65, 67, 72, 73, 75, 76, 77, 78, 81, 82, 83, 84, 88, 89, 93, 94, 99, 101, 103, 104, 108, 109, 112], "parameters_modifi": [1, 2, 4, 11, 12, 13, 37, 82], "parent": [14, 16, 41, 94, 108], "pars": 89, "part": [107, 108, 110, 112, 113], "parti": 86, "particular": 99, "pascal": 89, "pass": [3, 16, 55, 109, 111, 112], "past": [98, 100, 104, 111], "path": [0, 3, 5, 6, 7, 8, 9, 14, 15, 16, 37, 38, 56, 57, 58, 59, 60, 62, 64, 65, 67, 70, 72, 75, 76, 81, 88, 89, 98, 101, 104, 106, 109, 111, 112], "pattern": [39, 71, 73, 77, 86, 99, 100], "per": [3, 6, 7, 8, 9, 14, 16, 60, 76], "percentag": 19, "perform": [12, 37, 54, 60, 99, 103, 111], "perimet": 35, "perimeter\u00b2": 35, "period": 112, "persist": 11, "perspect": 60, "pi": 35, "picker": 1, "pil": [98, 100, 104, 111], "pip": [102, 104, 109], "pipelin": [14, 16], "pixel": [1, 2, 6, 9, 11, 12, 13, 60, 72, 76, 98], "place": [41, 100, 107, 109], "plai": [76, 113], "plane": [60, 76], "platform": [5, 19, 20, 87, 105, 112], "pleas": [0, 14, 16, 55, 60, 76, 98, 100, 104, 111, 113], "plot": [56, 65, 80], "plottyp": [56, 65], "plugin": [5, 15, 22, 23, 71, 73, 86, 109, 112], "png": [60, 62, 72, 98, 100, 101, 104, 112], "point": [1, 2, 7, 14, 16, 26, 28, 30, 31, 32, 33, 35, 36, 59, 63, 64, 68, 75, 98, 100, 106], "polygon": [1, 26, 28, 29, 30, 31, 32, 33, 34, 57, 59, 72, 74, 75, 81, 89, 100, 106, 112], "polygon_to_mask": 89, "polylin": [32, 59], "popul": [3, 6, 7, 8, 9], "popular": 105, "pose": [64, 100], "posit": [1, 2, 4, 11, 12, 13, 14, 16, 34, 37, 56, 59, 65, 76, 82], "possibl": [21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 55, 56, 58, 59, 62, 64, 65, 67, 72, 75, 92, 112], "post": 103, "power": [105, 109, 111], "practic": 111, "pre": [93, 103, 111], "precis": [20, 56, 65], "predefin": [60, 76], "predict": [6, 7, 8, 62, 64, 67, 75], "prefer": [16, 59], "prepar": 103, "prepare_runtime_env": 88, "preprocess": 103, "press": [41, 113], "previou": [38, 58, 100, 107, 108, 111], "previous": [14, 59, 111], "previsouli": [56, 58, 59, 65], "print": [16, 20, 100, 101, 104, 111, 112], "print_elapsed_time_m": 20, "print_total_elapsed_time_m": 20, "privat": [15, 16, 84, 88, 112], "private_hub": [15, 16, 84], "problem": 99, "proce": [82, 102], "process": [1, 2, 11, 12, 13, 14, 16, 20, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 52, 54, 57, 58, 59, 60, 70, 76, 78, 83, 86, 99, 103, 107, 109, 111, 112], "produc": [55, 56, 65, 98], "program": [17, 99], "progress": [37, 38, 54, 57, 58, 59, 60, 70, 76, 78, 103, 107, 109, 111], "project": [102, 104], "properli": 113, "properti": [2, 3, 6, 7, 8, 9, 12, 26, 28, 30, 31, 32, 33, 34, 42, 44, 45, 46, 47, 49, 56, 59, 60, 61, 63, 65, 66, 68, 74, 76], "propos": 94, "prototyp": 105, "provid": [3, 6, 7, 8, 9, 14, 37, 57, 71, 83, 85, 86, 89, 90, 92, 93, 95, 98, 99, 100, 105, 109, 111], "pt": 111, "public": [15, 73, 84, 88, 109, 112], "public_hub": [15, 16, 84], "pure": [4, 5, 14, 39, 57, 73, 77, 112], "purpos": 94, "put": [37, 108], "py": [38, 99, 108, 109], "pycharm": [99, 104], "pycor": [16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 108], "pydataprocess": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 108], "pyqt": 108, "pyqt5": [41, 78, 95, 108], "pyqttoqt": 108, "pyqtutil": 108, "pyside2": [41, 78], "pytest": 112, "python": [0, 4, 5, 12, 14, 16, 40, 41, 56, 57, 65, 78, 83, 85, 86, 88, 96, 97, 104, 107, 109, 112], "pytorch": 92, "pyutil": [17, 18, 19, 20, 21, 22, 23], "q": 113, "qgridlayout": 108, "qkqva4pg66": 111, "qt": [41, 78, 97, 108], "qtconvers": [41, 78, 108], "qtwidget": 108, "quickli": 105, "quickstart": 104, "quit": 113, "qwidget": [41, 78], "r": [1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 35, 57, 67, 72, 81, 104], "ramakrishnan": 35, "random": [1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 72], "rang": [3, 6, 7, 8, 9, 108, 111], "rapidli": 41, "rate": 103, "raw": [98, 99, 100, 104, 107, 109], "rcnn": 93, "re": [99, 101, 104, 105], "reach": [1, 2, 4, 11, 12, 13, 37, 82, 104], "read": [76, 100, 113], "read_class_nam": [3, 6, 7, 8, 9, 89], "reader": 60, "readi": 109, "real": [111, 113], "realiti": 113, "reason": 111, "recogn": 111, "recognit": 113, "recommend": [37, 41, 102, 104], "rect": 3, "rectangl": [13, 26, 28, 29, 30, 31, 32, 33, 34, 59], "recurs": 16, "red": 113, "ref_image_index": [62, 64, 67, 75], "refer": [15, 59, 62, 64, 67, 75, 99, 103, 111, 113], "refimageindex": 62, "region": [13, 57, 81], "regist": [5, 15, 98, 100, 104, 111], "register_io": 5, "register_task": [5, 15], "registri": [5, 14, 15, 16], "regular": [6, 8, 105], "reimplement": [14, 16, 53, 57], "rel": [89, 109], "releas": [105, 113], "remov": [1, 2, 4, 11, 12, 13, 14, 16, 37, 82, 112], "remove_input": [1, 2, 4, 11, 12, 13, 14, 16, 37, 82], "remove_task": 16, "replac": 102, "repositori": [99, 105, 109], "repres": [1, 2, 11, 12, 13, 57, 75, 81, 89], "represent": [56, 65], "request": [1, 2, 4, 11, 12, 13, 37, 41, 81, 82], "requir": [11, 15, 16, 57, 60, 64, 76, 81, 86, 88, 99, 100, 103, 105, 111], "research": 109, "reserv": [1, 2, 11, 12, 13], "reserve_zero": [1, 2, 11, 12, 13], "reset": [14, 16], "resiz": 103, "resnet": 93, "resnet50": 93, "resnext": 93, "resnext50": 93, "respect": [3, 7, 16, 64, 71, 111], "restart": 113, "result": [1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 37, 98, 99, 103, 107, 109, 111, 113], "results_json": [98, 104, 111], "ret": 113, "retiev": 3, "retinanet": 67, "retriev": [1, 2, 3, 5, 11, 12, 13, 14, 16, 19, 99, 100, 109, 112, 113], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 70, 72, 73, 75, 76, 77, 78, 81, 82, 84, 88, 89, 93, 98, 99, 100, 107, 108, 109, 111], "reus": 101, "rf": 111, "rgb": [98, 113], "rgba": [8, 62, 64, 67, 75], "right": [14, 16], "roboflow": 111, "robot": 113, "roi": [3, 58], "role": 113, "root": [14, 16, 100, 101], "routin": [107, 109], "row": [56, 65, 108], "run": [1, 2, 4, 11, 12, 13, 14, 16, 37, 82, 88, 100, 104, 107, 109, 111, 113], "run_on": [16, 98, 99, 100, 101, 104, 107, 109, 111, 113], "runtim": [1, 2, 4, 11, 12, 13, 14, 37, 38, 54, 57, 58, 59, 70, 78, 82, 104], "same": [1, 3, 4, 6, 7, 8, 9, 11, 13, 16, 37, 77, 82, 89, 99, 100, 107, 108, 111], "sampl": 11, "satisfactori": 111, "save": [0, 4, 14, 16, 37, 38, 40, 53, 56, 57, 58, 59, 60, 62, 64, 65, 67, 72, 75, 81, 99, 104, 109, 111], "scale": 112, "scene": [14, 16], "scheme": [7, 38, 57, 58, 59, 64, 70, 78], "scientif": 35, "scope": 37, "score": 3, "scratch": [14, 16, 93], "script": [99, 101, 102], "seamlessli": 105, "search": [10, 15, 100, 101, 109, 113], "season": 105, "second": [76, 108], "section": 111, "see": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 69, 70, 72, 73, 75, 76, 78, 82, 84, 88, 89, 100, 101, 104, 108, 109, 111], "seem": [1, 2, 11, 12, 13], "seen": [56, 65], "segment": [1, 6, 9, 57, 61, 62, 72, 81, 89, 93, 100, 106, 112, 113], "segmentatio": 9, "segmentation_mask": 57, "segmentation_masks_np": 81, "segmentation_poli": [57, 81], "select": [16, 37, 98, 99, 105], "self": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 69, 70, 72, 73, 75, 76, 77, 78, 82, 107, 108, 109, 111], "selfis_new_sequ": 11, "semant": [6, 9, 57, 72, 81, 89, 106, 112], "semantic_seg_masks_fil": [57, 81], "semantic_segment": [89, 109], "send": [4, 37, 41, 82, 107, 108, 109], "sens": 60, "separ": 112, "sequenc": [1, 4, 14, 16, 37, 76, 82], "sequenti": [14, 16], "seri": 67, "serial": 112, "serializ": 0, "server": 82, "set": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 70, 72, 75, 76, 77, 78, 82, 98, 100, 103, 107, 108, 109, 111, 112], "set_act": [1, 2, 4, 11, 12, 13, 37, 82], "set_action_flag": [1, 2, 4, 11, 12, 13, 37, 82], "set_apply_btn_hidden": 41, "set_arrai": 54, "set_auto_sav": [4, 14, 16, 37], "set_categori": [26, 28, 29, 30, 31, 32, 33, 34], "set_channel_count": [60, 76], "set_class_color": 72, "set_class_nam": 72, "set_color": [3, 6, 8, 9], "set_current_imag": [60, 76], "set_directory_input": 16, "set_exposed_paramet": 14, "set_imag": [60, 76, 107, 109], "set_image_index": 59, "set_image_input": 16, "set_input": [1, 2, 4, 11, 12, 13, 14, 16, 37, 82], "set_input_data_typ": [1, 2, 4, 11, 12, 13, 37, 82], "set_item": [58, 59], "set_keypoint_link": [7, 64], "set_keypoint_nam": [7, 64], "set_layout": [41, 108], "set_mask": [9, 72], "set_nam": [3, 6, 8, 9], "set_new_lay": 59, "set_object_color": 7, "set_object_measur": 55, "set_object_nam": 7, "set_output": [1, 2, 4, 11, 12, 13, 37, 82], "set_output_color_map": [1, 2, 11, 12, 13, 60, 76], "set_output_data_typ": [1, 2, 4, 11, 12, 13, 37, 82], "set_output_fold": [14, 16], "set_output_typ": [56, 65], "set_overlay_mask": [60, 76], "set_param_object": [4, 37, 109], "set_paramet": [1, 2, 4, 11, 12, 13, 16, 37, 82, 99, 100, 101, 104, 112], "set_path": 70, "set_plot_typ": [56, 65], "set_plugins_directori": [5, 15], "set_roi_to_track": 13, "set_valu": [40, 53, 107, 109], "set_video_input": 16, "set_video_path": 76, "set_video_po": 76, "set_whole_image_result": 3, "set_widget": 78, "set_workflow_paramet": 16, "sever": [16, 55, 59, 60, 76, 86, 109], "shape": [26, 28, 29, 30, 31, 32, 33, 34, 48, 62], "share": [5, 57, 81, 101, 105], "short": 109, "short_descript": 109, "should": [1, 2, 11, 12, 13, 14, 15, 16, 26, 28, 29, 30, 31, 32, 33, 34, 38, 40, 41, 54, 57, 58, 59, 60, 70, 71, 78, 98, 104, 111], "show": 100, "showcas": 100, "shown": [75, 111], "signal": 108, "simpl": [16, 100, 109], "simpli": [100, 104], "simplifi": 105, "sinc": [20, 110], "singl": [38, 55, 61, 62, 66, 68, 69, 74, 76, 89, 111], "size": [3, 6, 7, 8, 9, 57, 59, 62, 72, 81, 89, 93, 99, 100, 103, 111], "skip": 112, "sky": 98, "slack": 105, "slot": 108, "small": [14, 108], "snake": 112, "snippet": [98, 100, 104, 111], "so": [1, 2, 11, 12, 13, 16, 29, 54, 55, 60, 89, 92, 100, 111], "softwar": 59, "solid": 35, "solut": [105, 111, 113], "solv": 99, "some": [37, 41, 57, 70, 73, 76, 100, 111, 113], "someon": 99, "sort": [3, 99], "sourc": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 37, 57, 76, 81, 82, 89, 100, 102, 104, 105, 109], "source_format": 57, "source_index": 14, "sparseinst": [62, 98, 112], "special": [56, 65, 86], "specif": [1, 2, 4, 11, 12, 13, 16, 24, 29, 37, 38, 40, 41, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 72, 75, 76, 81, 82, 84, 98, 99, 104, 107, 109, 111, 113], "specifi": [2, 14, 16, 55, 57, 81, 98, 100, 104, 111], "speed": 112, "spin": 108, "spin_threshold1": 108, "spin_threshold2": 108, "spinwindows": 108, "split": 103, "squar": [33, 59], "src": 16, "src_imag": [107, 109], "stack": [38, 57, 58, 59, 70, 78], "stackblur": 112, "stage": 111, "stai": 105, "standard": [20, 60, 76], "start": [2, 4, 7, 11, 12, 13, 14, 16, 20, 37, 63, 64, 76, 82, 98, 100, 103, 109, 111, 112, 113], "start_video": 76, "start_video_writ": 76, "state": [23, 37, 105], "static": [4, 35, 37, 38, 54, 57, 58, 59, 60, 70, 76, 78, 82, 99], "staticmethod": 99, "step": [11, 37, 38, 54, 57, 58, 59, 60, 62, 64, 67, 70, 75, 76, 78, 82, 102, 104, 107, 109], "stop": [1, 2, 4, 11, 12, 13, 14, 16, 37, 76, 82], "stop_video": 76, "stop_video_writ": 76, "store": [0, 1, 3, 5, 11, 15, 38, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 76, 82, 85, 88, 98, 104, 107, 109], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 41, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 69, 70, 72, 75, 76, 78, 81, 82, 84, 88, 89, 93, 94, 99, 107, 109, 113], "stream": [14, 16, 20, 76, 111], "streamlin": 109, "strict": [7, 64], "string": [0, 1, 2, 4, 5, 11, 12, 13, 15, 20, 37, 38, 40, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 72, 75, 81, 82, 107, 109, 111], "strongli": 104, "structur": [0, 7, 14, 16, 39, 40, 53, 54, 56, 57, 60, 64, 65, 71, 73, 76, 77, 81, 89, 90, 92, 103, 106, 107, 109, 112], "studio": [1, 2, 10, 11, 12, 13, 14, 16, 38, 41, 53, 54, 57, 58, 59, 60, 62, 70, 71, 75, 76, 78, 83, 108, 109], "stuff": [6, 37, 62, 98], "style": 112, "sub": [38, 110], "subfold": 111, "succe": 15, "succeed": 88, "suit": 111, "suitabl": 99, "super_resolut": 109, "support": [17, 104, 105, 112], "sure": [100, 104, 109, 113], "surfac": 35, "surveil": [111, 113], "switch": 112, "synchron": 112, "syntax": 99, "system": [1, 2, 10, 11, 12, 13, 16, 37, 39, 40, 41, 71, 73, 77, 83, 86, 100, 105, 111, 112, 113], "t": [1, 2, 8, 11, 12, 13, 37, 55, 60, 67, 99, 100, 108, 109, 111], "tabl": [56, 65, 75], "take": [98, 107, 108, 109], "target": [14, 16, 22, 100], "target_index": 14, "target_param_nam": 14, "task": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 24, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 70, 71, 72, 73, 75, 76, 77, 78, 81, 82, 83, 86, 89, 94, 95, 99, 100, 101, 103, 104, 109, 111, 112], "task_id": [14, 16], "task_index": 16, "task_input": [107, 109], "task_nam": [16, 62, 64, 67, 75, 101], "task_obj": [16, 84], "task_output": [107, 109], "task_output_index": 14, "task_parameter_name_1": 16, "task_parameter_name_2": 16, "tasknam": 62, "taskparam": 82, "techniqu": [111, 113], "templat": [56, 65], "tensorboard": [4, 82, 111, 112], "term": [38, 57, 58, 59, 70, 78], "termin": 109, "test": [14, 99, 100, 112], "text": [3, 6, 7, 8, 9, 26, 28, 29, 30, 31, 32, 33, 34, 59, 74, 75, 89, 99, 100, 106, 109, 111, 112], "than": [14, 16], "thank": [16, 100, 108], "thei": [16, 59, 60], "them": [16, 57, 81, 82, 88, 104, 111, 112], "theori": 35, "thi": [1, 2, 3, 4, 7, 11, 12, 13, 14, 15, 16, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 55, 56, 57, 58, 59, 60, 62, 64, 65, 69, 70, 71, 72, 73, 76, 77, 78, 81, 82, 83, 86, 88, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113], "thing": [6, 62], "third": 86, "those": [16, 38, 54, 57, 58, 59, 70, 78, 88, 110], "thousand": 111, "three": 86, "threshold1": [104, 107, 108, 109], "threshold2": [104, 107, 108, 109], "through": [1, 6, 8, 37, 60, 83, 99, 105, 111], "thrown": 18, "thu": [14, 16, 37, 72], "time": [1, 2, 4, 11, 12, 13, 14, 16, 20, 37, 56, 65, 76, 82, 99, 100, 107, 111, 112, 113], "timeout": [76, 112], "timer": 20, "timestamp": [14, 111], "titl": [94, 109, 113], "to_json": [0, 38, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 72, 75, 98, 100, 104, 111], "token": 112, "tool": [41, 96, 99, 100, 103, 105, 109, 111], "toolbar": 59, "top": [3, 6, 7, 8, 26, 28, 29, 30, 31, 32, 33, 34, 59, 60, 62, 64, 67, 75, 76], "torch": [92, 93], "total": [11, 12, 13, 14, 16, 19, 76, 111], "toward": [60, 76], "track": [13, 29, 113], "train": [4, 57, 81, 82, 91, 93, 109, 112], "train_mod": 93, "train_yolo_v7": 111, "trainprocess": 4, "transfer": 93, "transit": 112, "transpar": [1, 2, 6, 9, 11, 12, 13, 60, 76, 105], "transunet": 72, "tree": 109, "tri": 15, "true": [0, 1, 2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 54, 55, 58, 59, 60, 70, 76, 78, 81, 82, 84, 88, 93, 98, 99, 100, 104, 107, 109, 111, 113], "truth": [57, 81], "try": [15, 16, 84, 88, 108, 113], "tune": 111, "tupl": [1, 2, 3, 7, 11, 12, 13, 14, 16, 57, 64, 81], "tutori": [104, 111, 113], "two": [16, 40, 63, 71, 86, 100], "txt": 111, "txt_path": 89, "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 43, 50, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 74, 75, 76, 78, 79, 80, 81, 82, 84, 86, 88, 89, 94, 98, 100, 109, 112], "typic": 62, "typo": 112, "uint8": 62, "unabl": 113, "understand": [100, 104, 111], "unet": [72, 98], "unformat": 0, "uniqu": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 26, 28, 29, 30, 31, 32, 33, 34, 37, 57, 81, 84], "uniquen": 13, "unit": [38, 54, 57, 58, 59, 60, 70, 76, 78], "univers": 111, "unseen": 103, "untitl": [16, 88], "up": [103, 105, 109, 112, 113], "updat": [1, 4, 15, 37, 41, 60, 82, 87, 105, 112], "update_algorithm": 15, "update_start_tim": [14, 16], "update_static_output": [1, 2, 4, 11, 12, 13, 37, 82], "upper": 112, "url": [16, 37, 76, 98, 99, 104, 107, 109], "us": [0, 1, 2, 3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70, 71, 74, 76, 78, 81, 82, 83, 86, 92, 95, 98, 99, 100, 103, 104, 105, 108, 109, 111, 112, 113], "usag": 14, "use_pretrain": 93, "user": [0, 1, 37, 38, 39, 41, 54, 55, 56, 58, 59, 60, 65, 71, 73, 76, 77, 83, 112, 113], "user_fold": [14, 16], "usual": 86, "util": [17, 18, 19, 20, 21, 22, 23, 94, 95, 98, 99, 100, 104, 107, 108, 109, 110, 111, 112, 113], "v": 104, "v7": [98, 104, 111], "val": 111, "valid": [15, 16, 38, 54, 60, 70, 76, 78, 103], "valu": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 53, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 69, 70, 72, 73, 75, 76, 77, 78, 79, 81, 82, 98, 101, 107, 108, 109], "vari": [57, 81, 98], "variabl": [0, 53], "variou": [6, 37, 56, 65, 89, 94, 96, 103, 104, 113], "ve": 104, "vector": 11, "veri": [7, 14, 64, 108], "version": [15, 23, 89, 109, 112], "vertic": [26, 31, 32, 59], "vgg": 89, "via": 89, "video": [1, 4, 11, 12, 13, 14, 16, 37, 59, 70, 76, 82, 100, 106, 111, 112, 113], "video_binari": 76, "video_label": 76, "videocaptur": 113, "viewer": 113, "virtual": [39, 40, 57, 73, 77, 104, 113], "visibl": 41, "vision": [3, 6, 7, 8, 9, 14, 16, 98, 105, 111, 112, 113], "visit": 99, "visual": [3, 6, 7, 8, 9, 11, 14, 16, 26, 28, 30, 31, 32, 33, 34, 37, 42, 44, 45, 46, 47, 49, 55, 94, 100, 103, 109, 111, 112], "voc": 89, "volum": [37, 38, 57, 58, 59, 60, 70, 76, 78], "volume_binari": [60, 76], "volume_label": [60, 76], "vscode": 99, "w": [8, 57, 67, 81], "w8grf6dmcf": 111, "wa": 59, "wai": [11, 14, 26, 28, 29, 30, 31, 32, 33, 34, 53, 69, 100, 105, 109], "waitkei": 113, "want": [14, 16, 29, 60, 76, 81, 86, 98, 99, 100, 101, 103, 108], "warn": [60, 112], "we": [3, 29, 60, 81, 83, 98, 99, 103, 104, 108, 109, 110, 111, 112, 113], "web": 100, "webcam": 76, "weight": [82, 111], "well": 111, "were": 113, "wf": [98, 99, 100, 101, 104, 107, 109, 111, 113], "what": [109, 111], "when": [1, 2, 3, 4, 11, 12, 13, 16, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 54, 60, 76, 82, 86, 98, 99, 100, 109, 112, 113], "where": [0, 3, 5, 6, 7, 8, 9, 14, 15, 16, 18, 29, 37, 62, 64, 67, 72, 75, 81, 98, 100, 104, 110, 111], "wherea": 113, "whether": [0, 1, 2, 3, 4, 11, 12, 13, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 54, 57, 58, 59, 60, 70, 76, 78, 81, 82, 105], "which": [1, 3, 14, 16, 37, 38, 54, 55, 57, 58, 59, 60, 70, 78, 81, 98, 99, 100, 108, 109, 111], "while": [3, 6, 7, 8, 9, 112, 113], "white": [1, 2, 11, 12, 13], "whole": [0, 1, 2, 3, 4, 11, 12, 13, 14, 37, 54, 81, 82], "whose": [5, 15], "why": [99, 111], "wide": [111, 113], "widget": [1, 2, 4, 11, 12, 13, 37, 41, 71, 77, 78, 82, 83, 86, 95, 97], "width": [1, 2, 6, 7, 8, 11, 12, 13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 57, 59, 62, 64, 67, 75, 76, 81, 89, 98, 104], "window": [41, 102, 104, 105, 112, 113], "windows": [108, 109], "within": [16, 61, 63, 66, 68, 74, 111], "without": [2, 4, 14, 37, 82, 105], "won": [60, 99], "worflow": [16, 83, 113], "work": [99, 100, 101, 111], "workflow": [0, 1, 4, 5, 14, 15, 26, 28, 29, 30, 31, 32, 33, 34, 37, 40, 58, 59, 60, 61, 63, 66, 68, 74, 76, 78, 82, 85, 86, 94, 98, 99, 111, 112], "workflow_finish": [4, 37], "workflow_path": 88, "workflow_start": [4, 37], "world": 35, "worri": 105, "wrap": [97, 108], "writ": 76, "write": [76, 112], "write_imag": 76, "writer": [60, 112], "wrong": 112, "www": 100, "x": [6, 7, 8, 26, 28, 30, 31, 32, 33, 34, 36, 57, 59, 64, 67, 81, 98, 104, 112], "x_center": 89, "xy": 89, "y": [6, 7, 8, 26, 28, 30, 31, 32, 33, 34, 36, 57, 59, 64, 67, 81, 98, 104], "y_center": 89, "year": 109, "yet": [12, 16], "yolact": 62, "yolo": [67, 89, 98, 104, 105, 111], "yolov7": [98, 104, 111, 112], "yolov7_list": 104, "yom": 98, "you": [0, 1, 5, 14, 15, 16, 55, 59, 72, 83, 86, 88, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 111, 113], "your": [14, 16, 58, 86, 95, 99, 104, 105], "z": [38, 57, 58, 59, 70, 78], "zeo": 55, "zero": [1, 2, 4, 11, 12, 13, 14, 16, 37, 60, 62, 64, 67, 75, 76, 82, 84], "zip": 111, "\u00b5": 20}, "titles": ["DataDictIO", "C2dImageInteractiveTask", "C2dImageTask", "CClassificationTask", "CDnnTrainTask", "CIkomiaRegistry", "CInstanceSegmentationTask", "CKeypointDetectionTask", "CObjectDetectionTask", "CSemanticSegmentationTask", "CTaskInfo", "CVideoOFTask", "CVideoTask", "CVideoTrackingTask", "CWorkflow", "IkomiaRegistry", "Workflow", "ApiLanguage", "CException", "CMemoryInfo", "CTimer", "CpuArch", "OSType", "PluginState", "ActionFlag", "AlgoType", "CGraphicsComplexPolygon", "CGraphicsConversion", "CGraphicsEllipse", "CGraphicsItem", "CGraphicsPoint", "CGraphicsPolygon", "CGraphicsPolyline", "CGraphicsRectangle", "CGraphicsText", "CMeasure", "CPointF", "CWorkflowTask", "CWorkflowTaskIO", "CWorkflowTaskIOFactory", "CWorkflowTaskParam", "CWorkflowTaskWidget", "GraphicsEllipseProperty", "GraphicsItem", "GraphicsPointProperty", "GraphicsPolygonProperty", "GraphicsPolylineProperty", "GraphicsRectProperty", "GraphicsShape", "GraphicsTextProperty", "IODataType", "MeasureId", "TaskType", "TaskParam", "CArrayIO", "CBlobMeasureIO", "CDataStringIO", "CDatasetIO", "CGraphicsInput", "CGraphicsOutput", "CImageIO", "CInstanceSegmentation", "CInstanceSegmentationIO", "CKeypointLink", "CKeypointsIO", "CNumericIO", "CObjectDetection", "CObjectDetectionIO", "CObjectKeypoints", "CObjectMeasure", "CPathIO", "CPluginProcessInterface", "CSemanticSegmentationIO", "CTaskFactory", "CTextField", "CTextIO", "CVideoIO", "CWidgetFactory", "CWidgetOutput", "NumericOutputType", "PlotType", "IkDatasetIO", "TrainProcess", "PyCore", "Task", "DatadictIO", "PyDataProcess", "Registry", "Workflow", "Dataset", "DatasetIO", "DnnTrain", "TorchDatasetMapper", "Torchvision models", "DisplayIO", "PyQtUtils", "PyUtils", "QtConversion", "Input/Output management", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">ik</span></code> auto-completion system", "Going deeper with workflows", "Save and load your workflow", "How to create a virtual environment", "First steps in Image Classification with Ikomia API", "Getting Started", "Ikomia API Documentation", "Specific I/O for your algorithm", "How to add parameters to your algorithm", "How to make a nice widget for your algorithm", "Create and integrate your algorithm in workflows", "API Reference", "First Steps in Object Detection with Ikomia API", "Release Notes", "First Steps with Camera Stream Processing with Ikomia"], "titleterms": {"1": [100, 102, 104], "2": [100, 102, 104], "3": [100, 102], "4": 100, "5": 100, "6": 100, "By": 100, "The": [99, 105, 111], "about": 105, "actionflag": 24, "activ": 102, "ad": 108, "add": [100, 107], "advanc": 104, "algorithm": [99, 100, 104, 106, 107, 108, 109, 111], "algotyp": 25, "alreadi": 102, "api": [103, 104, 105, 110, 111], "apilanguag": 17, "appli": 100, "approach": 100, "auto": [99, 100], "base": 108, "basic": [104, 113], "batch": 100, "best": 98, "blur": 113, "bound": 100, "box": 100, "buffer": 100, "c2dimageinteractivetask": 1, "c2dimagetask": 2, "camera": 113, "carrayio": 54, "cblobmeasureio": 55, "cclassificationtask": 3, "cdatasetio": 57, "cdatastringio": 56, "cdnntraintask": 4, "cexcept": 18, "cgraphicscomplexpolygon": 26, "cgraphicsconvers": 27, "cgraphicsellips": 28, "cgraphicsinput": 58, "cgraphicsitem": 29, "cgraphicsoutput": 59, "cgraphicspoint": 30, "cgraphicspolygon": 31, "cgraphicspolylin": 32, "cgraphicsrectangl": 33, "cgraphicstext": 34, "cikomiaregistri": 5, "cimageio": 60, "cinstancesegment": 61, "cinstancesegmentationio": 62, "cinstancesegmentationtask": 6, "ckeypointdetectiontask": 7, "ckeypointlink": 63, "ckeypointsio": 64, "classif": 103, "cli": 109, "cmeasur": 35, "cmemoryinfo": 19, "cnumericio": 65, "cobjectdetect": 66, "cobjectdetectionio": 67, "cobjectdetectiontask": 8, "cobjectkeypoint": 68, "cobjectmeasur": 69, "code": [104, 107], "common": [98, 106], "complet": [99, 100], "conclus": [104, 111], "connect": [100, 108], "cpathio": 70, "cpluginprocessinterfac": 71, "cpointf": 36, "cpuarch": 21, "creat": [100, 102, 109], "creation": 109, "csemanticsegmentationio": 72, "csemanticsegmentationtask": 9, "ctaskfactori": 73, "ctaskinfo": 10, "ctextfield": 74, "ctextio": 75, "ctimer": 20, "custom": [104, 111], "cvideoio": 76, "cvideooftask": 11, "cvideotask": 12, "cvideotrackingtask": 13, "cwidgetfactori": 77, "cwidgetoutput": 78, "cworkflow": 14, "cworkflowtask": 37, "cworkflowtaskio": 38, "cworkflowtaskiofactori": 39, "cworkflowtaskparam": 40, "cworkflowtaskwidget": 41, "datadictio": [0, 85], "dataset": 89, "datasetio": 90, "deeper": 100, "detect": [98, 111, 113], "dict": 100, "directori": 102, "displai": 100, "displayio": 94, "dnntrain": 91, "document": 105, "environ": 102, "estim": 98, "explan": 100, "export": 104, "face": 113, "featur": 105, "first": [103, 111, 113], "folder": 100, "friend": 98, "from": [100, 104, 113], "get": 104, "go": 100, "graphic": 100, "graphicsellipseproperti": 42, "graphicsitem": 43, "graphicspointproperti": 44, "graphicspolygonproperti": 45, "graphicspolylineproperti": 46, "graphicsrectproperti": 47, "graphicsshap": 48, "graphicstextproperti": 49, "haven": 102, "how": [102, 107, 108], "hub": 104, "i": [98, 106], "ik": 99, "ikdatasetio": 81, "ikomia": [103, 104, 105, 109, 111, 113], "ikomiaregistri": 15, "imag": [98, 100, 103], "implement": 108, "import": 100, "infer": 103, "input": 98, "instal": [102, 104], "instanc": 98, "integr": 109, "iodatatyp": 50, "json": [100, 104], "kei": 105, "load": 101, "make": 108, "manag": [98, 100], "manual": 100, "measureid": 51, "model": [93, 111], "modifi": 101, "name": 100, "new": 102, "nice": 108, "note": 112, "numericoutputtyp": 79, "o": [98, 106], "object": [98, 100, 111], "ostyp": 22, "output": [98, 100], "packag": 102, "paramet": [100, 107], "path": 100, "plottyp": 80, "pluginst": 23, "pose": 98, "pre": 104, "print": 98, "problem": 111, "process": [100, 108, 113], "project": 105, "pycor": 83, "pydataprocess": 86, "pyqtutil": 95, "pyutil": 96, "qtconvers": 97, "refer": 110, "registri": 87, "releas": 112, "requisit": 104, "resourc": 113, "result": [100, 104], "run": 101, "save": 101, "search": 99, "segment": 98, "select": 102, "semant": 98, "set": [99, 104], "singl": 100, "specif": 106, "start": 104, "step": [100, 103, 111, 113], "stream": 113, "structur": [99, 104], "system": 99, "t": 102, "task": 84, "taskparam": 53, "tasktyp": 52, "test": [111, 113], "tip": 113, "torchdatasetmapp": 92, "torchvis": 93, "train": [103, 111], "trainprocess": 82, "troubleshoot": 113, "tune": 100, "url": 100, "us": 107, "usag": 104, "virtual": 102, "virtualenv": 102, "webcam": 113, "widget": 108, "without": 113, "workflow": [16, 88, 100, 101, 104, 107, 109, 113], "you": 102, "your": [98, 100, 101, 102, 106, 107, 108, 109, 111, 113]}})